<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jack·S Blog</title>
  
  <subtitle>任何事情都应该去尝试一下  因为你无法知道什么样的事或者什么样的人将会改变你的一生</subtitle>
  <link href="/jacks/atom.xml" rel="self"/>
  
  <link href="https://www.51201314.me/jacks/"/>
  <updated>2019-06-27T00:26:09.067Z</updated>
  <id>https://www.51201314.me/jacks/</id>
  
  <author>
    <name>Jack·S</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Adobe Premiere去除字幕和logo的方法</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2019/06/27/Adobe-PR%E5%8E%BB%E9%99%A4%E5%AD%97%E5%B9%95%E5%92%8Clogo%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2019/06/27/Adobe-PR去除字幕和logo的方法/</id>
    <published>2019-06-26T22:55:38.000Z</published>
    <updated>2019-06-27T00:26:09.067Z</updated>
    
    <content type="html"><![CDATA[<p>对视频的剪辑我一般都使用PR来做，比如加一些字幕或者logo。在剪完后，我习惯性的会删除一些使用完的素材，比如最初的视频。<br>时间久了想重新剪一些新视频，发现只有使用后来导出带有字幕或者logo图片的素材。<br>如果遇到这个情况我们还是有办法补救的。<br>基本的思路就是<code>蒙蔽+中间值</code>。</p><a id="more"></a><p>基于以上思路除了PR中可以实现，有类似的效果参数比如AE中都是可以做到的。<br>以下主要说一下PR，RP作为一款专业的剪辑软件，除了常用的剪辑能力，还提供了大量的视频效果函数，我们只需要双击或者拖拽到目标视频就可以直接使用。</p><h2 id="第一步-叠加素材"><a href="#第一步-叠加素材" class="headerlink" title="第一步 叠加素材"></a>第一步 叠加素材</h2><p>把需要处理的素材（视频或者图片都可以）在V1和V2轨道分别拖拽一次。并暂时关闭轨道V1的输出（划掉小眼睛）。<br><img src="https://www.51201314.me/OSS/blog/img/pr-2019-06-27_073502.png" alt></p><h2 id="第二步-添加效果"><a href="#第二步-添加效果" class="headerlink" title="第二步 添加效果"></a>第二步 添加效果</h2><p>主要添加以下两个效果</p><h3 id="裁剪"><a href="#裁剪" class="headerlink" title="裁剪"></a>裁剪</h3><p>选择<code>效果-视频效果-变换-裁剪</code>对V2轨道上的素材进行裁剪，只保留等会需要去除的部分。<br>可以适当根据素材情况调整<code>羽化边缘</code>参数。<br><img src="https://www.51201314.me/OSS/blog/img/pr-2019-06-27_073639.png" alt></p><h3 id="中间值"><a href="#中间值" class="headerlink" title="中间值"></a>中间值</h3><p>选择<code>效果-视频效果-杂色与颗粒-中间值</code>同样对V2轨道上的素材进行调整影响的半径范围。<br>在这里选择<code>效果-视频效果-杂色与颗粒-蒙尘与划痕</code>也可以达到需要的效果。如果知道两者具体的区别可以在下方留言给我。<br><img src="https://www.51201314.me/OSS/blog/img/pr-2019-06-27_075224.png" alt></p><h2 id="第三步-调整参数"><a href="#第三步-调整参数" class="headerlink" title="第三步 调整参数"></a>第三步 调整参数</h2><p>根据实际情况调整两个效果的参数值，达到自己想要的效果。<br>以下是前后加效果的区别。<br><img src="https://raw.githubusercontent.com/jingxinxin/OSS/master/blog/img/pro-GIF.gif" alt><br>最后可以再补上其他的文字或者图片，以最大化处理细微差异。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对视频的剪辑我一般都使用PR来做，比如加一些字幕或者logo。在剪完后，我习惯性的会删除一些使用完的素材，比如最初的视频。&lt;br&gt;时间久了想重新剪一些新视频，发现只有使用后来导出带有字幕或者logo图片的素材。&lt;br&gt;如果遇到这个情况我们还是有办法补救的。&lt;br&gt;基本的思路就是&lt;code&gt;蒙蔽+中间值&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="江山设计" scheme="https://www.51201314.me/jacks/categories/%E6%B1%9F%E5%B1%B1%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Adobe" scheme="https://www.51201314.me/jacks/tags/Adobe/"/>
    
      <category term="剪辑" scheme="https://www.51201314.me/jacks/tags/%E5%89%AA%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>六一小玩具之Raspberry Pi Zero W(树莓派)</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2019/06/09/%E5%85%AD%E4%B8%80%E5%B0%8F%E7%8E%A9%E5%85%B7%E4%B9%8BRaspberry-Pi-Zero-W-%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2019/06/09/六一小玩具之Raspberry-Pi-Zero-W-树莓派/</id>
    <published>2019-06-09T09:20:48.000Z</published>
    <updated>2019-06-16T09:39:12.116Z</updated>
    
    <content type="html"><![CDATA[<p>无论岁月在何时，人们心中永远会住着一个小时候的自己。爱玩乃是人之天性，这不六一我就从某宝淘了一个小玩具人称<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQTAlOTElRTglOEUlOTMlRTYlQjQlQkUvODA0Mjc/ZnI9YWxhZGRpbg==" title="https://baike.baidu.com/item/%E6%A0%91%E8%8E%93%E6%B4%BE/80427?fr=aladdin">树莓派<i class="fa fa-external-link"></i></span>，不知道的人，第一次听起来一定会想成一类美食。菠萝派啊，香蕉派啊，苹果派啊。。。而这里的树莓派是为学习计算机编程教育而设计的微型卡片电脑，其系统基于Linux。</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucmFzcGJlcnJ5cGkub3JnLw==" title="https://www.raspberrypi.org/">官网开道<i class="fa fa-external-link"></i></span><br>今天就主要记录一下基本的知识和自我理解和使用方法。<br>以下是Zero W的配置：<br><img src="https://www.51201314.me/OSS/blog/img/shumeipaipz.jpg" alt="配置"><br>zero的尺寸可以说是非常小巧了：<code>65mm x 30mm x 5mm</code></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>1 raspberry系统<span class="exturl" data-url="aHR0cHM6Ly93d3cucmFzcGJlcnJ5cGkub3JnL2Rvd25sb2Fkcy8=" title="https://www.raspberrypi.org/downloads/">官方下载<i class="fa fa-external-link"></i></span><br>2 Etcher烤制软件（当然也可以用其他方法格式化SD卡再通过命令，这个是非常简单的方式）<br>3 Raspberry Pi Zero W<br>4 最好8G以上的SD卡<br>5 microUSB To U线<br>6 读卡器</p><h1 id="装系统"><a href="#装系统" class="headerlink" title="装系统"></a>装系统</h1><p>我用的是官网推荐的<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFsZW5hLmlvL2V0Y2hlci8=" title="https://www.balena.io/etcher/">Etcher<i class="fa fa-external-link"></i></span>来写入系统，网上也有一些教程使用Win32 Disk Imager，都可以。<br><img src="https://www.51201314.me/OSS/blog/img/Etcher.jpg" alt="Etcher"></p><h1 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h1><p>一般的树莓派都可以通过有线或者USB转换接头连接，如果买的是带W（WIFI）的还可以通过无线来访问。</p><h2 id="无线"><a href="#无线" class="headerlink" title="无线"></a>无线</h2><p>在SD卡中新建文件，命名为wpa_supplicant.conf，输入如下内容并保存。可以让树莓派自动连接自家局域网wifi。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">country</span>=CN</span><br><span class="line"><span class="attribute">ctrl_interface</span>=DIR=/var/run/wpa_supplicant <span class="attribute">GROUP</span>=netdev</span><br><span class="line"><span class="attribute">update_config</span>=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">  <span class="attribute">ssid</span>=<span class="string">"WIFI名字"</span></span><br><span class="line">  <span class="attribute">psk</span>=<span class="string">"密码"</span></span><br><span class="line">  <span class="attribute">key_mgmt</span>=WPA-PSK</span><br><span class="line">  <span class="attribute">priority</span>=1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着在SD卡根目录新建ssh文件，内容为空。<code>touch ssh</code> 以便我们在同一局域网中通过<code>ssh pi@树莓派ip</code>的方式来访问我们的小玩具。<br>至于ip通过访问路由器可以很方便查到，这里就一笔带过。当然也可以直接<code>ssh pi@raspberrypi.local</code>确保wifi连接成功，不用查ip也行。<br>登陆成功后会提示请修改默认密码，默认密码是”raspberry”（可在raspi-config中修改）。树莓派的Raspbian系统root用户默认是禁用状态，且没有密码，所以要先设置个密码，然后开启才能正常使用。<br>使用pi账户进行登陆命令行，执行命令：<code>sudo passwd root</code>设置root用户密码，然后在执行<code>sudo passwd --unlock root</code>开启root账户，在使用<code>su root</code>是否生效。<br>重新锁定root账户可执行命令：<code>sudo passwd --lock root</code></p><p><img src="https://www.51201314.me/OSS/blog/img/pi-shell.jpg" alt="pi-shell"></p><h2 id="有线"><a href="#有线" class="headerlink" title="有线"></a>有线</h2><p><img src="https://www.51201314.me/OSS/blog/img/shumeipzero.jpg" alt><br>如图所示我们可以通过数据线连接<code>Micro USB Data Port</code>来进行供电和数据的访问，而<code>Micro USB 5V Power Input</code>主要是用来供电的。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>可以通过<code>raspi-config</code>命令在shell下修改，也可以等远程连接桌面图形交互修改。</p><ul><li>容量扩展</li><li>更改系统时区</li><li>更改系统密码</li><li>换源</li></ul><p><code>sudo passwd root</code>设置root用户密码</p><p>如果你的版本是。。。。就可以通过VNC远程桌面连接，现在的版本预装了<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVhbHZuYy5jb20v" title="https://www.realvnc.com/">realVNC<i class="fa fa-external-link"></i></span>服务端如果需要加入图形界面，则可以通过raspi-config命令在<code>Interfacing OptionsC &gt; VNC &gt; Yes</code>中开启VNC连接，再直接下载Viewer端连接即可。<br>输入密码<br><img src="https://www.51201314.me/OSS/blog/img/vnc.jpg" alt="VNC连接树莓派"></p><p>编辑<code>/etc/apt/sources.list</code>文件。用以下内容取代更换软件源：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="symbol">http:</span>/<span class="regexp">/mirrors.ustc.edu.cn/raspbian</span><span class="regexp">/raspbian/</span> stretch main non-free contrib</span><br><span class="line">deb-src <span class="symbol">http:</span>/<span class="regexp">/mirrors.ustc.edu.cn/raspbian</span><span class="regexp">/raspbian/</span> stretch main non-free contrib</span><br></pre></td></tr></table></figure><p>编辑<code>/etc/apt/sources.list.d/raspi.list</code>文件。用以下内容取代更换系统源：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.ustc.edu.cn<span class="regexp">/archive.raspberrypi.org/</span>debian<span class="regexp">/ stretch main ui</span></span><br></pre></td></tr></table></figure><p>如果权限不够可以先<code>sudo bash</code>提权<br>编辑此文件后，请使用<code>sudo apt-get update</code>命令，更新软件列表。</p><p>最后一张桌面图结尾<br><img src="https://www.51201314.me/OSS/blog/img/desk-pi.jpg" alt="桌面"></p><p><span class="exturl" data-url="aHR0cDovL2Rvd25sb2Fkcy5yYXNwYmVycnlwaS5vcmcvcmFzcGJpYW5fbGl0ZS9pbWFnZXMv" title="http://downloads.raspberrypi.org/raspbian_lite/images/">树莓派历史版本镜像<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2Rvd25sb2Fkcy5yYXNwYmVycnlwaS5vcmcvcmFzcGJpYW5fbGl0ZS9pbWFnZXMvcmFzcGJpYW5fbGl0ZS0yMDE3LTA3LTA1Lw==" title="http://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2017-07-05/">raspbian-jessie最后的版本<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3NodW1laXBhaS5ueGV6LmNvbQ==" title="http://shumeipai.nxez.com">中文社区学习站点——树莓派实验室<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无论岁月在何时，人们心中永远会住着一个小时候的自己。爱玩乃是人之天性，这不六一我就从某宝淘了一个小玩具人称&lt;a href=&quot;https://baike.baidu.com/item/%E6%A0%91%E8%8E%93%E6%B4%BE/80427?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;树莓派&lt;/a&gt;，不知道的人，第一次听起来一定会想成一类美食。菠萝派啊，香蕉派啊，苹果派啊。。。而这里的树莓派是为学习计算机编程教育而设计的微型卡片电脑，其系统基于Linux。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Raspberry" scheme="https://www.51201314.me/jacks/tags/Raspberry/"/>
    
      <category term="树莓派" scheme="https://www.51201314.me/jacks/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>维度的演变</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2017/01/17/%E7%BB%B4%E5%BA%A6%E7%9A%84%E6%BC%94%E5%8F%98/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2017/01/17/维度的演变/</id>
    <published>2017-01-17T01:50:28.000Z</published>
    <updated>2019-06-08T19:49:18.941Z</updated>
    
    <content type="html"><![CDATA[<p>在网上看过很多关于维度的解释和演示，也看过很多书籍，电视纪录片等，从一维到三维固然好理解，但是到了更高的维度就让人很难去理解，当我们慢慢对一些定理概念，发生更高更客观的认识的时候，才发现很多事就变得更好理解。很多时候我们所认为不可理解的事，大多数情况可能都是我们之前所奉承的理论出了问题，随着物质的演绎推进，我们不得不改变或者进化之前的认知，这是一种思维进化的过程。人的肉体可能目前只能局限于三维之中，但思维也许可以理解和进化到更高的层次。</p><a id="more"></a><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>时间：时间是什么，时间应该是任何物质演变的过程<br>单体：维度中存在的任意一个物体，每个维度的单体，都可以向任意的角度方位状态进行演变，它们演变的过程集合轨迹，将形成下一维度的单体；如果单体有感知能力的话，高维单体可以感知低维和自身维度单体的存在，但不能感知高于自己的维度；单体是构成维度空间的基本单位<br>维度：由无数个单体发生演变组成的空间<br>演变：世界没有绝对的静止，所谓静止都是相对的，所有物体都是自始自终不停不断的演变，或泯灭或发生<br>维度状态：维度空间中所有单体状态演变的过程，从三维中理解就是，任意一个人的任意一个动作，都发生了维度动态，其他维度自行脑补<br>演变过程：演变过程是所有单体拥有的，任何阶段，前一个状态和后一个状态不一致，都发生了演变过程，比如从黑点，变成了红点，从一个坐标点移动到了另一个坐标点</p><h1 id="一维"><a href="#一维" class="headerlink" title="一维"></a>一维</h1><p>一维单体就是一个点，那么一维空间就是由无数个点组建成的空间，当然这一切都是静止的，这些无数的单体会进行演变，向任意一个方向演变。取其一个单体，开始模拟演变，从一个状态到另一个状态，比如移动，它的轨迹，可能是直线，可能是曲线，这个过程就形成了，二维的单体。<br>另外所有二维单体的集合投影，就是一个一维空间。</p><h1 id="二维"><a href="#二维" class="headerlink" title="二维"></a>二维</h1><p>从一维的推演，二维单体就是一条线，那么二维空间就是由无数条线组建成的空间，同样先脑补出静止的状态，再进行动态演变。取其中一个单体，从一个状态到另一个状态，还是以移动来（因为这个比较好理解，至于原因，这是和人类都用眼睛观察物体前后变化过程的时候，位置的移动是最直观造成的，比如颜色的变化，从红到蓝，渐变的过程你得脑补出来）比喻，线移动的过程同样是任意方向的，所以可以形成平面，曲平面，这个过程就形成了，三维的单体。<br>所有三维单体的集合投影，就是一个二维空间。比如人和人影子。</p><h1 id="三维"><a href="#三维" class="headerlink" title="三维"></a>三维</h1><p>终于进入三维了，三维单体就是面（而人类和其他动物的对三维的感知基本都是面，虽然我们生活在三维空间，但我们的感知是三维单体），不难想象三维空间就是无数个面组建成的空间。同样取出一个面单体，开始演变，同样是移动，它的轨迹，可以是球体，方体等，这个过程就形成了，四维单体。所以我们都可以看作成一个生活在三维空间的四维单体。<br>所有四维单体的集合投影，就是一个三维空间。比如一生的你所有空间，和某一个时刻的你的空间。</p><h1 id="四维"><a href="#四维" class="headerlink" title="四维"></a>四维</h1><p>到这里，其实已经超出人类的感知了，假如存在生活在四维空间的生物，它们的感知就是四维单体，能直接感知到立体，也就是说它碰你一下，不是碰你皮肤，而是整个身体，真的是很难想象那是一种什么感觉（我觉得它可能有能力直接告诉你，从你出生到现在都发生了什么变化，也就是它能把你前后的空间给感知区分出来）。那么四维空间就是无数个立体组件成的空间。同样取出一个立体单体，开始演变，同样是移动，它的轨迹，可以是什么呢，从这里就开始不好理解了，首先我们假设这个立体单体是个人，他从一个位置移动到了另一个位置，当中的过程形成的东西，没有专有名词的时候，我统称它为这个单体的’时间线’，前面基本概念中有说到时间是任何物质演变的过程，那么这里的’时间线’就是这个人前后移动演变的过程轨迹线，即五维单体。<br>所有五维单体的集合投影，就是一个四维空间。<br>题外话突然觉得人工智能AI如果有了生命就能变成五维单体，就是这四维空间的生物。</p><h1 id="五维"><a href="#五维" class="headerlink" title="五维"></a>五维</h1><p>前面说五维单体是四维单体前后状态变化的过程轨迹集合所组建成的东西。怎么去理解呢，首先要明白组成单体的部分都不会消失，不像我们自己并不能感知前一秒和后一秒的自己，除了能感知此时此刻的状态，之前的状态都消失不见了，而五维单体并不会，它记录了低维的所有过程状态，其他维度单体也是，例如，身为四维单体的我们记录所有三维单体（面）演变过程状态，并不会凭空消失，如你感知到自己的手一直都是那个形状，并且还在不断的演变中，小孩会慢慢变大人，婴儿会慢慢变成老人。同样五维单体记录保留了所有四维单体演变的过程状态，你可以想象一个人从出生到现在演变的过程都没有消失，整个过程都被保留了，你一眼看它，能看到它出生那一刻，开始走路那一刻。。。到此时此次的所有状态，它就是一个五维单体，就这个现象，目前我所认知的，电脑能模拟到这一点，用全景录像机把你到现在之前的所有演变过程都记录下来（所有可能的角度），并且还在不断都记录你接下来都演变，如果电脑是有生命意识的，它就能回看任何时刻任何角度的你。在这种生命感知看来，你就是那一堆集合体（宏观视角），本质上你就是一长串还是在不断变长的你（微观视角），但电脑并不是一个五维单体或者四维空间物体，这里只是去帮你理解它的样子而已。<br>然后同样取出一个五维单体，向任意的方向状态的演变，它们演变的过程集合轨迹，将形成六维度的单体；<br>那么所有六维单体的集合投影，就是一个五维空间。在这里我并不能确切知道，五维单体有什么状态可以演变，在网上有很多人，脑补说不同的人生轨迹，就是同一个时间点，不同的你，比如你可以成为厨师，这样选择又可能导致成为程序员等等，在我看来这个状态理解是不正确也不可能的，这个只能理解成’时间点’从任意方位状态演变到’时间线’的可能性而已。<br>在我看来，如果五维单体称为’时间线’的话，它的集合必定就是’时间面’了。出于这样的概念主要是和我们的认知有关系，我们只有对点，线，面的感知，对它们演变过程的感知，所以对更高的维度的感知和理解，只能这样去叠加感知。之前的四维单体，人也好，立体个体也好，都可以被我们感知成一个’时间点’，所以当你问一个人什么时间点发什么了什么事，某个时间点世界是怎么样的，他是完全可以理解和回忆想象回答的。而现在’时间线’的任意方位状态演变，这一运动，怎么去理解呢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在网上看过很多关于维度的解释和演示，也看过很多书籍，电视纪录片等，从一维到三维固然好理解，但是到了更高的维度就让人很难去理解，当我们慢慢对一些定理概念，发生更高更客观的认识的时候，才发现很多事就变得更好理解。很多时候我们所认为不可理解的事，大多数情况可能都是我们之前所奉承的理论出了问题，随着物质的演绎推进，我们不得不改变或者进化之前的认知，这是一种思维进化的过程。人的肉体可能目前只能局限于三维之中，但思维也许可以理解和进化到更高的层次。&lt;/p&gt;
    
    </summary>
    
      <category term="让科技流行起来" scheme="https://www.51201314.me/jacks/categories/%E8%AE%A9%E7%A7%91%E6%8A%80%E6%B5%81%E8%A1%8C%E8%B5%B7%E6%9D%A5/"/>
    
    
      <category term="维度" scheme="https://www.51201314.me/jacks/tags/%E7%BB%B4%E5%BA%A6/"/>
    
      <category term="科学" scheme="https://www.51201314.me/jacks/tags/%E7%A7%91%E5%AD%A6/"/>
    
      <category term="我的世界观" scheme="https://www.51201314.me/jacks/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E8%A7%82/"/>
    
  </entry>
  
  <entry>
    <title>钱为何物</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2017/01/11/%E9%92%B1%E4%B8%BA%E4%BD%95%E7%89%A9/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2017/01/11/钱为何物/</id>
    <published>2017-01-11T12:43:00.000Z</published>
    <updated>2019-06-08T19:30:47.910Z</updated>
    
    <content type="html"><![CDATA[<p>本身”花花绿绿的纸”没有价值，只有使用价值，货币流通才产生的价值，而决定是否能流通是社会市场所决定的，就好比人民币只能中国用，美元美国用，乐高黑市用，如果你不知道哪个平台可以流通，有乐高也没用，就好比在中国有再多美元，银行不兑换，就没有用。<br>就好比人民币没有价值，只有使用价值，你要知道怎么流通才能兑换成价值。</p><a id="more"></a><p>一切物品都可以成为货币，在古代没有一般等价物的时候，物品只能和物品交换产生交易，比如一头猪换十只鸡，两只鸡换一抹布，等等，当时间久了就有人发现这样换来换去，很麻烦啊，还要算来算去，何不干脆约定一个特定的东西作为一般等价交换物，这样不就好换算了，这就是钱的前世，整个历史中，石头，纸，银子，金子，铜，等都当做过流通的货币。<br>其实每一个有交易的地方都是一个货币流通市场。比如一家开衣服店的，其实衣服就可以当做货币，进行交易，客人可以用其他任何物品来换，只要你同意这个，就会产生交易，古时候的铜钱，银两，现在中国的人民币，美国的美元等。</p><p>有钱人只是比穷人知道更多的货币流通市场，往往单一的价值流通市场，带来的流通频率和量都是不够多的，比如很多人的收入只能通过上班得来，又或者只开了一家专一的店，你的价值就只能局限在这个单一市场里。<br>聪明的有钱人，寻找市场，天才创造市场。<br>增加价值一定要，提高流通频率，增加流通量，寻找更多的交易市场。</p><p>所以那些一贫如洗的人，没有了钱，不代表没有了价值，所谓的东山再起完全可行。<br>未完待续</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本身”花花绿绿的纸”没有价值，只有使用价值，货币流通才产生的价值，而决定是否能流通是社会市场所决定的，就好比人民币只能中国用，美元美国用，乐高黑市用，如果你不知道哪个平台可以流通，有乐高也没用，就好比在中国有再多美元，银行不兑换，就没有用。&lt;br&gt;就好比人民币没有价值，只有使用价值，你要知道怎么流通才能兑换成价值。&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="钱" scheme="https://www.51201314.me/jacks/tags/%E9%92%B1/"/>
    
      <category term="货币" scheme="https://www.51201314.me/jacks/tags/%E8%B4%A7%E5%B8%81/"/>
    
      <category term="财富" scheme="https://www.51201314.me/jacks/tags/%E8%B4%A2%E5%AF%8C/"/>
    
  </entry>
  
  <entry>
    <title>理解总结Redux</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/12/05/%E7%90%86%E8%A7%A3%E6%80%BB%E7%BB%93Redux%E4%B8%8EReact%E7%9A%84%E7%BB%93%E5%90%88/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/12/05/理解总结Redux与React的结合/</id>
    <published>2016-12-05T03:51:42.000Z</published>
    <updated>2017-01-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们要知道Redux和React之间没有血缘关系。不然你会问他们的结合岂不是成了乱*。Redux 还支持 Vue、Angular、Ember、jQuery 甚至纯 JavaScript。当你在用React的时候，要明白为什么要用redux，不明白就没有用的意义。由于React只做为view视图层，如果你要完成一套完整的方案，就需拼装许多其他的包，redux就可以说是为管理数据流而生的包。除Redux，其实还有一个更简洁的库，叫mobX，可以自行GitHub。</p><a id="more"></a><h1 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h1><p>Redux 主要的几个交流部分，分别是action，reducer，component三部分。</p><h2 id="action"><a href="#action" class="headerlink" title="action"></a>action</h2><h2 id="reducer"><a href="#reducer" class="headerlink" title="reducer"></a>reducer</h2><h2 id="component"><a href="#component" class="headerlink" title="component"></a>component</h2><p>组件，这里就不详细说是什么了，但在redux，把它分成了容器组件和展示组件</p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>React和JSX比较合理的，书写方式，这里有一个指南<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FpcmJuYi9qYXZhc2NyaXB0L3RyZWUvbWFzdGVyL3JlYWN0" title="https://github.com/airbnb/javascript/tree/master/react">https://github.com/airbnb/javascript/tree/master/react<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先我们要知道Redux和React之间没有血缘关系。不然你会问他们的结合岂不是成了乱*。Redux 还支持 Vue、Angular、Ember、jQuery 甚至纯 JavaScript。当你在用React的时候，要明白为什么要用redux，不明白就没有用的意义。由于React只做为view视图层，如果你要完成一套完整的方案，就需拼装许多其他的包，redux就可以说是为管理数据流而生的包。除Redux，其实还有一个更简洁的库，叫mobX，可以自行GitHub。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
      <category term="React" scheme="https://www.51201314.me/jacks/tags/React/"/>
    
      <category term="Redux" scheme="https://www.51201314.me/jacks/tags/Redux/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令和技巧总结</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/11/18/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/11/18/Docker常用命令和技巧总结/</id>
    <published>2016-11-18T08:17:18.000Z</published>
    <updated>2019-06-08T17:49:50.325Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。这里我总结了常用的一些命令和技巧，比如批量删除images和containers等。</p><a id="more"></a><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p><code>docker -h</code> 列出帮助<br><code>docker [COMMAND] -h</code> 列出这个命令的帮助</p><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Remove all stopped containers.(-a是全部，-q是获取id那一项)</span></span><br><span class="line"></span><br><span class="line">$ docker rm $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove all untagged images（这里我用的ag去查询,木有的可以用grep）</span></span><br><span class="line"></span><br><span class="line">$ docker rmi $(docker images -a | ag <span class="string">'^&lt;none&gt;'</span> | awk <span class="string">'&#123;print $3&#125;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量删除字符串包含Jack的容器（-f参数主要用来强制关闭，为了避免误删出正在运行的容器，</span></span><br><span class="line"><span class="comment"># docker会默认拒绝提交的命令，你可以先docker stop再rm，当然我们可以直接加-f参数）</span></span><br><span class="line"></span><br><span class="line">$ docker rm -f $(docker ps -a | ag <span class="string">'Jack'</span> | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure><p>主要思路就是找出这些需要删除的目标的id列表，传给docker本身的删除命令就可以了，这里主要用到ag去做查询，awk去做提取。<br>具体用法可以百度或者google，这里就不过多说明了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。这里我总结了常用的一些命令和技巧，比如批量删除images和containers等。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Docker" scheme="https://www.51201314.me/jacks/tags/Docker/"/>
    
      <category term="命令行" scheme="https://www.51201314.me/jacks/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>SSH走443端口访问github</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/11/07/SSH%E8%B5%B0443%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AEgithub/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/11/07/SSH走443端口访问github/</id>
    <published>2016-11-07T08:36:22.000Z</published>
    <updated>2019-06-08T20:33:54.972Z</updated>
    
    <content type="html"><![CDATA[<p>最近博客一直没有更新，然而今天在公司内网从Github分支拉取代码的时候总是报错误，在Github官网找到了一种办法，通过https协议建立SSH连接，即让SSH走443端口。经过测试，公司的防火墙并没有封443端口（基本不可能封）。</p><a id="more"></a><p>如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Operation timed out</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure><p>我猜测是公司为了避免把内部代码开源把git协议的上传端口给封了，结果一测果然如此。执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">ssh: connect to host github.com port 22: Operation timed out</span><br></pre></td></tr></table></figure><p>报超时错误。</p><p>让SSH走443端口。经过测试，公司的防火墙并没有封443端口（基本不可能封）。测试代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T -p 443 git@ssh.github.com</span><br></pre></td></tr></table></figure><p>如果执行命令后不报错并且显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi userName! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>那接下来就好办了。编辑~/.ssh/config文件（没有则创建一个），然后补充下面的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>保存退出后再使用上面的命令来测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近博客一直没有更新，然而今天在公司内网从Github分支拉取代码的时候总是报错误，在Github官网找到了一种办法，通过https协议建立SSH连接，即让SSH走443端口。经过测试，公司的防火墙并没有封443端口（基本不可能封）。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="SSH" scheme="https://www.51201314.me/jacks/tags/SSH/"/>
    
      <category term="GitHub" scheme="https://www.51201314.me/jacks/tags/GitHub/"/>
    
      <category term="Https" scheme="https://www.51201314.me/jacks/tags/Https/"/>
    
  </entry>
  
  <entry>
    <title>360再见我要去NAS</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/10/21/snippets/360%E5%86%8D%E8%A7%81%E6%88%91%E8%A6%81%E5%8E%BBNAS/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/10/21/snippets/360再见我要去NAS/</id>
    <published>2016-10-21T13:08:01.000Z</published>
    <updated>2019-06-08T19:52:53.617Z</updated>
    
    <content type="html"><![CDATA[<h2>360再见我要去NAS<h2><blockquote><div style="text-align:left">360云盘发布公告，决定停止个人云盘服务，2017年2月1日起关闭所有的云盘账号并清空数据。具体来说，2016年11月1日起停止云盘上传服务，即日起至2017年2月1日，无论剩余多少天会员，均全额退款。360云盘关闭之后，能用的主要网盘只剩百度网盘和腾讯微云了，但我估计这两家网盘的关闭也是迟早的事情，购买一个NAS（或者自己搭建一个NAS）才是终极解决方案。360别了 ┌( ಠ_ಠ)┘ </div></blockquote></h2></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;360再见我要去NAS&lt;h2&gt;
&lt;blockquote&gt;

&lt;div style=&quot;text-align:left&quot;&gt;
360云盘发布公告，决定停止个人云盘服务，2017年2月1日起关闭所有的云盘账号并清空数据。具体来说，2016年11月1日起停止云盘上传服务，即日起至2
      
    
    </summary>
    
      <category term="优雅地去生活" scheme="https://www.51201314.me/jacks/categories/%E4%BC%98%E9%9B%85%E5%9C%B0%E5%8E%BB%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="片段" scheme="https://www.51201314.me/jacks/tags/%E7%89%87%E6%AE%B5/"/>
    
      <category term="Snippet" scheme="https://www.51201314.me/jacks/tags/Snippet/"/>
    
      <category term="360" scheme="https://www.51201314.me/jacks/tags/360/"/>
    
  </entry>
  
  <entry>
    <title>I&#39;am fucking Mac Pro</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/10/21/I-am-fucking-Mac-Pro/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/10/21/I-am-fucking-Mac-Pro/</id>
    <published>2016-10-21T09:30:32.000Z</published>
    <updated>2019-06-04T10:39:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>上图为19年最新皮肤！（某宝100软妹币自己动手贴的）<br>Yep! I am fucking Mac pro! so apple is not integral！<br>国庆回家，去了姐姐家，姐夫是java程序员，以前也在上海，他们回成都完婚的适合，姐夫的换了成都的工作，原本他自己有一台Mac Pro，成都的公司又给他配了一台一模一样的，所以他在12年买的那台就一直没怎么用，每次去他们家，他都会给我安利，他想卖掉这台Mac，我现在用的第一台Mac就是从他这里买的。算是8.9层新吧。如今我已经fuck了它两周了，已经很有快感了。</p><a id="more"></a><h1 id="I-want-u"><a href="#I-want-u" class="headerlink" title="I want u"></a>I want u</h1><p>其实一开始他一直都说他买成1.5W，自己又没怎么用，从去年还是前年说1W出手，我觉得是贵了，而且当时一直用的<code>窗口s</code>开发，并没有太多意愿，也觉得没有必要性使用Mac，也就没有心动。从去年下半年开始就有些不太一样了，我已经开始完全转到前端开发了，对<code>窗口s</code>的使用，已经相当的熟悉了，特别是win10，配合<code>Wox</code>，一样可以做到Spotlight的功能，再加上ubuntu on windows的出现，我有那么一瞬间觉得，win开发足矣。但是，为了寻求能力和见识的提升，及时做出改变是必须的，再加上身边的同事，php和前端，对还有产品，几乎清一色的使用Mac，咋们入乡随俗显得格外的迫切，另外还有一点是因为不同系统上总有些奇怪的差异，会导致项目文件出问题，包括插件版本的差异等待，走向统一化，也是简化问题的方式，比如一些IDE编辑文件后的结束分割符在不同系统是不一样的</p><pre><code>Line Separator常见大约就以下这三种：LF  (Unix and OS X)  \nCR  (Classic Mac)   \rCRLF  (Windows) \r\n所以在国庆，我就圆了我姐夫这个梦，6000大洋收购了一台2012年15寸Retina屏MacBook ProCPU这样   2.3 GHz Intel Core i7内存这样    8 GB 1600 MHz DDR3显卡这样    NVIDIA GeForce GT 650M 1024 MB           Intel HD Graphics 4000 1536 MB</code></pre><p>本来5500大洋的，真是奸商～<br>在回上海的路上，我就一路的fuck这台电脑，删掉原本的用户，新加自己的用户，各种提权，各种快捷键飞起来，知乎上Mac装逼手册各种看起来,像我这种对新鲜’食物’会打了鸡血一样兴奋的人来说，这个过程还是满享受的，皇天不负苦心人，两天就上手了，一周就熟练各种快捷键，说真的Mac用户要啥鼠标，要啥键盘，键盘还是要的，最好配上HHKB无刻键盘，逼格杠杠的升，至少也要配个机械键盘（我用的就是POKER3）在同事耳边疯狂的敲打，演奏群魔乱舞进行曲，弓虽女干他们的耳朵，摧残他们大脑。<br>捣鼓的这几天，电脑上基本安装了以下武器，可供参考。</p><h1 id="装逼依赖"><a href="#装逼依赖" class="headerlink" title="装逼依赖"></a>装逼依赖</h1><h2 id="APP类"><a href="#APP类" class="headerlink" title="APP类"></a>APP类</h2><p><code>Slack</code>   万能通告面板<br><code>Docker</code>  虚拟机再见<br><code>MacVim</code>  Vim大法好<br><code>Lantern</code> 科学上网方法<br><code>ShadowsocksX</code>    科学上网工具<br><code>oneDrive</code>    用来同步windows上的小文件很方便<br><code>iTerm</code>   命令行我看行<br><code>iStat Menus</code> 资源监控菜单<br><code>AppCleaner</code>  App清洁器<br><code>sourceTree</code>  用Git的小伙伴必备<br><code>Sequel Pro</code>  收费的Navicat再见<br><code>dash</code>    万能文档，妈妈再也不用担心我找不到文档了（windows有zeal替代品）<br><code>Alfred</code>  Spotligh的情人（windows有Wox替代品）<br><code>sketch</code>  Are you 产品经理？Nope，俺们设计师<br><code>zeplin</code>  PS？No，No，No<br><code>Today Script</code>    你是极客吗<br><code>远程桌面连接</code>  Mac:I wanna fuck windows,windows:ye,Come on baby!(微软出品，局域网连接，速度飞快)<br><code>flashlight</code>    Spotlight变身超级Spotlight</p><h2 id="命令行类"><a href="#命令行类" class="headerlink" title="命令行类"></a>命令行类</h2><p><code>oh-my-zsh</code>   oh-my-god<br><code>thefuck</code> 手滑？fuck一下<br><code>brew</code>    统一管理好助手<br><code>nvm，n</code>   管理node，npm版本<br><code>tig</code> git？tig！<br><code>autojump</code> 飞雷神之术，瞬移到任意目录<br><code>the_silver_searcher</code>   ag（白眼～） A code-searching tool similar to ack, but faster</p><p>有好的东东，欢迎推荐，好的东西随着我的挖掘，也会分享到blog里，我们都是有颗分享的心<br><strong>不说了，我要去Fuck我的Mac了～</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上图为19年最新皮肤！（某宝100软妹币自己动手贴的）&lt;br&gt;Yep! I am fucking Mac pro! so apple is not integral！&lt;br&gt;国庆回家，去了姐姐家，姐夫是java程序员，以前也在上海，他们回成都完婚的适合，姐夫的换了成都的工作，原本他自己有一台Mac Pro，成都的公司又给他配了一台一模一样的，所以他在12年买的那台就一直没怎么用，每次去他们家，他都会给我安利，他想卖掉这台Mac，我现在用的第一台Mac就是从他这里买的。算是8.9层新吧。如今我已经fuck了它两周了，已经很有快感了。&lt;/p&gt;
    
    </summary>
    
      <category term="优雅地去生活" scheme="https://www.51201314.me/jacks/categories/%E4%BC%98%E9%9B%85%E5%9C%B0%E5%8E%BB%E7%94%9F%E6%B4%BB/"/>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E4%BC%98%E9%9B%85%E5%9C%B0%E5%8E%BB%E7%94%9F%E6%B4%BB/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="Mac" scheme="https://www.51201314.me/jacks/tags/Mac/"/>
    
      <category term="苹果电脑" scheme="https://www.51201314.me/jacks/tags/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>Jack代码世界</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/09/28/snippets/Jack%E4%BB%A3%E7%A0%81%E4%B8%96%E7%95%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/09/28/snippets/Jack代码世界/</id>
    <published>2016-09-28T12:50:01.000Z</published>
    <updated>2019-06-16T11:28:01.314Z</updated>
    
    <content type="html"><![CDATA[<h2>Jack代码世界<h2><blockquote><p><img src="https://raw.githubusercontent.com/jingxinxin/myMindMap/master/imgs/Jack%E4%BB%A3%E7%A0%81%E4%B8%96%E7%95%8C.png" alt></p></blockquote></h2></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;Jack代码世界&lt;h2&gt;
&lt;blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jingxinxin/myMindMap/master/imgs/Jack%E4%BB%A3%E7%A0%81%E4%B8%
      
    
    </summary>
    
      <category term="思维导图" scheme="https://www.51201314.me/jacks/categories/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
    
      <category term="片段" scheme="https://www.51201314.me/jacks/tags/%E7%89%87%E6%AE%B5/"/>
    
      <category term="Snippet" scheme="https://www.51201314.me/jacks/tags/Snippet/"/>
    
      <category term="思维导图" scheme="https://www.51201314.me/jacks/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JQuery样式选择的几个区别</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/09/28/snippets/JQuery%E6%A0%B7%E5%BC%8F%E9%80%89%E6%8B%A9%E7%9A%84%E5%87%A0%E4%B8%AA%E5%8C%BA%E5%88%AB/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/09/28/snippets/JQuery样式选择的几个区别/</id>
    <published>2016-09-28T12:08:01.000Z</published>
    <updated>2019-06-08T19:52:53.611Z</updated>
    
    <content type="html"><![CDATA[<h2>JQuery样式选择的几个区别</h2><blockquote><div style="text-align:left">交集选择：   $(".a.b")--选择同时包含a和b的元素。并集选择：   $(".a,.b")--选择包含a或者包含b的元素。子集选择：   $(".a .b")--选择a下包含b的元素。</div></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;JQuery样式选择的几个区别&lt;/h2&gt;

&lt;blockquote&gt;

&lt;div style=&quot;text-align:left&quot;&gt;
交集选择：   $(&quot;.a.b&quot;)--选择同时包含a和b的元素。
并集选择：   $(&quot;.a,.b&quot;)--选择包含a或者包含b的元素。
子集
      
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="片段" scheme="https://www.51201314.me/jacks/tags/%E7%89%87%E6%AE%B5/"/>
    
      <category term="Snippet" scheme="https://www.51201314.me/jacks/tags/Snippet/"/>
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JQuery" scheme="https://www.51201314.me/jacks/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>koa</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/09/02/koa/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/09/02/koa/</id>
    <published>2016-09-02T09:05:12.000Z</published>
    <updated>2019-06-08T19:32:45.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>英文版<br>    <span class="exturl" data-url="aHR0cDovL2tvYWpzLmNvbS8=" title="http://koajs.com/">http://koajs.com/<i class="fa fa-external-link"></i></span><br>    <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvYWpzL2tvYQ==" title="https://github.com/koajs/koa">https://github.com/koajs/koa<i class="fa fa-external-link"></i></span><br>中文版<br>    <span class="exturl" data-url="aHR0cDovL2tvYS5ib290Y3NzLmNvbS8=" title="http://koa.bootcss.com/">http://koa.bootcss.com/<i class="fa fa-external-link"></i></span><br>    <span class="exturl" data-url="aHR0cDovL2tvYS5yZWRub2RlLmNuLw==" title="http://koa.rednode.cn/">http://koa.rednode.cn/<i class="fa fa-external-link"></i></span><br>    <span class="exturl" data-url="aHR0cDovL2phdmFzY3JpcHQucnVhbnlpZmVuZy5jb20vbm9kZWpzL2tvYS5odG1s" title="http://javascript.ruanyifeng.com/nodejs/koa.html">http://javascript.ruanyifeng.com/nodejs/koa.html<i class="fa fa-external-link"></i></span><br>    <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2d1by15dS9rb2EtZ3VpZGU=" title="https://github.com/guo-yu/koa-guide">https://github.com/guo-yu/koa-guide<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      Koa -- 基于 Node.js 平台的下一代 web 开发框架
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="NodeJs" scheme="https://www.51201314.me/jacks/tags/NodeJs/"/>
    
      <category term="web开发框架" scheme="https://www.51201314.me/jacks/tags/web%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>React+Node+ES6+Babel</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/26/React-Node-ES6-Babel%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/26/React-Node-ES6-Babel环境搭建/</id>
    <published>2016-08-26T02:49:15.000Z</published>
    <updated>2019-06-08T20:33:54.932Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>准备工作<br>需要node环境去官网自行安装<br>首先生成<code>package.json</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><h1 id="第一步-配置文件-babelrc"><a href="#第一步-配置文件-babelrc" class="headerlink" title="第一步 配置文件.babelrc"></a>第一步 配置文件.babelrc</h1><p>使用Babel的第一步，就是配置这个文件。Babel的配置文件是<code>.babelrc</code>，存放在项目的根目录下。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [],</span><br><span class="line">  <span class="attr">"plugins"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>presets</code>字段设定转码规则，官方提供以下的规则集，你可以根据需要安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ES2015转码规则</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-preset-es2015</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> react转码规则</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-preset-react</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ES7不同阶段语法提案的转码规则（共有4个阶段），选装一个</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-preset-stage-0</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-preset-stage-1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-preset-stage-2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-preset-stage-3</span></span><br></pre></td></tr></table></figure><p>然后，将这些规则加入<code>.babelrc</code>。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [</span><br><span class="line">    <span class="string">"es2015"</span>,</span><br><span class="line">    <span class="string">"react"</span>,</span><br><span class="line">    <span class="string">"stage-3"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"plugins"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你不需要React，或者stage，当然可以去掉你不需要的。</p><h1 id="第二步-选择你的babel编译方式"><a href="#第二步-选择你的babel编译方式" class="headerlink" title="第二步 选择你的babel编译方式"></a>第二步 选择你的babel编译方式</h1><p>babel的编译方式有多中，你可以在gulp中，webpack中下载相应的插件文件编译，也可以单独用babel命令或者babel自身提供的API进行转码。</p><h2 id="命令行转码babel-cli"><a href="#命令行转码babel-cli" class="headerlink" title="命令行转码babel-cli"></a>命令行转码babel-cli</h2><p>Babel提供babel-cli工具，用于命令行转码。<br>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-cli</span></span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 转码结果输出到标准输出</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> babel example.js</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 转码结果写入一个文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --out-file 或 -o 参数指定输出文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> babel example.js --out-file compiled.js</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> babel example.js -o compiled.js</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 整个目录转码</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --out-dir 或 -d 参数指定输出目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> babel src --out-dir lib</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> babel src -d lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -s 参数生成<span class="built_in">source</span> map文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> babel src -d lib -s</span></span><br></pre></td></tr></table></figure><h2 id="babel-node"><a href="#babel-node" class="headerlink" title="babel-node"></a>babel-node</h2><p><code>babel-cli</code>工具自带一个<code>babel-node</code>命令，提供一个支持ES6的REPL环境。它支持Node的REPL环境的所有功能，而且可以直接运行ES6代码。<br>它不用单独安装，而是随<code>babel-cli</code>一起安装。然后，执行<code>babel-node</code>就进入PEPL环境。<br><code>babel-node</code>命令可以直接运行ES6脚本。将上面的代码放入脚本文件es6.js，然后直接运行。<br>然后，改写<code>package.json</code>。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"script-name"</span>: <span class="string">"babel-node script.js"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用babel-node替代node，这样script.js本身就不用做任何转码处理。</p><h2 id="babel-register"><a href="#babel-register" class="headerlink" title="babel-register"></a>babel-register</h2><p><code>babel-register</code>模块改写require命令，为它加上一个钩子。此后，每当使用<code>require</code>加载<code>.js</code>、<code>.jsx</code>、<code>.es</code>和<code>.es6</code>后缀名的文件，就会先用<code>Babel</code>进行转码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-register</span></span><br></pre></td></tr></table></figure><p>使用时，必须首先加载<code>babel-register</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">"babel-register"</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">"./index.js"</span>);</span><br></pre></td></tr></table></figure><p>此过程之后的require文件都可以用es6来写了，并不需要手动对index.js转码了。<br>需要注意的是，<code>babel-register</code>只会对require命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。</p><h2 id="babel-core"><a href="#babel-core" class="headerlink" title="babel-core"></a>babel-core</h2><p>如果某些代码需要调用Babel的API进行转码，就要使用<code>babel-core</code>模块。<br>安装命令如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install babel-core --save</span><br></pre></td></tr></table></figure><p>然后，在项目中调用<code>babel-core</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">'babel-core'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串转码</span></span><br><span class="line">babel.transform(<span class="string">'code();'</span>, options);</span><br><span class="line"><span class="comment">// =&gt; &#123; code, map, ast &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件转码（异步）</span></span><br><span class="line">babel.transformFile(<span class="string">'filename.js'</span>, options, <span class="function"><span class="keyword">function</span>(<span class="params">err, result</span>) </span>&#123;</span><br><span class="line">  result; <span class="comment">// =&gt; &#123; code, map, ast &#125;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件转码（同步）</span></span><br><span class="line">babel.transformFileSync(<span class="string">'filename.js'</span>, options);</span><br><span class="line"><span class="comment">// =&gt; &#123; code, map, ast &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Babel AST转码</span></span><br><span class="line">babel.transformFromAst(ast, code, options);</span><br><span class="line"><span class="comment">// =&gt; &#123; code, map, ast &#125;</span></span><br></pre></td></tr></table></figure><p>配置对象options，可以参看官方文档<span class="exturl" data-url="aHR0cDovL2JhYmVsanMuaW8vZG9jcy91c2FnZS9vcHRpb25zL+OAgg==" title="http://babeljs.io/docs/usage/options/。">http://babeljs.io/docs/usage/options/。<i class="fa fa-external-link"></i></span></p><h2 id="babel-polyfill"><a href="#babel-polyfill" class="headerlink" title="babel-polyfill"></a>babel-polyfill</h2><p>Babel默认只转换新的JavaScript句法（syntax），而不转换新的API，比如Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise等全局对象，以及一些定义在全局对象上的方法（比如<code>Object.assign</code>）都不会转码。<br>比如ES6在Array对象上新增了Array.from方法。Babel就不会转码这个方法。如果想让这个方法运行，必须使用<code>babel-polyfill</code>，为当前环境提供一个扩展补充。<br>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save babel-polyfill</span><br></pre></td></tr></table></figure><p>然后，在脚本头部，加入如下一行代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'babel-polyfill'</span>;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'babel-polyfill'</span>);</span><br></pre></td></tr></table></figure><p>Babel默认不转码的API非常多，详细清单可以查看babel-plugin-transform-runtime模块的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JhYmVsL2JhYmVsL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2JhYmVsLXBsdWdpbi10cmFuc2Zvcm0tcnVudGltZS9zcmMvZGVmaW5pdGlvbnMuanM=" title="https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-runtime/src/definitions.js">definitions.js<i class="fa fa-external-link"></i></span>文件。</p><h2 id="浏览器环境"><a href="#浏览器环境" class="headerlink" title="浏览器环境"></a>浏览器环境</h2><p>不做介绍</p><h2 id="在线转换"><a href="#在线转换" class="headerlink" title="在线转换"></a>在线转换</h2><p>Babel提供一个<span class="exturl" data-url="aHR0cHM6Ly9iYWJlbGpzLmlvL3JlcGwv" title="https://babeljs.io/repl/">REPL在线编译器<i class="fa fa-external-link"></i></span>，可以在线将ES6代码转为ES5代码。转换后的代码，可以直接作为ES5代码插入网页运行。</p><h1 id="安装React"><a href="#安装React" class="headerlink" title="安装React"></a>安装React</h1><p>做到这里，你项目下的node环境就可以直接运行es6文件了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node es6.js</span><br></pre></td></tr></table></figure><p>安装react</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react react-dom --save -d</span><br></pre></td></tr></table></figure><p>新建index.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">index</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令行运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node index.js</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">1</span></span><br></pre></td></tr></table></figure><p>运行成功</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTUvMDMvcmVhY3Q=" title="http://www.ruanyifeng.com/blog/2015/03/react">React 入门实例教程<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9wYWNrYWdlLW1hbmFnZW1lbnQuaHRtbA==" title="https://facebook.github.io/react/docs/package-management.html">React官方文档 Using React from npm<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTUvMDMvcmVhY3Q=" title="http://www.ruanyifeng.com/blog/2015/03/react">阮一峰 React 入门实例教程<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      搭建React可以使用es6的babel环境
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="React" scheme="https://www.51201314.me/jacks/tags/React/"/>
    
      <category term="Babel" scheme="https://www.51201314.me/jacks/tags/Babel/"/>
    
      <category term="ES6" scheme="https://www.51201314.me/jacks/tags/ES6/"/>
    
      <category term="环境搭建" scheme="https://www.51201314.me/jacks/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>爆笑虫子之冰淇淋</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/22/%E7%88%86%E7%AC%91%E8%99%AB%E5%AD%90%E4%B9%8B%E5%86%B0%E6%B7%87%E6%B7%8B/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/22/爆笑虫子之冰淇淋/</id>
    <published>2016-08-21T16:00:00.000Z</published>
    <updated>2016-08-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<iframe style="max-width:100%" frameborder="0" width="640" height="250" src="http://v.qq.com/iframe/player.html?vid=v0016wy2d3h&tiny=0&auto=0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe style=&quot;max-width:100%&quot; frameborder=&quot;0&quot; width=&quot;640&quot; height=&quot;250&quot; src=&quot;http://v.qq.com/iframe/player.html?vid=v0016wy2d3h&amp;tiny=0&amp;auto=
      
    
    </summary>
    
      <category term="视频" scheme="https://www.51201314.me/jacks/categories/%E8%A7%86%E9%A2%91/"/>
    
    
      <category term="搞笑" scheme="https://www.51201314.me/jacks/tags/%E6%90%9E%E7%AC%91/"/>
    
      <category term="动画" scheme="https://www.51201314.me/jacks/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>终极Shell——ZSH命令</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/19/%E7%BB%88%E6%9E%81Shell%E2%80%94%E2%80%94ZSH%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/19/终极Shell——ZSH命令/</id>
    <published>2016-08-19T06:19:13.000Z</published>
    <updated>2019-06-08T20:33:54.965Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>相比bash，用过的人都说好</p><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><h2 id="d"><a href="#d" class="headerlink" title="d"></a>d</h2><p>输入d，将列出当前 session 访问过的所有目录，再按提示的数字即可进入相应目录。</p><h2 id="忘记在前面加命令"><a href="#忘记在前面加命令" class="headerlink" title="忘记在前面加命令"></a>忘记在前面加命令</h2><p>很多时候运行完命令才忘了sudo，那么</p><p>1.方向上键到上一条命令，然后方向左键或home键到命令最左端，添加”sudo “，回车<br>2.<code>Ctrl-P</code>回到上一条命令，<code>Ctrl-A</code>回到最左端，添加”sudo “，回车<br>3.<code>sudo !!</code>,回车</p>]]></content>
    
    <summary type="html">
    
      &lt;span style=&#39;color:red;&#39;&gt;【持续更新】&lt;/span&gt;总结终极Shell——ZSH命令用法
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="zsh" scheme="https://www.51201314.me/jacks/tags/zsh/"/>
    
      <category term="命令" scheme="https://www.51201314.me/jacks/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>诗集</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/16/%E8%AF%97%E9%9B%86/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/16/诗集/</id>
    <published>2016-08-16T11:14:16.000Z</published>
    <updated>2019-06-27T21:34:21.963Z</updated>
    
    <content type="html"><![CDATA[<p>记录自己多年来有感而发写的诗集，以下皆为原创。</p><a id="more"></a><div class="note info">            <blockquote class="blockquote-center"><h1 id="异乡夜"><a href="#异乡夜" class="headerlink" title="异乡夜"></a>异乡夜</h1><p>异乡人，孤夜通，夏蒸月藏宫，魔都城，独楼空，几多愁事在眉中；<br>敢问君，汉子心，怎可犹如冰，念身旁，远天堂，恰同织女思牛郎。<br>写于 2013-8-3 02:40</p></blockquote><h2 id="自译"><a href="#自译" class="headerlink" title="自译"></a>自译</h2><p>来自异乡的人，孤单一人在这炎热的夏日夜里通宵达旦，透过朦胧的夜雾望着月亮，仿佛月亮上藏着宫殿。联想着这么大的魔都之城中，却独自一人守在这空荡的房子里，许多忧愁的事情都让人皱起眉头了；真想问问您，明明有一个炽热的内心，现在却怎么可以对我如此冷淡呢，多么思念你在身边啊，却又离开我如同分割两个世界里，您可知道我有多么的想你吗<del>~</del></p>          </div><div class="note info">            <blockquote class="blockquote-center"><h1 id="浮尘了"><a href="#浮尘了" class="headerlink" title="浮尘了"></a>浮尘了</h1><p>不羡一生贵多金<br>踏碎浮尘归始心<br>江山千古旧如画<br>灯红酒绿把天熏<br>勾心斗角陷七情<br>何不驾云乘风去<br>定可山水遇知音<br>醉卧九天畅汝心<br>写于 2016-8-11 20:36 </p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><h1 id="轮回"><a href="#轮回" class="headerlink" title="轮回"></a>轮回</h1><p>人过黄昏老   生出宇宙闹<br>泪随岁月少   命回自然妙<br>待到天地万变时 有无轮回旧时处<br>敢问何人    天地已答<br>几人哭 几人笑 无人哭 无人笑<br>写于 大约2006-2009间</p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><h1 id="樱柳"><a href="#樱柳" class="headerlink" title="樱柳"></a>樱柳</h1><p>风柳独残败,芳樱孤自落.<br>落樱有义随,流水无情恋.<br>昔已藕相断,今此丝相连.<br>愿君相与梦,睡眼已忘眠.<br>写于 2007-3-24</p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><h1 id="过客"><a href="#过客" class="headerlink" title="过客"></a>过客</h1><p>生与过客辨与休<br>为何不与真爱守<br>自古到今无人免<br>可恨情事暗以沟<br>相悦本易怎难求<br>一缕红尘两泪休<br>踏破白头独忆君<br>春秋不待谁人留<br>写于 2011-10-21</p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><p>大江滔滔处，今古琴续绕<br>英帅霸远征，美芳思春归</p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><p>某个夏夜<br>在尚未遇见你<br>我被告知<br>孩子<br>你要学会习惯失去<br>那时候<br>我是大漠里一粒最黯然的沙砾<br>阳光下一缕光把我吹向了你<br>如果没有你<br>我就是破碎的阴影<br>最好没有你<br>就没有寒冷的回忆<br>我还是那最<br>黯然 黯然 黯然的沙砾<br>2015-1-6 改编《没有你》</p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><h1 id="我还在海上"><a href="#我还在海上" class="headerlink" title="我还在海上"></a>我还在海上</h1><p>浦东的水逆流而上<br>火车回到起跑线上<br>我退回车票，东方明珠的灯还亮<br>光线从大地退回，聚成原本的模样<br>开封的老酒瓶，重新满上<br>试卷上的答案消失了两行<br>交回大学录取通知书，忘了四年寒窗<br>想想那年<br>我来到了海上<br>写于 2017.5.8 改编《你还在我身旁》记念我曾寒潮四年工作三年已离开的上海</p></blockquote>          </div><div class="note info">            <blockquote class="blockquote-center"><h1 id="乡"><a href="#乡" class="headerlink" title="乡"></a>乡</h1><p>我们走很多地方<br>去过很多远方<br>寻找过很多方向<br>终究远方成了新的故乡<br>夕阳吻霞光<br>那脸庞依稀在天上</p></blockquote>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录自己多年来有感而发写的诗集，以下皆为原创。&lt;/p&gt;
    
    </summary>
    
      <category term="诗意人生" scheme="https://www.51201314.me/jacks/categories/%E8%AF%97%E6%84%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="诗集" scheme="https://www.51201314.me/jacks/tags/%E8%AF%97%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>JQuery常用基础知识手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/12/JQuery%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/12/JQuery常用基础知识手册/</id>
    <published>2016-08-12T06:11:48.000Z</published>
    <updated>2019-06-08T20:33:54.886Z</updated>
    
    <content type="html"><![CDATA[<p>总结JQuery</p><a id="more"></a><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><h2 id="jquery-表单-清空-初始化"><a href="#jquery-表单-清空-初始化" class="headerlink" title="jquery 表单 清空(初始化)"></a>jquery 表单 清空(初始化)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#myform'</span>)[0].reset();</span><br></pre></td></tr></table></figure><p>虽然reset方法可以做到一部分，但是如果你有个元素是这样的 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">"percent"</span> value=<span class="string">"50"</span>/&gt;</span><br></pre></td></tr></table></figure><p>那么点击reset只会还原成50 </p><h2 id="jQuery-“-hidden”-和jQuery-“-visible”"><a href="#jQuery-“-hidden”-和jQuery-“-visible”" class="headerlink" title="jQuery( “:hidden” )和jQuery( “:visible” )"></a>jQuery( “:hidden” )和jQuery( “:visible” )</h2><p>可以选取css样式 display为none和block，即隐藏和现实的元素</p>]]></content>
    
    <summary type="html">
    
      &lt;span style=&#39;color:red;&#39;&gt;【持续更新】&lt;/span&gt;总结JQuery基础知识点和常见的技巧用法
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="https://www.51201314.me/jacks/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>Linux下装tig</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/04/Linux%E4%B8%8B%E8%A3%85tig/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/04/Linux下装tig/</id>
    <published>2016-08-04T05:54:46.000Z</published>
    <updated>2019-06-08T20:33:54.898Z</updated>
    
    <content type="html"><![CDATA[<p>Tig是一个基于ncurses的字符模式Git操作界面。它的主要功能是作为一个Git仓库浏览器。但也可以作为各种Git命令的输出界面。</p><a id="more"></a><p>tig目前最新的版本是2.0.2，在安装之前需要保证已经安装了libiconv，下面是Linux下的具体安装步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://jonas.nitro.dk/tig/releases/tig-2.0.2.tar.gz</span><br><span class="line">tar zxvf tig-2.0.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> tig-2.0.2</span><br><span class="line">./configure --with-libiconv=/usr/<span class="built_in">local</span>/lib/</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>要想知道自己服务器上是否安装了libiconv以及位置在哪里，用下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># whereis libiconv</span></span><br><span class="line">libiconv: /usr/<span class="built_in">local</span>/lib/libiconv.so /usr/<span class="built_in">local</span>/lib/libiconv.la</span><br></pre></td></tr></table></figure><p>安装好之后，到你的本地仓库目录下，输入tig就可以看到效果了，更多命令请在打开tig后按下“h”。刚开始使用，记住一个回车，一个q就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tig是一个基于ncurses的字符模式Git操作界面。它的主要功能是作为一个Git仓库浏览器。但也可以作为各种Git命令的输出界面。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="https://www.51201314.me/jacks/tags/Linux/"/>
    
      <category term="tig" scheme="https://www.51201314.me/jacks/tags/tig/"/>
    
  </entry>
  
  <entry>
    <title>番茄大法好</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/08/01/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E5%A4%A7%E6%B3%95%E5%A5%BD/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/08/01/番茄工作大法好/</id>
    <published>2016-08-01T03:47:13.000Z</published>
    <updated>2019-06-08T20:33:54.985Z</updated>
    
    <content type="html"><![CDATA[<p>　　这里的番茄既不是吃的，也不是如同黄瓜来用的，他是一部适合个人单线程高效工作的武功秘籍。要练此功，必先和博主壁咚。</p><a id="more"></a><h1 id="番茄大法第一层-吸纳养气"><a href="#番茄大法第一层-吸纳养气" class="headerlink" title="番茄大法第一层-吸纳养气"></a>番茄大法第一层-吸纳养气</h1><p>　　吸纳养气之法在于做好功法的基本，准备好发功的必要内力，练功必要的前戏，修炼成熟，以免走火入魔。</p><h2 id="寻找自己的迭代时间"><a href="#寻找自己的迭代时间" class="headerlink" title="寻找自己的迭代时间"></a>寻找自己的迭代时间</h2><p>　　丛里千百度，那货却在灯火阑珊处。番茄工作法推荐时间是２５分钟，</p><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p>　　你可以利用任何优秀的方法，让大脑高速的处理你的事件，让所有的任务具有<code>可视化记录</code>，<code>可视乎处理</code>，<code>可视化记忆</code>，<code>可视化调整</code>，<code>可视化优化</code>等功能。</p><h1 id="番茄大法第二层-气游身心"><a href="#番茄大法第二层-气游身心" class="headerlink" title="番茄大法第二层-气游身心"></a>番茄大法第二层-气游身心</h1><p>　　气游身心之法在于把第一层功力，构思出具象化，让其能在你的身体和大脑中，自然高效游走。</p><h2 id="重排优先级"><a href="#重排优先级" class="headerlink" title="重排优先级"></a>重排优先级</h2><h2 id="见招拆招"><a href="#见招拆招" class="headerlink" title="见招拆招"></a>见招拆招</h2><p>　　有时候没想到一件事要做这么久，一件事要做这么复杂，大脑还被各种想法占据。</p><h2 id="单线程大法好"><a href="#单线程大法好" class="headerlink" title="单线程大法好"></a>单线程大法好</h2><p>　　单线程最大的好处是不易受干扰，不易出Bug（错误），不需要来回切换，不需要从新计算开始地点；只需要一心一意单独Done（完成）掉这个进程任务。</p><h1 id="番茄大法第三层-千篇一律"><a href="#番茄大法第三层-千篇一律" class="headerlink" title="番茄大法第三层-千篇一律"></a>番茄大法第三层-千篇一律</h1><p>　　身体有节律是非常重要的，打破生物节律是非常丧心病狂的。例如我们的脑电活动、心电活动、呼吸频率、激素水平，饮食作息习惯，都是有一定的节律的，突然的打乱和不规律，是会影响身体机能和大脑运作的。</p><h2 id="有规律的休息"><a href="#有规律的休息" class="headerlink" title="有规律的休息"></a>有规律的休息</h2><p>　　也许一个番茄大法后，是三分钟的休息，也许是五分钟，不易过长，不易过短，自我调节，寻找最佳回血时间。就这短短的几分钟，助你恢复查克拉（精气神），有句话说的好，充分的休息室为了更好的学习。工作也是一种学习总结的过程。所以有间隔性的休息，会让你时刻精力饱满旺盛。</p><h1 id="番茄大法第四层-条件反射"><a href="#番茄大法第四层-条件反射" class="headerlink" title="番茄大法第四层-条件反射"></a>番茄大法第四层-条件反射</h1><p>　　规律成习惯，习惯成自然，自然成条件反射。也许每当设置好闹钟，潜意识就暗示自己要排除杂念，高度集中，进去一个番茄钟绝对领域时间之中。当你形成条件反射的时候，就可以自我掌控，这个大法了。</p><h1 id="番茄大法最后一层-醍醐灌顶"><a href="#番茄大法最后一层-醍醐灌顶" class="headerlink" title="番茄大法最后一层-醍醐灌顶"></a>番茄大法最后一层-醍醐灌顶</h1><p>　　相信大脑本能，在脑干、边缘系统、皮层、额叶的配合下高能利用大脑性能，开发大脑潜力。脑力潜能力量有多强大，这里就不做详细深究了。相信大脑处理能力，准没错。</p><h1 id="专属番茄大法修炼成功"><a href="#专属番茄大法修炼成功" class="headerlink" title="专属番茄大法修炼成功"></a>专属番茄大法修炼成功</h1><p>一心一意，排除干扰，有序间隔性休息，</p><h1 id="无法胜有法"><a href="#无法胜有法" class="headerlink" title="无法胜有法"></a>无法胜有法</h1><p>　　到此你已经修炼成功，叫番茄大法已经无所无谓了，叫他黄瓜大法，茄子大法，金箍棒大法又何妨，心法已成，此时已经无法无边了。完。</p><h1 id="更多详细参考请阅读"><a href="#更多详细参考请阅读" class="headerlink" title="更多详细参考请阅读"></a>更多详细参考请阅读</h1><blockquote><p>番茄工作法图解</p></blockquote>]]></content>
    
    <summary type="html">
    
      简单易行的时间管理方法
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="番茄工作法" scheme="https://www.51201314.me/jacks/tags/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E6%B3%95/"/>
    
      <category term="时间管理" scheme="https://www.51201314.me/jacks/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>NPM常用命令使用手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/24/NPM%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/24/NPM常用命令使用手册/</id>
    <published>2016-06-24T13:52:50.000Z</published>
    <updated>2016-10-24T13:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>npm是一个node包管理和分发工具，已经成为了非官方的发布node模块（包）的标准。有了npm，可以很快的找到特定服务要使用的包，进行下载、安装以及管理已经安装的包。</p><a id="more"></a><h1 id="npm-install-moduleNames"><a href="#npm-install-moduleNames" class="headerlink" title="npm install moduleNames"></a>npm install moduleNames</h1><h2 id="安装Node模块"><a href="#安装Node模块" class="headerlink" title="安装Node模块"></a>安装Node模块</h2><p>安装完毕后会产生一个node_modules目录，其目录下就是安装的各个node模块。</p><p>node的安装分为全局模式和本地模式。<br>一般情况下会以本地模式运行，包会被安装到和你的应用程序代码的本地node_modules目录下。<br>在全局模式下，Node包会被安装到Node的安装目录下的node_modules下。</p><p>全局安装命令为$npm install -g moduleName。<br>获知使用$npm set global=true来设定安装模式，$npm get global可以查看当前使用的安装模式。</p><p>示例：<br>npm install express<br>默认会安装express的最新版本，也可以通过在后面加版本号的方式安装指定版本，如npm install <span class="exturl" data-url="bWFpbHRvOmV4cHJlc3NAMy4wLjY=" title="mailto:express@3.0.6">express@3.0.6<i class="fa fa-external-link"></i></span></p><p>npm install <name> -g<br>将包安装到全局环境中</name></p><p>但是代码中，直接通过require()的方式是没有办法调用全局安装的包的。全局的安装是供命令行使用的，就好像全局安装了vmarket后，就可以在命令行中直接运行vm命令</p><p>npm install <name> –save<br>安装的同时，将信息写入package.json中项目路径中如果有package.json文件时，直接使用npm install方法就可以根据dependencies配置安装所有的依赖包，这样代码提交到github时，就不用提交node_modules这个文件夹了。</name></p><h1 id="npm-view-moduleNames"><a href="#npm-view-moduleNames" class="headerlink" title="npm view moduleNames"></a>npm view moduleNames</h1><h2 id="查看node模块的package-json文件夹"><a href="#查看node模块的package-json文件夹" class="headerlink" title="查看node模块的package.json文件夹"></a>查看node模块的package.json文件夹</h2><p>注意事项：如果想要查看package.json文件夹下某个标签的内容，可以使用$npm view moduleName labelName</p><p>npm view moudleName dependencies：查看包的依赖关系</p><p>npm view moduleName repository.url：查看包的源文件地址</p><p>npm view moduleName engines：查看包所依赖的Node的版本</p><h1 id="npm-list"><a href="#npm-list" class="headerlink" title="npm list"></a>npm list</h1><h2 id="查看当前目录下已安装的node包"><a href="#查看当前目录下已安装的node包" class="headerlink" title="查看当前目录下已安装的node包"></a>查看当前目录下已安装的node包</h2><p>注意事项：Node模块搜索是从代码执行的当前目录开始的，搜索结果取决于当前使用的目录中的node_modules下的内容。$ npm list parseable=true可以目录的形式来展现当前安装的所有node包</p><h1 id="npm-help"><a href="#npm-help" class="headerlink" title="npm help"></a>npm help</h1><h2 id="查看帮助命令"><a href="#查看帮助命令" class="headerlink" title="查看帮助命令"></a>查看帮助命令</h2><p>npm help folders：查看npm使用的所有文件夹</p><h1 id="npm-rebuild-moduleName"><a href="#npm-rebuild-moduleName" class="headerlink" title="npm rebuild moduleName"></a>npm rebuild moduleName</h1><h2 id="用于更改包内容后进行重建"><a href="#用于更改包内容后进行重建" class="headerlink" title="用于更改包内容后进行重建"></a>用于更改包内容后进行重建</h2><h1 id="npm-outdated"><a href="#npm-outdated" class="headerlink" title="npm outdated"></a>npm outdated</h1><h2 id="检查包是否已经过时"><a href="#检查包是否已经过时" class="headerlink" title="检查包是否已经过时"></a>检查包是否已经过时</h2><p>此命令会列出所有已经过时的包，可以及时进行包的更新</p><h1 id="npm-update-moduleName"><a href="#npm-update-moduleName" class="headerlink" title="npm update moduleName"></a>npm update moduleName</h1><h2 id="更新node模块"><a href="#更新node模块" class="headerlink" title="更新node模块"></a>更新node模块</h2><h1 id="npm-uninstall-moudleName"><a href="#npm-uninstall-moudleName" class="headerlink" title="npm uninstall moudleName"></a>npm uninstall moudleName</h1><h2 id="卸载node模块"><a href="#卸载node模块" class="headerlink" title="卸载node模块"></a>卸载node模块</h2><h1 id="npm-help-json"><a href="#npm-help-json" class="headerlink" title="npm help json"></a>npm help json</h1><p>一个npm包是包含了package.json的文件夹，package.json描述了这个文件夹的结构。访问npm的json文件夹的方法<br>此命令会以默认的方式打开一个网页，如果更改了默认打开程序则可能不会以网页的形式打开。</p><h1 id="npm-search-packageName"><a href="#npm-search-packageName" class="headerlink" title="npm search packageName"></a>npm search packageName</h1><p>发布一个npm包的时候，需要检验某个包名是否已存在</p><h1 id="npm-init"><a href="#npm-init" class="headerlink" title="npm init"></a>npm init</h1><p>会引导你创建一个package.json文件，包括名称、版本、作者这些信息等</p><h2 id="npm-init-–scope-packageName"><a href="#npm-init-–scope-packageName" class="headerlink" title="npm init –scope==packageName"></a>npm init –scope==packageName</h2><p>会引导你创建一个 @packageName/yourPackageName 包</p><h1 id="npm-root"><a href="#npm-root" class="headerlink" title="npm root"></a>npm root</h1><h2 id="查看当前包的安装路径"><a href="#查看当前包的安装路径" class="headerlink" title="查看当前包的安装路径"></a>查看当前包的安装路径</h2><p>npm root -g：查看全局的包的安装路径</p><h1 id="npm-v"><a href="#npm-v" class="headerlink" title="npm -v"></a>npm -v</h1><h2 id="查看npm安装的版本"><a href="#查看npm安装的版本" class="headerlink" title="查看npm安装的版本"></a>查看npm安装的版本</h2><h1 id="npm-publish"><a href="#npm-publish" class="headerlink" title="npm publish"></a>npm publish</h1><p>发布包</p><h2 id="npm-publish-–access-public"><a href="#npm-publish-–access-public" class="headerlink" title="npm publish –access=public"></a>npm publish –access=public</h2><p>发布公共包</p><h1 id="修改源地址"><a href="#修改源地址" class="headerlink" title="修改源地址"></a>修改源地址</h1><p>淘宝镜像<br><code>npm config set registry http://registry.npm.taobao.org/</code><br>官方源<br><code>npm config set registry https://registry.npmjs.org/</code></p><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p>更多命令请参看npm官方文档：<span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMub3JnL2RvYy8=" title="https://www.npmjs.org/doc/">https://www.npmjs.org/doc/<i class="fa fa-external-link"></i></span><br>chyingp NPM小结: <span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9jaHlpbmdwL3AvbnBtLmh0bWw=" title="http://www.cnblogs.com/chyingp/p/npm.html">http://www.cnblogs.com/chyingp/p/npm.html<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29t" title="http://www.runoob.com">www.runoob.com<i class="fa fa-external-link"></i></span>: <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL25vZGVqcy9ub2RlanMtbnBtLmh0bWw=" title="http://www.runoob.com/nodejs/nodejs-npm.html">http://www.runoob.com/nodejs/nodejs-npm.html<i class="fa fa-external-link"></i></span>)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;npm是一个node包管理和分发工具，已经成为了非官方的发布node模块（包）的标准。有了npm，可以很快的找到特定服务要使用的包，进行下载、安装以及管理已经安装的包。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="npm" scheme="https://www.51201314.me/jacks/tags/npm/"/>
    
      <category term="node" scheme="https://www.51201314.me/jacks/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>CSS常用的基础知识手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/20/CSS%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/20/CSS常用的基础知识手册/</id>
    <published>2016-06-20T13:11:26.000Z</published>
    <updated>2016-08-18T06:32:58.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="HTML之判断IE应用不同css的用法"><a href="#HTML之判断IE应用不同css的用法" class="headerlink" title="HTML之判断IE应用不同css的用法"></a>HTML之判断IE应用不同css的用法</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE]&gt;   </span></span><br><span class="line"><span class="comment">&lt;link href="Style/IE.css" rel="stylesheet" type="text/css" /&gt; </span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br><span class="line"></span><br><span class="line">要避掉IE8的话就得：</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--[if lt IE 8]&gt;   </span></span><br><span class="line"><span class="comment">&lt;link href="Style/IE.css" rel="stylesheet" type="text/css" /&gt; </span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br><span class="line">lt在此作小于用，也就是小于IE8的版本都能识别。</span><br><span class="line"></span><br><span class="line">或者：</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--[if lte IE 7]&gt;   </span></span><br><span class="line"><span class="comment">&lt;link href="Style/IE.css" rel="stylesheet" type="text/css" /&gt; </span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br><span class="line">lte在此作小于及等于用，也就是小于及等于IE7的版本能识别。</span><br><span class="line"></span><br><span class="line">或者：</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--[if !(IE 8)]&gt;   </span></span><br><span class="line"><span class="comment">&lt;link href="Style/IE.css" rel="stylesheet" type="text/css" /&gt; </span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!–[if</span> !(<span class="attr">IE</span> <span class="attr">8</span>)]&gt;</span><span class="tag">&lt;<span class="name">![endif]–</span>&gt;</span>在此单独避掉IE8版本。</span><br><span class="line"></span><br><span class="line">在网上找了以下代码，测试了下有几个不符合：</span><br><span class="line"></span><br><span class="line">1. <span class="comment">&lt;!--[if !IE]&gt;&lt;!--&gt;</span> 除IE外都可识别 <span class="comment">&lt;!--&lt;![endif]--&gt;</span> </span><br><span class="line">2.  <span class="comment">&lt;!--[if IE]&gt; 所有的IE可识别 &lt;![endif]--&gt;</span> </span><br><span class="line">3. <span class="comment">&lt;!--[if IE 5.0]&gt;  只有IE5.0可以识别 &lt;![endif]--&gt;</span> </span><br><span class="line">4. <span class="comment">&lt;!--[if IE 5]&gt; 仅IE5.0与IE5.5可以识别  &lt;![endif]--&gt;</span> </span><br><span class="line">5. <span class="comment">&lt;!--[if gt IE 5.0]&gt; IE5.0以及IE5.0以上版本都可以识别  &lt;![endif]--&gt;</span> </span><br><span class="line">6. <span class="comment">&lt;!--[if IE 6]&gt; 仅IE6可识别 &lt;![endif]--&gt;</span> </span><br><span class="line">7. <span class="comment">&lt;!--[if lt IE 6]&gt; IE6以及IE6以下版本可识别 &lt;![endif]--&gt;</span> </span><br><span class="line">8. <span class="comment">&lt;!--[if gte IE 6]&gt; IE6以及IE6以上版本可识别 &lt;![endif]--&gt;</span> </span><br><span class="line">9. <span class="comment">&lt;!--[if  IE 7]&gt; 仅IE7可识别 &lt;![endif]--&gt;</span> </span><br><span class="line">10. <span class="comment">&lt;!--[if lt IE 7]&gt;  IE7以及IE7以下版本可识别 &lt;![endif]--&gt;</span> </span><br><span class="line">11. <span class="comment">&lt;!--[if gte IE 7]&gt;  IE7以及IE7以上版本可识别 &lt;![endif]--&gt;</span></span><br><span class="line">经过测试后：</span><br><span class="line"></span><br><span class="line">5. <span class="comment">&lt;!--[if gt IE 5.0]&gt; IE5.0以及IE5.0以上版本都可以识别 &lt;![endif]--&gt;</span></span><br><span class="line">这个只有IE6以上的版本才可识别，也就是不包括IE5.0</span><br><span class="line"></span><br><span class="line">7. <span class="comment">&lt;!--[if lt IE 6]&gt; IE6以及IE6以下版本可识别 &lt;![endif]--&gt;</span></span><br><span class="line">这个只有IE5以下的版本才能识别，也就是不包括IE6</span><br><span class="line"></span><br><span class="line">10. <span class="comment">&lt;!--[if lt IE 7]&gt; IE7以及IE7以下版本可识别 &lt;![endif]--&gt;</span></span><br><span class="line">这个只有IE6以下的版本才能识别，也就是不包括IE7</span><br></pre></td></tr></table></figure><p>后来找到：</p><p>gt = Great Then 大于 &gt; = &gt; 大于号 lt = Less Then  小于 &lt; = &lt; 小于号 gte = Great Then or Equal 大于或等于 lte = Less Then  or Equal 小于或等于<br>一下就明白过来了，还费了那么大劲。</p><h1 id="CSS3之浏览器前缀"><a href="#CSS3之浏览器前缀" class="headerlink" title="CSS3之浏览器前缀"></a>CSS3之浏览器前缀</h1><p>-moz -webkit -o -ms什么意思？<br>现在CSS3已经大行其道了，我们经常看到一些CSS3代码如下：</p><p>-moz-box-shadow: 0px 0px 8px #444;<br>-webkit-box-shadow: 0px 0px 8px #444;<br>做一个box阴影效果为什么要写两行前缀-moz -webkit不一样，属性一样的代码呢？</p><p>这是因为现在浏览器的标准还不一样，比如-moz 是Firefox能够识别的样式，其他前缀含义如下：</p><p>Firefox: -moz-box-shadow<br>Safari: -webkit-box-shadow<br>Opera: -o-box-shadow<br>IE: -ms-box-shadow</p><p>我们做一个效果写多个浏览器前缀不同的代码是为了让网页在各浏览器中都能被识别。</p><h1 id="单位px和em-rem的区别"><a href="#单位px和em-rem的区别" class="headerlink" title="单位px和em,rem的区别"></a>单位px和em,rem的区别</h1><p>国内的设计师大都喜欢用px，而国外的网站大都喜欢用em和rem，那么三者有什么区别，又各自有什么优劣呢？</p><p>PX特点</p><ol><li>IE无法调整那些使用px作为单位的字体大小；</li><li>国外的大部分网站能够调整的原因在于其使用了em或rem作为字体单位；</li><li>Firefox能够调整px和em，rem，但是96%以上的中国网民使用IE浏览器(或内核)。<br>px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。(引自CSS2.0手册)<br>em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。(引自CSS2.0手册)</li></ol><blockquote><p>任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em,10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了。</p></blockquote><h2 id="EM特点"><a href="#EM特点" class="headerlink" title="EM特点"></a>EM特点</h2><ol><li>em的值并不是固定的；</li><li>em会继承父级元素的字体大小。</li></ol><p>所以我们在写CSS的时候，需要注意两点：</p><ol><li>body选择器中声明Font-size=62.5%；</li><li>将你的原来的px数值除以10，然后换上em作为单位；</li><li>重新计算那些被放大的字体的em数值。避免字体大小的重复声明。</li></ol><blockquote><p>也就是避免1.2 * 1.2= 1.44的现象。比如说你在#content中声明了字体大小为1.2em，那么在声明p的字体大小时就只能是1em，而不是1.2em, 因为此em非彼em，它因继承#content的字体高而变为了1em=12px。</p></blockquote><h2 id="rem特点"><a href="#rem特点" class="headerlink" title="rem特点"></a>rem特点</h2><p>rem是CSS3新增的一个相对单位（root em，根em），这个单位引起了广泛关注。这个单位与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。目前，除了IE8及更早版本外，所有浏览器均已支持rem。对于不支持它的浏览器，应对方法也很简单，就是多写一个绝对单位的声明。这些浏览器会忽略用rem设定的字体大小。下面就是</p><p>注意：<br>        选择使用什么字体单位主要由你的项目来决定，如果你的用户群都使用最新版的浏览器，那推荐使用rem，如果要考虑兼容性，那就使用px,或者两者同时使用。<br>在这里为大家提供一个px,em,rem单位转换工具<br>地址：<span class="exturl" data-url="aHR0cDovL3B4dG9lbS5jb20v" title="http://pxtoem.com/">http://pxtoem.com/<i class="fa fa-external-link"></i></span></p><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><h2 id="根据宽度截断尾巴省略成…"><a href="#根据宽度截断尾巴省略成…" class="headerlink" title="根据宽度截断尾巴省略成…"></a>根据宽度截断尾巴省略成…</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">verflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br><span class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</span><br><span class="line"><span class="selector-tag">width</span>: 210<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><h3 id="画×号"><a href="#画×号" class="headerlink" title="画×号"></a>画×号</h3> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>css3画 叉 号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">b</span> &#123;<span class="attribute">display</span>:inline-block; <span class="attribute">width</span>:<span class="number">12px</span>; <span class="attribute">height</span>:<span class="number">2px</span>; <span class="attribute">background</span>:<span class="number">#f00</span>; <span class="attribute">font-size</span>:<span class="number">0</span>; <span class="attribute">line-height</span>:<span class="number">0</span>;<span class="attribute">vertical-align</span>:middle;<span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(45deg);&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">b</span><span class="selector-pseudo">:after</span> &#123; <span class="attribute">content</span>:<span class="string">'.'</span>; <span class="attribute">display</span>:block; <span class="attribute">width</span>:<span class="number">12px</span>; <span class="attribute">height</span>:<span class="number">2px</span>; <span class="attribute">background</span>:<span class="number">#f00</span>;<span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-90deg);&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个例子：<br>p {font-size:14px; font-size:.875rem;}<br>缺点：只能用于一行</p>]]></content>
    
    <summary type="html">
    
      &lt;span style=&#39;color:red;&#39;&gt;【持续更新】&lt;/span&gt;总结css和css3的基础知识点和常见的用法
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="https://www.51201314.me/jacks/tags/CSS/"/>
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="基础" scheme="https://www.51201314.me/jacks/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="小技巧" scheme="https://www.51201314.me/jacks/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令使用手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/17/Linux%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/17/Linux命令使用手册/</id>
    <published>2016-06-17T06:06:05.000Z</published>
    <updated>2016-08-15T09:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h1><p>ls命令是列出目录内容(List Directory Contents)的意思。运行它就是列出文件夹里的内容，可能是文件也可能是文件夹。</p><p>“ls -l”命令以详情模式(long listing fashion)列出文件夹的内容。</p><p>“ls -a”命令会列出文件夹里的所有内容，包括以”.”开头的隐藏文件。</p><p>注意：在Linux中，文件以“.”开头的就是隐藏文件，并且每个文件，文件夹，设备或者命令都是以文件对待。ls -l 命令输出：<br>d (代表了是目录).<br>rwxr-xr-x 是文件或者目录对所属用户，同一组用户和其它用户的权限。<br>上面例子中第一个ravisaive 代表了文件文件属于用户ravisaive<br>上面例子中的第二个ravisaive代表了文件文件属于用户组ravisaive<br>4096 代表了文件大小为4096字节.<br>May 8 01:06 代表了文件最后一次修改的日期和时间.<br>最后面的就是文件/文件夹的名字</p><p>更多”ls”例子请查看<span class="exturl" data-url="aHR0cDovL3d3dy50ZWNtaW50LmNvbS8xNS1iYXNpYy1scy1jb21tYW5kLWV4YW1wbGVzLWluLWxpbnV4Lw==" title="http://www.tecmint.com/15-basic-ls-command-examples-in-linux/">15 linux中ls命令实例<i class="fa fa-external-link"></i></span></p><h1 id="lsblk命令"><a href="#lsblk命令" class="headerlink" title="lsblk命令"></a>lsblk命令</h1><p>“lsblk”就是列出块设备。除了RAM外，以标准的树状输出格式，整齐地显示块设备。</p><p>“lsblk -l”命令以列表格式显示块设备(而不是树状格式)。</p><p>注意：lsblk是最有用和最简单的方式来了解新插入的USB设备的名字，特别是当你在终端上处理磁盘/块设备时。</p><h1 id="md5sum命令"><a href="#md5sum命令" class="headerlink" title="md5sum命令"></a>md5sum命令</h1><p>“md5sum”就是计算和检验MD5信息签名。md5 checksum(通常叫做哈希)使用匹配或者验证文件的文件的完整性，因为文件可能因为传输错误，磁盘错误或者无恶意的干扰等原因而发生改变。</p><h1 id="dd命令"><a href="#dd命令" class="headerlink" title="dd命令"></a>dd命令</h1><p>“dd”命令代表了转换和复制文件。可以用来转换和复制文件，大多数时间是用来复制iso文件(或任何其它文件)到一个usb设备(或任何其它地方)中去，所以可以用来制作USB启动器。</p><h1 id="uname命令"><a href="#uname命令" class="headerlink" title="uname命令"></a>uname命令</h1><p>“uname”命令就是Unix Name的简写。显示机器名，操作系统和内核的详细信息。<br>注意： uname显示内核类别， uname -a显示详细信息。上面的输出详细说明了uname -a<br>“Linux“: 机器的内核名<br>“tecmint“: 机器的节点名<br>“3.8.0-19-generic“: 内核发布版本<br>“#30-Ubuntu SMP“: 内核版本<br>“i686“: 处理器架构<br>“GNU/Linux“: 操作系统名</p><h1 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h1><p>“sudo”(super user do)命令允许授权用户执行超级用户或者其它用户的命令。通过在sudoers列表的安全策略来指定。</p><blockquote><p>root@tecmint:~# sudo add-apt-repository ppa:tualatrix/ppa</p></blockquote><p>注意：sudo 允许用户借用超级用户的权限，然而”su”命令实际上是允许用户以超级用户登录。所以sudo比su更安全。<br>并不建议使用sudo或者su来处理日常用途，因为它可能导致严重的错误如果你意外的做错了事，这就是为什么在linux社区流行一句话：<br>“To err is human, but to really foul up everything, you need root password.”</p><h1 id="ll-指令的显示的信息为（当前目录下只有jacksdir一个目录）"><a href="#ll-指令的显示的信息为（当前目录下只有jacksdir一个目录）" class="headerlink" title="ll 指令的显示的信息为（当前目录下只有jacksdir一个目录）"></a>ll 指令的显示的信息为（当前目录下只有jacksdir一个目录）</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x 3 jacks hdfs 4096 4月  14 16:19 jacksdir</span><br></pre></td></tr></table></figure><p>上述信息分别表示：权限（drwxr-xr-x 3）、所属用户（jacks）和组（hdfs）、大小(4096)、时间(4月 14 16:19)、名称(nameservice1)。</p><blockquote><p>权限中的字母一共有10位数：<br>第1位有两种选择：-表示是文件，d表示是目录。此处是d，表示jacksdir是目录；<br>第2位到第4位rwx表示的是所有者（所属用户hdfs）的权限；<br>第5位到第7位r-x表示的是组（hdfs）的权限；<br>第8位到第10位r-x表示的是其他人（other）的权限；<br>另外，<br>　　 r 表示文件可以被读（read）<br>　　 w 表示文件可以被写（write）<br>　　 x 表示文件可以被执行（如果它是程序的话）<br>　　 - 表示相应的权限还没有被授予</p></blockquote><h1 id="chown-修改文件和文件夹的用户和用户组属性"><a href="#chown-修改文件和文件夹的用户和用户组属性" class="headerlink" title="chown 修改文件和文件夹的用户和用户组属性"></a>chown 修改文件和文件夹的用户和用户组属性</h1><p>该指令需要在root权限下使用。</p><ol><li><p>要修改文件hh.c的所有者.修改为jacks的这个用户所有<br>chown jacks hh.c<br>这样就把hh.c的用户访问权限应用到jacks作为所有者 </p></li><li><p>将目录 /tmp/sco 这个目录的所有者和组改为jacks和组net，-R参数是遍历其子文件<br>chown -R jacks:net /tmp/sco </p></li></ol><h1 id="chmod-修改文件和文件夹读写执行属性"><a href="#chmod-修改文件和文件夹读写执行属性" class="headerlink" title="chmod 修改文件和文件夹读写执行属性"></a>chmod 修改文件和文件夹读写执行属性</h1><p>查看当前文件文件temp的权限信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ll | grep temp</span><br><span class="line"></span><br><span class="line">-rw-rw-r--  1 root root      4405  3月 17 11:50 temp</span><br></pre></td></tr></table></figure><p>修改文件权限的指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod o+w temp</span><br></pre></td></tr></table></figure><p>表示给文件temp授予其他人写权限，现在查看temp的权限信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rw-rw-rw-  1 root root      4405  3月 17 11:50 temp</span><br></pre></td></tr></table></figure><p>我们发现第9位多出了一个w。</p><p>其中参数表示的意义为：<br>　　u 代表所有者（user）<br>　　g 代表所有者所在的组群（group）<br>　　o 代表其他人，但不是u和g （other）<br>　　a 代表全部的人，也就是包括u，g和o<br>　　r 表示文件可以被读（read）<br>　　w 表示文件可以被写（write）<br>　　x 表示文件可以被执行（如果它是程序的话）<br>　　其中：rwx也可以用数字来代替<br>　　r  ————4<br>　　w ————2<br>　　x ————1<br>　　- ————0　　行动：<br>　　+ 表示添加权限<br>　　- 表示删除权限<br>　　= 表示使之成为唯一的权限　　当大家都明白了上面的东西之后，那么我们常见的以下的一些权限就很容易都明白了：<br>　　-rw——- (600) 只有所有者才有读和写的权限<br>　　-rw-r–r– (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限<br>　　-rwx—— (700) 只有所有者才有读，写，执行的权限<br>　　-rwxr-xr-x (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限<br>　　-rwx–x–x (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限<br>　　-rw-rw-rw- (666) 每个人都有读写的权限<br>　　-rwxrwxrwx (777) 每个人都有读写和执行的权限</p><p>#wget<br>wget是一个从网络上自动下载文件的自由工具，支持通过HTTP、HTTPS、FTP三个最常见的TCP/IP协议下载，并可以使用HTTP代理。</p><p>#tar<br> tar [-cxtzjvfpPN] 文件与目录 ….<br>参数：<br>-c ：建立一个压缩文件的参数指令(create 的意思)；<br>-x ：解开一个压缩文件的参数指令！<br>-t ：查看 tarfile 里面的文件！<br>特别注意，在参数的下达中， c/x/t 仅能存在一个！不可同时存在！<br>因为不可能同时压缩与解压缩。<br>-z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩？<br>-j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩？<br>-v ：压缩的过程中显示文件！这个常用，但不建议用在背景执行过程！<br>-f ：使用档名，请留意，在 f 之后要立即接档名喔！不要再加参数！<br>　　　例如使用『 tar -zcvfP tfile sfile』就是错误的写法，要写成<br>　　　『 tar -zcvPf tfile sfile』才对喔！<br>-p ：使用原文件的原来属性（属性不会依据使用者而变）<br>-P ：可以使用绝对路径来压缩！<br>-N ：比后面接的日期(yyyy/mm/dd)还要新的才会被打包进新建的文件中！<br>–exclude FILE：在压缩的过程中，不要将 FILE 打包！</p><p>范例：<br>范例一：将整个 /etc 目录下的文件全部打包成为 /tmp/etc.tar<br>[root@linux ~]# tar -cvf /tmp/etc.tar /etc &lt;==仅打包，不压缩！<br>[root@linux ~]# tar -zcvf /tmp/etc.tar.gz /etc &lt;==打包后，以 gzip 压缩<br>[root@linux ~]# tar -jcvf /tmp/etc.tar.bz2 /etc &lt;==打包后，以 bzip2 压缩<br>  特别注意，在参数 f 之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。<br>  如果加 z 参数，则以 .tar.gz 或 .tgz 来代表 gzip 压缩过的 tar file ～<br>   上述指令在执行的时候，会显示一个警告讯息：<br>  『tar: Removing leading `/‘ from member names』那是关於绝对路径的特殊设定。</p><p>范例二：查阅上述 /tmp/etc.tar.gz 文件内有哪些文件？<br>[root@linux ~]# tar -ztvf /tmp/etc.tar.gz<br>  由於我们使用 gzip 压缩，所以要查阅该 tar file 内的文件时，<br>  就得要加上 z 这个参数了！这很重要的！</p><p>范例三：将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下<br>[root@linux ~]# cd /usr/local/src<br>[root@linux src]# tar -zxvf /tmp/etc.tar.gz<br>  在预设的情况下，我们可以将压缩档在任何地方解开的！以这个范例来说，<br>  我先将工作目录变换到 /usr/local/src 底下，并且解开 /tmp/etc.tar.gz ，<br>  则解开的目录会在 /usr/local/src/etc 呢！另外，如果您进入 /usr/local/src/etc<br>  则会发现，该目录下的文件属性与 /etc/ 可能会有所不同喔！</p><p>范例四：在 /tmp 底下，我只想要将 /tmp/etc.tar.gz 内的 etc/passwd 解开而已<br>[root@linux ~]# cd /tmp<br>[root@linux tmp]# tar -zxvf /tmp/etc.tar.gz etc/passwd<br>  我可以透过 tar -ztvf 来查阅 tarfile 内的文件名称，如果单只要一个文件，<br>  就可以透过这个方式来下达！注意到！ etc.tar.gz 内的根目录 / 是被拿掉了！</p><p>范例五：将 /etc/ 内的所有文件备份下来，并且保存其权限！<br>[root@linux ~]# tar -zxvpf /tmp/etc.tar.gz /etc<br>  这个 -p 的属性是很重要的，尤其是当您要保留原本文件的属性时！</p><p>范例六：在 /home 当中，比 2005/06/01 新的文件才备份<br>[root@linux ~]# tar -N ‘2005/06/01’ -zcvf home.tar.gz /home</p><p>范例七：我要备份 /home, /etc ，但不要 /home/dmtsai<br>[root@linux ~]# tar –exclude /home/dmtsai -zcvf myfile.tar.gz /home/* /etc</p><p>范例八：将 /etc/ 打包后直接解开在 /tmp 底下，而不产生文件！<br>[root@linux ~]# cd /tmp<br>[root@linux tmp]# tar -cvf - /etc | tar -xvf -</p><hr><h1 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h1><h2 id="dpkg-–list"><a href="#dpkg-–list" class="headerlink" title="dpkg –list"></a>dpkg –list</h2><p>浏览已安装的程序。要查看已安装的软件包列表，请输入以下命令。请注意你希望卸载的软件包的名称。</p><h2 id="sudo-apt-get-–purge-remove"><a href="#sudo-apt-get-–purge-remove" class="headerlink" title="sudo apt-get –purge remove "></a>sudo apt-get –purge remove <programname></programname></h2><p>卸载程序和所有配置文件。在终端中输入以上命令，把<programname>替换成你希望完全移除的程序</programname></p><h2 id="sudo-apt-get-remove"><a href="#sudo-apt-get-remove" class="headerlink" title="sudo apt-get remove "></a>sudo apt-get remove <programname></programname></h2><p>只卸载程序。如果你移除程序但保留配置文件，请输入以上命令</p><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><p>当在前台运行某个作业时，终端被该作业占据；而在后台运行作业时，它不会占据终端。可以使用&amp;命令把作业放到后台执行。<br>命令格式：<code>command &amp;</code></p><h2 id="centos中查看用户和用户组"><a href="#centos中查看用户和用户组" class="headerlink" title="centos中查看用户和用户组"></a>centos中查看用户和用户组</h2><p>用户列表文件：/etc/passwd<br>用户组列表文件：/etc/group<br>查看系统中有哪些用户：cut -d : -f 1 /etc/passwd<br>查看可以登录系统的用户：cat /etc/passwd | grep -v /sbin/nologin | cut -d : -f 1<br>查看用户操作：w命令(需要root权限)<br>查看某一用户：w 用户名<br>查看登录用户：who<br>查看用户登录历史记录：last</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><span class="exturl" data-url="aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2d1YWloYWkvYXJ0aWNsZS9kZXRhaWxzLzg3MDU5OTI=" title="http://blog.csdn.net/xiaoguaihai/article/details/8705992">文哥博客-linux常用基本命令<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      不会敲命令行的程序猿不是一个装逼合格的程序猿
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="https://www.51201314.me/jacks/tags/Linux/"/>
    
      <category term="命令" scheme="https://www.51201314.me/jacks/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Git命令行使用手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/17/Git%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/17/Git命令行使用手册/</id>
    <published>2016-06-17T05:46:36.000Z</published>
    <updated>2016-10-24T07:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="基本命令和理解"><a href="#基本命令和理解" class="headerlink" title="基本命令和理解"></a>基本命令和理解</h1><h2 id="git-help"><a href="#git-help" class="headerlink" title="git --help"></a><code>git --help</code></h2><p>不多说，会给你命令提示</p><h2 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a><code>git init</code></h2><p>初始化版本库<br><code>git init --bare</code><br>创建一个裸体仓库，它只包含.git 里面的文件，不会包含工作目录的文件，这个仓库只保存git历史提交的版本信息，而不允许用户在上面进行各种git操作，用来当作远端‘根源库’，用来记录所有仓库的git操作，有了它才能有push的操作。<br>如何基于这个裸体仓库，创建本地库呢？</p><ol><li>新建文件夹,初始化版本库和添加指定到这个根源库，就可以在这个文件夹下有个本地仓库了<br><code>git init &amp; git remote add &lt;根源库&gt;</code></li><li>克隆<br><code>git clone &lt;根源库地址&gt; &lt;本地库名&gt;</code><br>参数-o, –origin <name><br>use <name> instead of ‘origin’ to track upstream</name></name></li></ol><h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a><code>git pull</code></h2><p><code>git pull</code><br>是git fetch+git merge FETCH_HEAD的缩写.</p><p>完整格式是<br><code>git pull &lt;远程库名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code></p><p>如取回远程库中的develop分支，与本地的develop分支进行merge，要写成<br><code>git pull origin develop:develop</code><br>如果是要与本地当前分支merge，则冒号后面的&lt;本地分支名&gt;可以不写。<br><code>git pull origin develop</code></p><p>如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。<br>但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。<br><code>git pull -p</code><br>等同于下面的命令<br><code>git fetch --prune origin</code><br><code>git fetch -p</code></p><h2 id="git-stash-贮藏"><a href="#git-stash-贮藏" class="headerlink" title="git stash (贮藏)"></a><code>git stash (贮藏)</code></h2><p>当本地有文件改动的时候，需要commit后才能pull，如果我不想commit也能pull的时候，就可以用stash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git stash save <span class="string">"XXXX"</span></span><br><span class="line">$ git pull --rebase</span><br><span class="line">$ git stash pop  //或者git stash apply</span><br></pre></td></tr></table></figure><p>pop会apply后删除这条贮藏信息，apply着不会删除</p><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a><code>git log</code></h2><p><code>git log</code><br>查看commit的历史</p><p><code>git show &lt;commit-hash-id&gt;</code><br>查看某次commit的修改内容</p><p><code>git log -p &lt;commit-hash-id&gt;</code><br>等效上面</p><p><code>git log -p &lt;filename&gt;</code><br>详细查看某个文件的修改历史</p><p><code>git log -p -2</code><br>查看最近2次的更新内容<br>然后你就可以使用 less 中常用的检索命令即“斜杠”后面加检索词/），在变更内容日志中检索指定的关键词（使用小写的n跳到下一条检索结果，大写的N跳到上一条检索结果）</p><p><code>git log -L 1,1:some-file.txt</code><br>查看文件中指定位置的变更<br>你还可以 <code>git blame filename</code> 追查出文件中每一行是由谁变更的。</p><p><code>git log --since=7.days --author=Jacks --grep=init -2</code><br>7.days指最近7天，作者为“Jacks”的，提交含有关键字’init’的，-2指获取前最近前2条记录。</p><p><code>git log --committer=Jack</code><br>如指定提交者为”Jack”的所有提交,注意的是作者名字是有大小写之分的</p><p>来看一个实际的例子，如果要查看 Git 仓库中，2008 年 10 月期间，Jacks 提交的但未合并的测试脚本（位于项目的 t/ 目录下的文件），可以用下面的查询命令：<br><code>git log --pretty=&quot;%h - %s&quot; --author=Jacks --since=&quot;2008-10-01&quot;  --before=&quot;2008-11-01&quot; --no-merges -- t/</code></p><h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a><code>git branch</code></h2><ol><li>查看所有分支 <code>git branch -a</code></li><li>查看本地分支 <code>git branch</code></li><li>创建分支 <code>git branch test</code></li><li>切换分支 <code>git checkout test</code> (会去远端匹配名字为test的分子，存在会在本地创建一个对应的本地分子，如果远端本地都没有则会失败)</li><li>切换到远端分支 <code>git checkout remotes/origin/test</code></li><li>根据当前分支创建+切换一个新分支 <code>git checkout -b branch-name</code></li><li>删除本地分支 <code>git branch -d branch-name</code></li><li>删除远端分支 <code>git push origin :branch-name</code> （提交一个空分支覆盖远端分支）或者 <code>git push origin --delete branch-name</code></li><li>删除本地对远端分支的链接 <code>git branch -r -d origin/branch-name</code>  （本地没了，远端服务器上还在）</li></ol><h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a><code>git remote</code></h2><p>不带选项的时候，git remote命令列出所有远程主机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote</span><br><span class="line">origin</span><br></pre></td></tr></table></figure><p>使用-v选项，可以参看远程主机的网址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  git@github.com:jquery/jquery.git (fetch)</span><br><span class="line">origin  git@github.com:jquery/jquery.git (push)</span><br></pre></td></tr></table></figure><p>克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -o jQuery https://github.com/jquery/jquery.git</span><br><span class="line">$ git remote</span><br><span class="line">jQuery</span><br></pre></td></tr></table></figure><p>上面命令表示，克隆的时候，指定远程主机叫做jQuery。</p><ol><li>查看该主机的详细信息<br><code>git remote show &lt;主机名&gt;</code></li><li>添加远程主机<br><code>git remote add &lt;主机名&gt; &lt;网址&gt;</code></li><li>删除远程主机<br><code>git remote rm &lt;主机名&gt;</code></li><li>远程主机的改名<br><code>git remote rename &lt;原主机名&gt; &lt;新主机名&gt;</code></li></ol><h2 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a><code>git tag</code></h2><ol><li><p>开始创建标签，创建标签的两种方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v0.1.0 -m <span class="string">"第一个版本"</span>  //创建标签， -a 加标签，-m  加标签注释。</span><br><span class="line">$ git tag v0.1.0                    //创建轻量级标签，不用-a，-m等参数</span><br></pre></td></tr></table></figure></li><li><p>查看创建的标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git tag            //列出git中现有的所有标签</span><br><span class="line">$ git show v0.1.0    //git show 命令查看相应标签的版本信息，并连同显示打标签时的提交对象</span><br></pre></td></tr></table></figure></li><li><p>加上-f 覆盖原有的tag<br><code>git tag -f v0.1.0</code></p></li><li><p>如果要一次推送所有本地新增的标签上去，可以使用 –tags<br><code>git push origin --tags</code><br>注：普通的git push origin master操作不会推送标签到服务器端。</p></li><li><p>推送指定的标签±<br><code>git push origin v0.1.0</code></p></li><li><p>删除本地标签<br><code>git tag -d v0.1.0</code></p></li><li><p>删除服务器标签<br><code>git push origin :refs/tags/v0.1.0</code></p></li></ol><h2 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a><code>git merge</code></h2><p><code>--no-ff</code><br>指的是强行关闭fast-forward方式。</p><p><code>fast-forward</code><br>方式就是当条件允许的时候，git直接把HEAD指针指向合并分支的头，完成合并。属于“快进方式”，不过这种情况如果删除分支，则会丢失分支信息。因为在这个过程中没有创建commit</p><p><code>git merge --squash</code><br>是用来把一些不必要commit进行压缩，比如说，你的feature在开发的时候写的commit很乱，那么我们合并的时候不希望把这些历史commit带过来，于是使用–squash进行合并，此时文件已经同合并后一样了，但不移动HEAD，不提交。需要进行一次额外的commit来“总结”一下，然后完成最终的合并。</p><p>总结：<br><code>--no-ff</code><br>不使用fast-forward方式合并，保留分支的commit历史<br><code>--squash</code><br>使用squash方式合并，把多次分支commit历史压缩为一次<br><img src="https://image-static.segmentfault.com/120/030/1200301748-54c88abc9ed57" alt></p><h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a><code>git reset</code></h2><p>在git中，有3种类型的重置文件。重置是让文件回到git历史中的一个特定版本。<br><code>git reset –hard NaN</code><br>回退到一个特定的历史版本。丢弃这次提交之后的所有变更。<br><code>git reset NaN</code><br>回滚到一个特定的历史版本。将这个版本之后的所有变更移动到“未暂存”的阶段。这也就意味着你需要运行 git add . 和 git commit 才能把这些变更提交到仓库.<br><code>git reset –soft NaN</code><br>回滚到一个特定的历史版本。将这次提交之后所有的变更移动到暂存并准备提交阶段。意味着你只需要运行 git commit 就可以把这些变更提交到仓库。</p><h2 id="git-clean"><a href="#git-clean" class="headerlink" title="git clean"></a><code>git clean</code></h2><p>从工作树中移除未跟踪的文件，比如项目中新建或者复制，拖入的文件，还没进行<code>git add</code>的文件，我们突然不想要了，就可以把它们清理掉,如果是文件夹,加上参数-d即可</p><h1 id="高阶玩法"><a href="#高阶玩法" class="headerlink" title="高阶玩法"></a>高阶玩法</h1><h2 id="git-pull-rebase"><a href="#git-pull-rebase" class="headerlink" title="git pull --rebase"></a><code>git pull --rebase</code></h2><p>默认情况下,git pull就是先fetch，然后执行merge 操作,如果加–rebase 参数，就是使用git rebase代替git merge.</p><h3 id="修改git-pull默认merge操作为rebase"><a href="#修改git-pull默认merge操作为rebase" class="headerlink" title="修改git pull默认merge操作为rebase"></a>修改git pull默认merge操作为rebase</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global pull.rebase <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>每次 git pull就变成fetch+rebase，等效于git pull –rebase</p><h2 id="git-rebase-i"><a href="#git-rebase-i" class="headerlink" title="git rebase -i"></a><code>git rebase -i</code></h2><p>Git没有一个修改历史的工具，但是你可以使用rebase工具来衍合一系列的提交到它们原来所在的HEAD上而不是移到新的上。依靠这个交互式的rebase工具，你就可以停留在每一次提交后，如果你想修改或改变说明、增加文件或任何其他事情。你可以通过给<code>git rebase</code>增加-i选项来以交互方式地运行rebase。你必须通过告诉命令衍合到哪次提交，来指明你需要重写的提交的回溯深度。<br>例如，你想修改最近三次的提交说明，或者其中任意一次，你必须给<code>git rebase -i</code>提供一个参数，指明你想要修改的提交的父提交，例如HEAD<del>2或者HEAD</del>3。可能记住~3更加容易，因为你想修改最近三次提交；但是请记住你事实上所指的是四次提交之前，即你想修改的提交的父提交。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i HEAD~3</span><br></pre></td></tr></table></figure><h3 id="修改commit信息"><a href="#修改commit信息" class="headerlink" title="修改commit信息"></a>修改commit信息</h3><p>HEAD~3范围内的每一次提交都会被重写，无论你是否修改说明。<br><strong>注意</strong>：不要涵盖你已经推送到中心服务器的提交——会使其他开发者产生混乱，因为你提供了同样变更的不同版本。<br>修改提交说明，退出编辑器。然后，运行在输入上边命令后的结果中，将你想修改的每一次提交前面的<code>pick</code>改为<code>edit</code>,保存退出<br>根据提示，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改提交说明，退出编辑器。然后，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure><p>这个命令会自动应用其他两次提交，你就完成任务了。如果你将更多行的<code>pick</code> 改为<br>`edit你就能对你想修改的提交重复这些步骤。Git每次都会停下，让你修正提交，完成后继续运行。</p><h3 id="合并多次commit信息"><a href="#合并多次commit信息" class="headerlink" title="合并多次commit信息"></a>合并多次commit信息</h3><p>通过<code>git rebase -i HEAD~~~</code>进入编辑模式，使用squash命令（本文使用简写”s“，该命令用于合并多次提交），并保存退出；<br>这里需要注意的是</p><ol><li>信息会倒序排列</li><li>需要保留一个pick，作为squash压缩后的点（保留哪一个提交点，根据你需要保留哪个点的信息）<br>然后将三次提交的commit信息合并为一次提交的commit信息。保存退出。<br>我们再次通过git log查看提交信息，此时只有一次提交的commit信息。<br>这里也可以单单修改的每一次提交的commit信息，只需要前面的<code>pick</code>改为<code>r</code>,保存退出。<br>以上参数git均有英文提示。</li></ol><p><strong>注意</strong><br>果有多次commit，可以用HEAD~选取哪几次，不带HEAD参数，就是全部的commit。</p><h2 id="修改远端log提交的某条日志"><a href="#修改远端log提交的某条日志" class="headerlink" title="修改远端log提交的某条日志"></a>修改远端log提交的某条日志</h2><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//找到你要修改的那条<span class="built_in">log</span>的id</span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">//假设id是0b58225,找到你要修改的那一条,把前面的pick改成r,保存退出</span><br><span class="line">$ git rebase -i 0b58225~1</span><br><span class="line">//修改好commit后，执行下面命令，强制push远端（会完全覆盖，谨慎操作，确保你当前和远端是最新的，不然会抹点远端别人提交的）</span><br><span class="line">$ git push -f (建议push指定分支，以免影响其他分支)</span><br></pre></td></tr></table></figure><h2 id="删除本地库中与远端不存在的跟踪分支（tracking-branches）"><a href="#删除本地库中与远端不存在的跟踪分支（tracking-branches）" class="headerlink" title="删除本地库中与远端不存在的跟踪分支（tracking branches）"></a>删除本地库中与远端不存在的跟踪分支（tracking branches）</h2><p>当远端分支被强制删除后，本地库中对远程分支的记录并不会同步更新，所以当我们<code>git branch -a</code>的时候会发现很多多余的remote/origin/xxxx分支（tracking branches）实际上远端已经不存在了。<br>我们可以用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//方法一</span><br><span class="line">$ git fetch [origin] -p //[origin]可以为空,为空为默认源的名字，参数p等同prune，意思是除去所有的远端处不再存在的任何远端跟踪分支</span><br><span class="line">//方法二</span><br><span class="line">$ git remote prune [origin] //git remote 我们知道是管理已经跟踪的库，功能同上</span><br></pre></td></tr></table></figure><h2 id="美化Git显示漂亮日志的小技巧"><a href="#美化Git显示漂亮日志的小技巧" class="headerlink" title="美化Git显示漂亮日志的小技巧"></a>美化Git显示漂亮日志的小技巧</h2><p>命令行如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph --pretty=format:<span class="string">'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset'</span> --abbrev-commit --</span><br><span class="line"></span><br><span class="line">这样有点长了，我们可以这样：</span><br><span class="line"></span><br><span class="line">$ git config --global alias.lg <span class="string">"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --"</span></span><br><span class="line"></span><br><span class="line">然后，我们就可以使用这样的短命令了：</span><br><span class="line">$ git lg</span><br></pre></td></tr></table></figure><h2 id="重新鞭策你的记录（找回丢失的commit）"><a href="#重新鞭策你的记录（找回丢失的commit）" class="headerlink" title="重新鞭策你的记录（找回丢失的commit）"></a>重新鞭策你的记录（找回丢失的commit）</h2><p><code>Git reflog</code> 可以查看所有分支的所有操作记录,包括已经被删除的commit记录，git log则不能察看已经删除了的commit记录<br>具体一个例子，假设有三个commit<br>commit3: add test3.c<br>commit2: add test2.c<br>commit1: add test1.c<br>如果执行git reset –hard HEAD<del>1则 删除了commit3，如果发现删除错误了，需要恢复commit3，或者rebase遇到冲突误操作的时候,就可以使用git reflog找到之前的操作记录<br> HEAD@{0}: HEAD</del>1: updating HEAD<br> 5201314 HEAD@{1}: commit: test3:q<br> 红色加粗的即是被删除了的 commit3，运行git log则没有这一行记录<br> 可以使用<code>git reset --hard 5201314</code>将红色记录删除，则恢复了cmmit3，运行git log后可以看到：<br> commit3: add test3.c<br> commit2: add test2.c<br> commit1: add test1.c<br> 这里也可以使用另外一种方法来实现：git cherry-pick 5201314</p><h1 id="其实学习园区"><a href="#其实学习园区" class="headerlink" title="其实学习园区"></a>其实学习园区</h1><p><span class="exturl" data-url="aHR0cDovL2dpdGJvb2subGl1aHVpOTk4LmNvbS9pbmRleC5odG1s" title="http://gitbook.liuhui998.com/index.html">Git Community Book 中文版<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cDovL3d3dy5vc2NoaW5hLm5ldC90cmFuc2xhdGUvdXNlZnVsLWxpbnV4LWNvbW1hbmRzLWZvci1uZXdiaWVz" title="http://www.oschina.net/translate/useful-linux-commands-for-newbies">对 Linux 新手非常有用的 20 个命令<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      最符合编程人员的操作是Only keyboard，一行代码就可以完成改变世界，再加上上百种快捷键组合，你就才是真正的进入了高手的世界，为了让你看起来像一个真正牛逼的程序猿，就丢掉鼠标，敲打命令行吧
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="命令" scheme="https://www.51201314.me/jacks/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="Git" scheme="https://www.51201314.me/jacks/tags/Git/"/>
    
      <category term="代码管理" scheme="https://www.51201314.me/jacks/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>前端基础优化记录手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/16/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/16/前端基础优化记录手册/</id>
    <published>2016-06-16T10:54:07.000Z</published>
    <updated>2016-08-18T08:06:00.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="a标签的SEO优化细节"><a href="#a标签的SEO优化细节" class="headerlink" title="a标签的SEO优化细节"></a>a标签的SEO优化细节</h1><p>如果需要在新窗口中打开链接，我们使用的方法是在a上加上taget=“_blank”，但很多人不知道这是不符合w3c的规范的，在使用严格的DOCTYPE(xhtml1-strict.dtd)校验时，会提示“there is no attribute target for this element(in this HTML version)”的错误信息。</p><p>　　所以很多老外写的东西基本上就不会出现taget=“_blank”。他们替换的方案是使用HTML4.0新增的标签rel来表示，rel是用来表明链接和包含此链接页面的关系，以及链接打开的目标。rel有许多的属性值，比如next、previous,、chapter、section等等，还有我们用来拒绝搜索引擎蜘蛛向下爬行的nofollow（这一点很重要，在wordpress中，几乎所有的评论中的用户名的链接都是加了rel=nofollow的，所以想通过在博客中添加评论来增加外链都是徒劳的）。而我们现在要使用的就是rel=”external”属性，用来表示链接将在新窗口中打开。当然，这只是符合strict标准的方法，而并没有真正实现在新窗口开打链接，还需要javasscript的支持。</p><p>　　思路，在页面载入以后，将rel含有external的a标签，通过js加上target=”_blank“。下面提供jquery方法，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    jQuery(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//external加上target="_blank"</span></span><br><span class="line">        $(<span class="string">"a[rel*=external]"</span>).attr(<span class="string">"target"</span>,<span class="string">"_blank"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>以上只是jquery的实现方式，也是本博使用的方法，js原生方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">externalLinks</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">document</span>.getElementsByTagName) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">var</span> anchors = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;ANCHORS.LENGTH; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> anchor = anchors;</span><br><span class="line">            <span class="keyword">if</span> (anchor.getAttribute(“href”) &amp;&amp;</span><br><span class="line">            anchor.getAttribute(“rel”) == “external”)</span><br><span class="line">            anchor.target = <span class="string">"_blank"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.onload = externalLinks;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h1><p>大约 80%-90% 的终端响应时间是花费在前端，其中包含下载页面中的图片，样式表，脚本，flash等。Yahoo 为此总结了 14 条规则，成为网站性能优化的事实标准。</p><h2 id="雅虎网站性能优化的-14-条规则："><a href="#雅虎网站性能优化的-14-条规则：" class="headerlink" title="雅虎网站性能优化的 14 条规则："></a>雅虎网站性能优化的 14 条规则：</h2><ol><li>尽可能减少 HTTP 请求数</li><li>使用 CDN（内容分发网络）</li><li>为文件头指定 Expires 或 Cache-Control，使内容具有缓存性</li><li>使用 Gzip 压缩内容</li><li>把 CSS 放到顶部</li><li>把 JavaScript 放在底部</li><li>避免在 CSS 中使用 Expressions</li><li>把 JavaScript 和 CSS 都放到外部文件中</li><li>减少 DNS 查找次数</li><li>压缩 JavaScript 和 CSS</li><li>避免重定向</li><li>剔除重复的 JavaScript 和 CSS</li><li>配置 Etags</li><li>使 AJAX 缓存</li></ol><h2 id="对规则的分析："><a href="#对规则的分析：" class="headerlink" title="对规则的分析："></a>对规则的分析：</h2><ul><li>代码编写方面的规则：<br>把 CSS 放到顶部<br>把 JavaScript 放在底部<br>把 JavaScript 和 CSS 都放到外部文件中<br>避免在 CSS 中使用 Expressions<br>使 AJAX 缓存</li><li>打包方面的规则：<br>尽可能减少 HTTP 请求数<br>压缩 JavaScript 和 CSS<br>剔除重复的 JavaScript 和 CSS</li><li>部署方面的规则：<br>使用 CDN（内容分发网络）<br>为文件头指定 Expires 或 Cache-Control，使内容具有缓存性<br>使用 Gzip 压缩内容<br>减少 DNS 查找次数<br>避免重定向<br>配置 Etags<br>对规则的实践</li></ul><p>部署方面的规则，应用 Nginx 为静态文件添加 Expires 跟 Cache-Control 头， 配置 Etags，并启用 Gzip 压缩。并且避免在 Nginx 中做重定向，有条件的话可以 启用 CDN，并优化网络配置以减少 DNS 查找次数。<br>代码编写方面的规则，需要在编写代码种形成规范。默认使用类似 jQuery 这样的库 便可以对 AJAX 进行缓存。<br>打包方面 Linner 可以合并 JavaScript 与 CSS 文件, 并且支持小图片的合并， 用以减少 HTTP 请求数。同时 Linner 的仓库管理可以避免重复的 JavaScript 与 CSS 文件的出现。在 build 过后所有的文件将会被压缩。</p><h1 id="优化网站加载速度的14个技巧"><a href="#优化网站加载速度的14个技巧" class="headerlink" title="优化网站加载速度的14个技巧"></a>优化网站加载速度的14个技巧</h1><p>1.服务器响应时间<br>　　即使网站已经格外优化，但是除非服务器响应时间非常快，否则就不会有什么大的效果。当涉及到提高网站的速度，服务器响应时间起着重要的作用。下面是一些提高服务器响应时间的小贴士。</p><p>有独立的服务器，而不是选择共享/托管服务器。<br>提高Web服务器的质量。<br>移除不必要的插件，只有那些必要的插件，才需要一直保持启用状态。<br>2.浏览器缓存<br>　　浏览器缓存可以减少HTTP请求，从而反过来提高网站的加载速度。<br>　　注意：如果过期时间与文件挂钩，而此时文件中的内容需要更改的话，那必须先重命名文件，以便浏览器可以获取新添加的代码。</p><p>3.gzip压缩<br>　　gzip压缩是一个压缩实用程序，我们可以用它来快速加载网站。它的工作原理是在发送HTML和CSS文件到互联网浏览器之前，先压缩文件大小。允许mod_defalte模块启用Gzip压缩</p><p>4.异步脚本<br>　　还有一个可以提高网站页面速度的超棒选择就是异步加载脚本。如此一来网页负载就并不必依赖于这些异步脚本，网站访问者也不再需要不得不按捺下性子，等待所有的脚本加载完之后才能呈现页面。在异步模式中，脚本是在后台下载的。通常，我们会将第三方脚本作为异步脚本，因为下载这些脚本时常会让网站速度变得非常慢。</p><p><code>&lt;script async src=&quot;http://www.yoursite.com/script.js&quot;&gt;&lt;/script&gt;</code><br>5.内容分发网络（CDN）<br>　　内容分发网络（CDN）是位于不同地理位置的服务器组成的网络。每个服务器都拥有所有网站的文件副本。要是有网站访问者请求文件和网页时，就可以直接从就近的网站服务器发送过来（也可以是从负载最小的服务器）。</p><p>6.优化JavaScript、HTML和CSS<br>　　优化JavaScript和CSS也可以提高一个网站的网页速度，而且这个方法非常简单。优化JavaScript、HTML和CSS就是删除所有不必要的空格和注释，从而减小文件大小。下面是一些最小化JavaScript和CSS的流行工具，非常有用。</p><p>CSS Minifier<br>Avivo<br>HTML Compressor</p><p>7.置于顶部的样式表和底部的脚本<br>　　将样式表放在顶部有助网站的迅速加载，因为这样可以使得网页渐进式呈现。一般地，所有的互联网浏览器都支持在给定时间内并行下载两个组件（图像、样式和脚本）。但是通常而言，霸道的脚本会在并行下载时会阻止其他的下载，直到脚本下载完毕。</p><p>8.避免阻塞型的JavaScript和CSS<br>　　在浏览器呈现网页之前，它首先需要通过解析HTML标记语言来构建一个DOM树。在此过程中，如果遇到了脚本，此过程就会中止，转而先执行脚本，完了才会继续原先的活动。因此建议避免阻塞型的JavaScript，尤其是外部脚本。</p><p>　　阻塞型JavaScript还会导致网站的延迟。所以不妨推迟加载那些不重要的JavaScript，或者采用异步加载的方式。另一种选择是将这些HTML代码内嵌到网站上，同时需要确保CSS的优化。</p><p>9.JavaScript的延迟解析<br>　　为了加载网页，浏览器必须解析所有的<code>&lt;script&gt;</code>标记内容，从而增加了网站的加载时间。通过延迟解析脚本，那么就可以减少初始网站的加载时间了。</p><p>10.启用Keep Alive<br>　　当用户通过浏览器请求网页时，浏览器首先需要访问HTML文件。然后它才能读取这些文件，并请求与其他资料相关联（此处的资料可以是CSS，JavaScript，也可以是任何相关的图像）。</p><p>　　如果“Keep Alive”选项被禁止，那么下载网站的进程通常就会增加，从而拖累了网站速度。启用KeepAlive的另一个好处是，它可以减少CPU的使用。</p><p>语法: KeepAlive On<br>11.图像和文件格式<br>　　图像对于任何网站都非常有价值，因为它能传达一些强有力的信息给网站的访问者。最常见的图像格式是GIF、JPEG、PNG等。每种格式都有其长处和局限。建议使用JPEG格式，而不是GIF和PNG图像，除非图像包含Alpha因子或者是透明的。</p><p>12.优化代码：不使用内联CSS<br>　　内联了样式就不能清清楚楚地将内容从设计中剥离开来。同时可能还会需要大量的维护工作，给网站管理员带来各种不便，还会进一步增加网页的大小。</p><p>13.文件分离<br>　　网站的文件可以分为CSS、JavaScripts和图像。文件分离虽然并不能直接改善网站的加载时间。但是，这么做可以提高服务器的稳定性，特别是当网站流量突然出现了尖峰的时候。子域也可以用于托管文件，这样可以增加并行下载的数量。</p><p>14.尽量减少HTTP请求<br>　　还有一种简单的优化网页速度的方法是，减少HTTP请求。当一个网站一下子收到太多的HTTP请求，它的访客就会有响应时间延迟的体验，这不仅增加了CPU使用率也增加了页面的加载时间。那么，又该如何减少HTTP请求？请见以下步骤。</p><p>减少网站上的对象数量。<br>最小化网站上的重定向数量。<br>使用CSS Sprites技术（只要你需要的那部分图片内容）。<br>结合JavaScripts和CSS。</p>]]></content>
    
    <summary type="html">
    
      &lt;span style=&#39;color:red;&#39;&gt;【持续更新】&lt;/span&gt;前端基础优化记录手册
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="https://www.51201314.me/jacks/tags/CSS/"/>
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
      <category term="总结篇" scheme="https://www.51201314.me/jacks/tags/%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    
      <category term="HTML" scheme="https://www.51201314.me/jacks/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript常用的基础知识点手册</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/16/JavaScript%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E6%89%8B%E5%86%8C/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/16/JavaScript常用的基础知识点手册/</id>
    <published>2016-06-16T02:30:02.000Z</published>
    <updated>2019-06-08T20:33:54.895Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="JavaScript-中-与-的区别"><a href="#JavaScript-中-与-的区别" class="headerlink" title="JavaScript 中==与===的区别"></a>JavaScript 中==与===的区别</h1><p>首先，== equality 等同，=== identity 恒等。<br>==， 两边值类型不同的时候，要先进行类型转换，再比较。<br>===，不做类型转换，类型不同的一定不等。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="string">'1'</span>==<span class="number">1</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="string">'1'</span>===<span class="number">1</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"></span><br><span class="line">&gt; <span class="number">0</span> == <span class="literal">false</span>  <span class="comment">// OK</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="number">1</span> == <span class="literal">true</span>  <span class="comment">// OK</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="number">2</span> == <span class="literal">true</span>  <span class="comment">// not OK</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"></span><br><span class="line">&gt; <span class="string">''</span> == <span class="literal">false</span>  <span class="comment">// OK</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="string">'1'</span> == <span class="literal">true</span>  <span class="comment">// OK</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="string">'2'</span> == <span class="literal">true</span>  <span class="comment">// not OK</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"></span><br><span class="line">&gt; <span class="string">''</span> == <span class="number">0</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="string">'\n  123  \t'</span> == <span class="number">123</span></span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><p>下面分别说明：<br>先说 ===，这个比较简单。下面的规则用来判断两个值是否===相等： </p><ol><li>如果类型不同，就[不相等] </li><li>如果两个都是数值，并且是同一个值，那么[相等]；(！例外)但是，如果其中至少一个是NaN，那么[不相等]。（判断一个值是否是NaN，只能用isNaN()来判断） </li><li>如果两个都是字符串，每个位置的字符都一样，那么[相等]；否则[不相等]。 </li><li>如果两个值都是true，或者都是false，那么[相等]。 </li><li>如果两个值都引用同一个对象或函数，那么[相等]；否则[不相等]。 </li><li>如果两个值都是null，或者都是undefined，那么[相等]。 </li></ol><p>再说 ==，根据以下规则： </p><ol><li>如果两个值类型相同，进行 === 比较。 </li><li>如果两个值类型不同，他们可能相等。根据下面规则进行类型转换再比较：<br>a. 如果一个是null、一个是undefined，那么[相等]。<br>b. 如果一个是字符串，一个是数值，把字符串转换成数值再进行比较。<br>c. 如果任一值是 true，把它转换成 1 再比较；如果任一值是 false，把它转换成 0 再比较。<br>d. 如果一个是对象，另一个是数值或字符串，把对象转换成基础类型的值再比较。对象转换成基础类型，利用它的toString或者valueOf方法。js核心内置类，会尝试valueOf先于toString；例外的是Date，Date利用的是toString转换。非js核心的对象，令说（比较麻烦，我也不大懂）<br>e、任何其他组合，都[不相等]。</li></ol><p>举例：<br>“1” == true<br>  类型不等，true会先转换成数值 1，现在变成 “1” == 1，再把”1”转换成 1，比较 1 == 1， 相等。</p><p>= 赋值运算符<br>== 等于<br>=== 严格等于<br>例：<br>var a = 3;<br>var b = “3”;<br>a==b 返回 true<br>a===b 返回 false<br>因为a,b的类型不一样<br>===用来进行严格的比较判断</p><table><thead><tr><th align="center">参数类型1</th><th align="center">参数类型2</th><th align="center">强制转换</th></tr></thead><tbody><tr><td align="center">null</td><td align="center">undefined</td><td align="center">不转换，总是返回true</td></tr><tr><td align="center">null或者undefined</td><td align="center">其他任何非null或undefined的类型</td><td align="center">不转换，总是返回false</td></tr><tr><td align="center">原始类型:string,number,boolean</td><td align="center">Date对象</td><td align="center">将原始类型转换为数字；将Date对象转换为原始类型(优先尝试toString方法，再尝试valueOf方法)</td></tr><tr><td align="center">原始类型:string,number,boolean</td><td align="center">非Date对象</td><td align="center">将原始类型转换为数字；将Date对象转换为原始类型(优先尝试toString方法，再尝试valueOf方法)</td></tr><tr><td align="center">原始类型:string,number,boolean</td><td align="center">原始类型:string,number,boolean</td><td align="center">将原始类型转换为数字</td></tr><tr><td align="center">最后的建议就是避免对混合类型使用 == 运算符</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">当参数类型不同时，== 运算符应用了一套难以理解的隐式强制转换规则。</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">使用 === 运算符，使读者不需要涉及任何的隐式强制转换就能明白你的比较运算。</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">当比较不同类型的值时，使用你自己的显示强制转换使程序的行为更清晰。</td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="阻止冒泡事件和默认事件"><a href="#阻止冒泡事件和默认事件" class="headerlink" title="阻止冒泡事件和默认事件"></a>阻止冒泡事件和默认事件</h1><p>　　当一个容器上面绑定了点击事件，容器中的容器或者元素绑定了点击事件，点击最里面的元素时，它会不断向上冒泡响应事件，那么外面的容器的事件也会响应.<br>　　比如body上绑定了点击事件1，里面div绑定了事件2，点击div会依次响应事件2，再事件1，怎么阻止这个传递过程呢，看下面代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能:停止事件冒泡 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopBubble</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 如果提供了事件对象，则这是一个非IE浏览器</span></span><br><span class="line">    <span class="keyword">if</span> ( e &amp;&amp; e.stopPropagation ) &#123;</span><br><span class="line">        <span class="comment">// 因此它支持W3C的stopPropagation()方法 </span></span><br><span class="line">        e.stopPropagation();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// 否则，我们需要使用IE的方式来取消事件冒泡</span></span><br><span class="line">        <span class="built_in">window</span>.event.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 功能：阻止事件默认行为</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopDefault</span>(<span class="params"> e </span>) </span>&#123;</span><br><span class="line">     <span class="comment">// 阻止默认浏览器动作(W3C)</span></span><br><span class="line">     <span class="keyword">if</span> ( e &amp;&amp; e.preventDefault ) &#123;</span><br><span class="line">         e.preventDefault();</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// IE中阻止函数器默认动作的方式</span></span><br><span class="line">        <span class="built_in">window</span>.event.returnValue = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>// 事件注意点<br>event代表事件的状态，例如触发event对象的元素、鼠标的位置及状态、按下的键等等；<br>event对象只在事件发生的过程中才有效。<br>firefox里的event跟IE里的不同，IE里的是全局变量，随时可用；firefox里的要用参数引导才能用，是运行时的临时变量。<br>在IE/Opera中是window.event，在Firefox中是event；而事件的对象，在IE中是window.event.srcElement，在Firefox中是event.target，Opera中两者都可用。</p></blockquote><h1 id="页面DOM结构加载完毕后再执行js"><a href="#页面DOM结构加载完毕后再执行js" class="headerlink" title="页面DOM结构加载完毕后再执行js"></a>页面DOM结构加载完毕后再执行js</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//等待页面内DOM、图片资源加载完毕后触发执行 //TO DO&#125;</span></span><br><span class="line">jquery写法</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">&#125;);</span><br><span class="line">或者</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"><span class="keyword">var</span> userName=<span class="string">"xiaoming"</span>; </span><br><span class="line">alert(userName); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><h2 id="Chrome-控制台console的用法"><a href="#Chrome-控制台console的用法" class="headerlink" title="Chrome 控制台console的用法"></a>Chrome 控制台console的用法</h2><p>更多参考 ：<span class="exturl" data-url="aHR0cDovL3d3dy5vcGVuLW9wZW4uY29tL2xpYi92aWV3L29wZW4xNDIxMTMxNjAxMzkwLmh0bWw=" title="http://www.open-open.com/lib/view/open1421131601390.html">http://www.open-open.com/lib/view/open1421131601390.html<i class="fa fa-external-link"></i></span></p><h2 id="true和false字符串转bool类型"><a href="#true和false字符串转bool类型" class="headerlink" title="true和false字符串转bool类型"></a>true和false字符串转bool类型</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="string">'true'</span>)</span><br></pre></td></tr></table></figure><p>说明<br>eval()该方法只接受原始字符串作为参数，如果 string 参数不是原始字符串，那么该方法将不作任何改变地返回。因此请不要为 eval() 函数传递 String 对象来作为参数。<br>如果试图覆盖 eval 属性或把 eval() 方法赋予另一个属性，并通过该属性调用它，则 ECMAScript 实现允许抛出一个 EvalError 异常。<br>抛出<br>如果参数中没有合法的表达式和语句，则抛出 SyntaxError 异常。<br>如果非法调用 eval()，则抛出 EvalError 异常。<br>如果传递给 eval() 的 Javascript 代码生成了一个异常，eval() 将把该异常传递给调用者。</p><p>可以使用下面这段代码来检测 eval() 的参数是否合法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    alert(<span class="string">"Result:"</span> + <span class="built_in">eval</span>(prompt(<span class="string">"Enter an expression:"</span>,<span class="string">""</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(exception) &#123;</span><br><span class="line">    alert(exception);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="一行jQuery代码搞定checkbox-全选和全不选"><a href="#一行jQuery代码搞定checkbox-全选和全不选" class="headerlink" title="一行jQuery代码搞定checkbox 全选和全不选"></a>一行jQuery代码搞定checkbox 全选和全不选</h2><p>JavaScript部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box input[type='checkbox']"</span>).prop(<span class="string">'checked'</span>, $(obj).prop(<span class="string">'checked'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">onclick</span>=<span class="string">"checkAll(this)"</span>&gt;</span>全选<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;span style=&#39;color:red;&#39;&gt;【持续更新】&lt;/span&gt;对js基础知识点的总结
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
      <category term="总结篇" scheme="https://www.51201314.me/jacks/tags/%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>如何让你的产品更容易被买掉</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/07/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%BA%A7%E5%93%81%E6%9B%B4%E5%AE%B9%E6%98%93%E8%A2%AB%E4%B9%B0%E6%8E%89/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/07/如何让你的产品更容易被买掉/</id>
    <published>2016-06-07T10:04:36.000Z</published>
    <updated>2019-06-08T20:33:54.993Z</updated>
    
    <content type="html"><![CDATA[<p>　　只要你是一个售卖者，你就会遇到怎么让我推销的产品更容易被消费者买掉问题。<br>　　作为一个消费者，他们内心都有一个消费的心理水平线，只要我们想办法降低他们的消费心理水平线，他们就更容易跨过那个线，来消费。推销术的作用就是这样。</p><a id="more"></a><h1 id="洞察消费者类型"><a href="#洞察消费者类型" class="headerlink" title="洞察消费者类型"></a>洞察消费者类型</h1><p>　　这是第一步，什么叫洞察消费者类型？<br>　　其实就是判断你面对的消费者是不是你所卖的产品的消费群体。为什么要这么做呢？因为你永远不能把飞机卖给鸟人，飞机卖给婴儿……不是说他们不会购买，而是购买的可能性和概率实在是太低了，你的优先选择概率大的人群。</p><h1 id="找出消费者心中的坎"><a href="#找出消费者心中的坎" class="headerlink" title="找出消费者心中的坎"></a>找出消费者心中的坎</h1><p>　　消费者天生就会消费，不消费是因为暂时心中的顾虑和心中的坎，也许是价钱的高低，也许是需求的强弱，也许是空间时间上的差距……我们得快速识别出来,到底是什么因素导致了他们不愿意消费，让他们消费变得如此困难。<br>　　下面尝试分析几点可能的原因点<br>　　1. 实际价格偏高于心中价格<br>　　2. 暂时用不上<br>　　3. 另一家有优惠<br>　　4. 不会使用<br>　　5. 不喜欢<br>　　6. 另一家更便宜<br>　　7. 另一家质量口碑更好<br>　　8. 还有其他选择<br>　　9. 。。。。。。<br>这样个原因点很多很多，也会因人而异，不同的人总会有不同的原因和不同的心理活动，我们要做的就是去消除他内心的疑虑，这样就更容易使其过坎。</p><h1 id="给产品提供Buff增益加成"><a href="#给产品提供Buff增益加成" class="headerlink" title="给产品提供Buff增益加成"></a>给产品提供Buff增益加成</h1><p>　　大多时候卖家，面对成千上万的消费者，根本不可能对每一个消费者进行心理分析，做出针对性的销售（除非你的消费群体是很特定的少数），这时候大部分的做法就是给产品做“包装”，做周边“加成”。<br>　　下面也尝试分析几点<br>　　1. 打折<br>　　2. 优惠券<br>　　3. 买几送几<br>　　4. 分期付款<br>　　5. 积分<br>　　6. 免邮<br>　　7. 赠送小礼品<br>　　8. 。。。。。。<br>这样的类似的元素在大型商场，会经常惯用。</p><h1 id="必杀技之忽悠"><a href="#必杀技之忽悠" class="headerlink" title="必杀技之忽悠"></a>必杀技之忽悠</h1><p>　　这里的忽悠并不是骗人消费的意思，而是侧推旁引之意。何为侧推旁引？<br>　　比买车，你完全不必再介绍车怎么怎么好，消费者来看车，必定是实现了解过车，有意才来，这时候他犹豫也许是价钱也许是其他什么，你这时候就假定他已经买了，就他买后是多么的适用，多么的超值来推销，多么的便捷等等优点去说服，就会更加容易。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　只要你是一个售卖者，你就会遇到怎么让我推销的产品更容易被消费者买掉问题。&lt;br&gt;　　作为一个消费者，他们内心都有一个消费的心理水平线，只要我们想办法降低他们的消费心理水平线，他们就更容易跨过那个线，来消费。推销术的作用就是这样。&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="产品" scheme="https://www.51201314.me/jacks/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="交易" scheme="https://www.51201314.me/jacks/tags/%E4%BA%A4%E6%98%93/"/>
    
      <category term="销售" scheme="https://www.51201314.me/jacks/tags/%E9%94%80%E5%94%AE/"/>
    
      <category term="推销" scheme="https://www.51201314.me/jacks/tags/%E6%8E%A8%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>当我用了站坐两用升降工作台</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/02/%E5%BD%93%E6%88%91%E7%94%A8%E4%BA%86%E7%AB%99%E5%9D%90%E4%B8%A4%E7%94%A8%E5%8D%87%E9%99%8D%E5%B7%A5%E4%BD%9C%E5%8F%B0/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/02/当我用了站坐两用升降工作台/</id>
    <published>2016-06-02T06:19:23.000Z</published>
    <updated>2019-06-08T20:33:54.914Z</updated>
    
    <content type="html"><![CDATA[<p>　　期待已久，终于入手。上班一族中有一群电脑族，电脑族中有一群程序猿族。他们日夜为公司的发展鞠躬尽瘁，长时间对着显示器无休止的操劳。黑眼圈，近视眼……这些都是他们的特征，然而最要命的还属于久坐后的颈椎病。在一段时间内，深受困扰，在加强健身锻炼后，博主已经毫发无损，所以说生命在于运动还是有道理的，现在为了预防颈椎毛病，就入手了“神器”久坐终结者。用了几天，轻松自在多了。</p><a id="more"></a><p>　　俗话说“物极必反”，久坐，久卧，久站，都会对身体健康产生影响。一段时间内交替的进行，会有一个缓解的作用。博主大约以一个番茄时间（番茄工作法）作为一次站坐交替。</p><blockquote><p>番茄工作法是简单易行的时间管理方法，是由弗朗西斯科·西里洛于1992年创立的一种相对于GTD更微观的时间管理方法。<br>使用番茄工作法，选择一个待完成的任务，将番茄时间设为25分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，然后在纸上画一个X短暂休息一下（5分钟就行），每4个番茄时段多休息一会儿。<br>番茄工作法极大地提高了工作的效率，还会有意想不到的成就感。</p></blockquote><p>感兴趣的小伙伴，可以尝试一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　期待已久，终于入手。上班一族中有一群电脑族，电脑族中有一群程序猿族。他们日夜为公司的发展鞠躬尽瘁，长时间对着显示器无休止的操劳。黑眼圈，近视眼……这些都是他们的特征，然而最要命的还属于久坐后的颈椎病。在一段时间内，深受困扰，在加强健身锻炼后，博主已经毫发无损，所以说生命在于运动还是有道理的，现在为了预防颈椎毛病，就入手了“神器”久坐终结者。用了几天，轻松自在多了。&lt;/p&gt;
    
    </summary>
    
      <category term="优雅地去生活" scheme="https://www.51201314.me/jacks/categories/%E4%BC%98%E9%9B%85%E5%9C%B0%E5%8E%BB%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="站立式办公" scheme="https://www.51201314.me/jacks/tags/%E7%AB%99%E7%AB%8B%E5%BC%8F%E5%8A%9E%E5%85%AC/"/>
    
      <category term="劲椎病" scheme="https://www.51201314.me/jacks/tags/%E5%8A%B2%E6%A4%8E%E7%97%85/"/>
    
      <category term="程序员" scheme="https://www.51201314.me/jacks/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>CSS之清除浮动总结</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/06/02/CSS%E4%B9%8B%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E6%80%BB%E7%BB%93/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/06/02/CSS之清除浮动总结/</id>
    <published>2016-06-02T04:19:21.000Z</published>
    <updated>2019-06-08T20:33:54.975Z</updated>
    
    <content type="html"><![CDATA[<p>　　当我们在前端做排版的时候，经常会用到CSS中float这个浮动效果，但在使用的时候值得注意的一点是浮动会有那些影响？为什么要清除浮动？</p><a id="more"></a><h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1><p>首先让我们了解两个属性：</p><blockquote><p>float：让元素浮动，取值：left（左浮动），right（右浮动）<br>clear：清除浮动，取值：left（清除左浮动），right（清除右浮动），both（同时清除）</p></blockquote><h1 id="CSS浮动的特性"><a href="#CSS浮动的特性" class="headerlink" title="CSS浮动的特性"></a>CSS浮动的特性</h1><ol><li><p>浮动的元素，讲向左或者向右浮动，浮动到包围元素的边上，或者上一个浮动元素的边上为止。</p></li><li><p>浮动的元素，不再占用空间，且浮动元素的层级要高于普通元素。</p></li><li><p>浮动的元素，一定是块元素，不管之前是什么元素</p></li><li><p>如果浮动的元素没有指定宽度的话，浮动后会尽可能变窄，因此浮动元素要指定宽和高</p></li></ol><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>分析HTML代码结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>分析CSS代码样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">background</span>: <span class="number">#fc9</span>;<span class="attribute">color</span>: <span class="number">#fff</span>; <span class="attribute">margin</span>: <span class="number">50px</span> auto;<span class="attribute">padding</span>: <span class="number">50px</span>;&#125;</span><br><span class="line"><span class="selector-class">.div1</span>&#123;<span class="attribute">width</span>: <span class="number">80px</span>;<span class="attribute">height</span>: <span class="number">80px</span>;<span class="attribute">background</span>: red;<span class="attribute">float</span>: left;&#125;</span><br><span class="line"><span class="selector-class">.div2</span>&#123;<span class="attribute">width</span>: <span class="number">80px</span>;<span class="attribute">height</span>: <span class="number">80px</span>;<span class="attribute">background</span>: blue;<span class="attribute">float</span>: left;&#125;</span><br><span class="line"><span class="selector-class">.div3</span>&#123;<span class="attribute">width</span>: <span class="number">80px</span>;<span class="attribute">height</span>: <span class="number">80px</span>;<span class="attribute">background</span>: sienna;<span class="attribute">float</span>: left;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://www.51201314.me/OSS/blog/img/float-1.png" alt></p><blockquote><p>　　外层没有设置高度，但是我们知道如果它里面的元素不浮动的话，那么这个外层的高是会自动被撑开的。但是当内层元素浮动后，就出现了一下影响：</p></blockquote><p>（1）：背景不能显示<br>（2）：边框不能撑开<br>（3）：margin 设置值不能正确显示</p><h1 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h1><h2 id="父级div定义-height"><a href="#父级div定义-height" class="headerlink" title="父级div定义 height"></a>父级div定义 height</h2><p>原理：父级div手动定义height，就解决了父级div无法自动获取到高度的问题。 </p><p>优点：简单、代码少、容易掌握 </p><p>缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题 </p><p>建议：不推荐使用，只建议高度固定的布局时使用 </p><h2 id="结尾处加空div标签-clear-both"><a href="#结尾处加空div标签-clear-both" class="headerlink" title="结尾处加空div标签 clear:both"></a>结尾处加空div标签 clear:both</h2><p>分析HTML代码结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>分析CSS代码样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clear</span>&#123;<span class="attribute">clear</span>:both; <span class="attribute">height</span>: <span class="number">0</span>; <span class="attribute">line-height</span>: <span class="number">0</span>; <span class="attribute">font-size</span>: <span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://www.51201314.me/OSS/blog/img/float-2.png" alt></p><p>原理：添加一个空div，利用css提高的clear:both清除浮动，让父级div能自动获取到高度</p><p>优点：简单、代码少、浏览器支持好、不容易出现怪问题 </p><p>缺点：不少初学者不理解原理；如果页面浮动布局多，就要增加很多空div，让人感觉很不好 </p><p>建议：不推荐使用，但此方法是以前主要使用的一种清除浮动方法</p><h2 id="父级div定义-伪类-after-和-zoom-（推荐）"><a href="#父级div定义-伪类-after-和-zoom-（推荐）" class="headerlink" title="父级div定义 伪类:after 和 zoom （推荐）"></a>父级div定义 伪类:after 和 zoom （推荐）</h2><p>原理：IE8以上和非IE浏览器才支持:after，原理和方法2有点类似，zoom(IE转有属性)可解决ie6,ie7浮动问题 </p><p>优点：浏览器支持好、不容易出现怪问题（目前：大型网站都有使用，如：腾迅，网易，新浪等等） </p><p>缺点：代码多、不少初学者不理解原理，要两句代码结合使用才能让主流浏览器都支持。 </p><p>建议：推荐使用，建议定义公共类，以减少CSS代码。</p><h2 id="父级div定义-overflow-hidden"><a href="#父级div定义-overflow-hidden" class="headerlink" title="父级div定义 overflow:hidden"></a>父级div定义 overflow:hidden</h2><p>原理：必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度 </p><p>优点：简单、代码少、浏览器支持好 </p><p>缺点：不能和position配合使用，因为超出的尺寸的会被隐藏。 </p><p>建议：只推荐没有使用position或对overflow:hidden理解比较深的朋友使用。 </p><h2 id="父级div定义-overflow-auto"><a href="#父级div定义-overflow-auto" class="headerlink" title="父级div定义 overflow:auto"></a>父级div定义 overflow:auto</h2><p>原理：必须定义width或zoom:1，同时不能定义height，使用overflow:auto时，浏览器会自动检查浮动区域的高度 </p><p>优点：简单、代码少、浏览器支持好 </p><p>缺点：内部宽高超过父级div时，会出现滚动条。 </p><p>建议：不推荐使用，如果你需要出现滚动条或者确保你的代码不会出现滚动条就使用吧。 </p><h2 id="父级div-也一起浮动"><a href="#父级div-也一起浮动" class="headerlink" title="父级div 也一起浮动"></a>父级div 也一起浮动</h2><p>原理：所有代码一起浮动，就变成了一个整体 </p><p>优点：没有优点 </p><p>缺点：会产生新的浮动问题。 </p><p>建议：不推荐使用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　当我们在前端做排版的时候，经常会用到CSS中float这个浮动效果，但在使用的时候值得注意的一点是浮动会有那些影响？为什么要清除浮动？&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="https://www.51201314.me/jacks/tags/CSS/"/>
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="清除浮动" scheme="https://www.51201314.me/jacks/tags/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo和其主题分布式开发的策略</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/05/25/hexo%E5%92%8C%E5%85%B6%E4%B8%BB%E9%A2%98%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%80%E5%8F%91%E7%9A%84%E7%AD%96%E7%95%A5/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/05/25/hexo和其主题分布式开发的策略/</id>
    <published>2016-05-25T02:43:44.000Z</published>
    <updated>2016-05-25T03:04:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　如果按照3月24号上线的话，写博客已经有2个月的时间了，一开始Hexo在自家电脑上跑，现在在公司，有时候也想更新同步一下博客，放到公司电脑上来跑，但是我又不太想把自己的markdown原文公布出来怎么办？我就做了一下策略…</p><a id="more"></a><h1 id="git-OSC"><a href="#git-OSC" class="headerlink" title="git@OSC"></a>git@OSC</h1><p>　　因为中国开源社区提供了类似github的功能，同样强大，并且可以免费创建私有项目，所以我就考虑把Hexo的部分放在这里</p><h1 id="github"><a href="#github" class="headerlink" title="github"></a>github</h1><p>　　原本Next主题是从github上面拉取下来的，我为了衍生自己的一些功能，就fork了这个主题项目，再次感谢iissnan和为其主题做出贡献的朋友们   <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0" title="https://github.com/iissnan/hexo-theme-next">主题地址<i class="fa fa-external-link"></i></span></p><h1 id="working"><a href="#working" class="headerlink" title="working"></a>working</h1><pre><code>布置好后，只要在新的环境下面，分别先拉取Hexo原稿，再拉取主题即可，分开管理这两块。首先在hexo环境下运行以下代码<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-cli -g</span><br><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure></code></pre><p>第一个是搭建全局环境，第二个是项目环境，npm install会根据package.json文件中的dependencies来下载项目依赖的包</p><p>好了，现在也可以在其他环境下分布式的写博客了，这种轻量级的静态页面项目，博主喜欢推荐用sublime text来做开发，配合想要的插件，真是又快又小又便捷，还个性。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　如果按照3月24号上线的话，写博客已经有2个月的时间了，一开始Hexo在自家电脑上跑，现在在公司，有时候也想更新同步一下博客，放到公司电脑上来跑，但是我又不太想把自己的markdown原文公布出来怎么办？我就做了一下策略…&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="Hexo" scheme="https://www.51201314.me/jacks/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>记忆方法</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/05/05/%E8%AE%B0%E5%BF%86%E6%96%B9%E6%B3%95/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/05/05/记忆方法/</id>
    <published>2016-05-04T19:53:45.000Z</published>
    <updated>2019-06-09T15:32:48.497Z</updated>
    
    <content type="html"><![CDATA[<p>记忆是学习生活中最基础和根本的能力，要想有好成绩就一定要提高记忆力，形成自己的知识库。记忆宫殿法的使用可上溯至古罗马时期，因此可以说这是经过时间和实践证明的高效记忆方法，在帮助记忆上有重大的作用。其中，记忆宫殿的6大方法分别是：1、谐音法；2、替代法；3、编码法；4、串联法；5、定桩法；6、关键字法。</p><a id="more"></a><p>记忆力差怎么可能学得好？</p><p>一、谐音法</p><p>谐音，就是通过声音相似相近的办法，把抽象枯燥的词汇转化成图像，以便于记忆。比如我就拿谐音这个词来说，通过改变声调就可以读成“鞋印”，从而形成一个图像再进行记忆。这样做是不是就好记多了。谐音法的另一个技巧则是变韵，最常见的就是“同学”变成“童鞋”，作为一个常见的网络用语，我想绝大多数人是了解的。这样记忆起来是不是既简单又有效，还不容易忘记呢？</p><p>二、代替法</p><p>非声音的转化，一般是在无法用到谐音法时再使用的一种方法。例如“代替”二字，可以把“代替”拆成“亻弋”、“夫夫曰”。于是就可以联想成一个人拿着系有绳子的箭（弋的解释），逼两个夫人，替他站在日头上。再比如“巾”字，就好比一个人围着围巾一样。</p><p>三、编码法</p><p>把一些符号、数字、词固定对应一个图像的处理方式就叫做编码，简单来讲就是把抽象的信息转换成图像。而且在运用的过程中，可以将一些常用的词汇固定下来，比如“生产力”=“铁铲”，“经济”=“金鸡”等等。有些编码，甚至可以是多个图像的。比如数字1，可以是大树，也可以是火柴；字母A可以是人字梯，也可以是尖帽子。对于编码法，你可以尽情发挥自己的想象力，只要自己能够记住就可以。</p><p>四、串联法</p><p>串联法就是将要记忆的东西根据各自的特征和相互联系穿起来记忆。</p><p>例如要记忆金属活动顺序表：钾、钙、钠、镁、铝、锌、铁、锡、铅、氢、铜、汞、银、铂、金</p><p>我常教孩子们这样记：嫁给那美女，身体细纤轻，统共一百斤，有趣又简单。</p><p>需要注意的是，串联法切记不能使用“变成，像，做成”这几个词汇。</p><p>五、定桩法</p><p>定桩法包含了空间地点桩，人体桩，物品桩等等，其中空间地点桩古人叫记忆宫殿。那么应该如何建立记忆宫殿呢？</p><p>1、在家里、去学校的路上、校园、公园、超市等地方，按照顺序建立你自己的记忆宫殿。</p><p>2、每10个地点为一个空间，你想建立多少个空间，就任由发挥。</p><p>3、建立自己的记忆宫殿时，一定要记录下来，条件许可的情况下，用手机拍下来，方便管理。</p><p>六、关键字法</p><p>关键字法不仅是提取句子的关键词组，最重要的是对文章结构的分析作用。说到关键字法，相信很多人会误会，误认为就是一句话的关键词语，只要提取关键字就可以了。其实并不是这样，最简单的表述就是把作者表达的重点词汇抓出来，去掉枝叶，以便记忆。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记忆是学习生活中最基础和根本的能力，要想有好成绩就一定要提高记忆力，形成自己的知识库。记忆宫殿法的使用可上溯至古罗马时期，因此可以说这是经过时间和实践证明的高效记忆方法，在帮助记忆上有重大的作用。其中，记忆宫殿的6大方法分别是：1、谐音法；2、替代法；3、编码法；4、串联法；5、定桩法；6、关键字法。&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="记忆力" scheme="https://www.51201314.me/jacks/tags/%E8%AE%B0%E5%BF%86%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>CSS之块级元素和内联元素总结</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/05/05/CSS%E4%B9%8B%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E5%86%85%E8%81%94%E5%85%83%E7%B4%A0%E6%80%BB%E7%BB%93/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/05/05/CSS之块级元素和内联元素总结/</id>
    <published>2016-05-04T18:18:01.000Z</published>
    <updated>2019-06-08T20:33:54.936Z</updated>
    
    <content type="html"><![CDATA[<p>在HTML页面中，被大量的标签结构，这些标签元素，主要分两种：块级元素（block element）和内联元素（inline element）。它们都有不同的特点和作用，这里做一个总结和分类。当然它们有诸多的同义中文翻译，这里不深究，博主更喜欢直译的叫法。</p><a id="more"></a><p>在默认的标准文档流里面</p><h1 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h1><p>特点：</p><ol><li>自动换行，并占据一整行；</li><li>高度，宽度以及外边距和内边距都可控制；</li><li>默认宽度与浏览器宽度一样，高度默认为0，与内容无关；</li><li>它可以容纳内联元素和其他块元素。</li></ol><h1 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h1><p>特点：</p><ol><li>默认从左到右，按顺序一行并排；</li><li>高度，宽度及外边距和内边距仅部分元素可改变；</li><li>默认高宽只与内容有关；</li><li>行内元素只能容纳文本或者其它内联元素。</li></ol><p>为了打破这种默认的布局，更加灵活的展示，我们会引用CSS来改变默认布局。</p><blockquote><p>比如：<br>他们可以通过修改<code>display</code>属性来相互转换，<code>display：inline-block</code>变成内联(块)元素布局，<code>display：block</code>变成块元素布局。</p></blockquote><h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><h2 id="块元素-block-element"><a href="#块元素-block-element" class="headerlink" title="块元素(block element)"></a>块元素(block element)</h2><ul><li>address - 地址</li><li>blockquote - 块引用</li><li>center - 举中对齐块</li><li>dir - 目录列表</li><li>div - 常用块级容易，也是css layout的主要标签</li><li>dl - 定义列表</li><li>fieldset - form控制组</li><li>form - 交互表单</li><li>h1 - 大标题</li><li>h2 - 副标题</li><li>h3 - 3级标题</li><li>h4 - 4级标题</li><li>h5 - 5级标题</li><li>h6 - 6级标题</li><li>hr - 水平分隔线</li><li>isindex - input prompt</li><li>menu - 菜单列表</li><li>noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容</li><li>noscript - 可选脚本内容（对于不支持script的浏览器显示此内容）</li><li>ol - 排序表单</li><li>p - 段落</li><li>pre - 格式化文本</li><li>table - 表格</li><li>ul - 非排序列表</li></ul><h2 id="内联元素-inline-element"><a href="#内联元素-inline-element" class="headerlink" title="内联元素(inline element)"></a>内联元素(inline element)</h2><ul><li>a - 锚点</li><li>abbr - 缩写</li><li>acronym - 首字</li><li>b - 粗体(不推荐)</li><li>bdo - bidi override</li><li>big - 大字体</li><li>br - 换行</li><li>cite - 引用</li><li>code - 计算机代码(在引用源码的时候需要)</li><li>dfn - 定义字段</li><li>em - 强调</li><li>font - 字体设定(不推荐)</li><li>i - 斜体</li><li>img - 图片</li><li>input - 输入框</li><li>kbd - 定义键盘文本</li><li>label - 表格标签</li><li>q - 短引用</li><li>s - 中划线(不推荐)</li><li>samp - 定义范例计算机代码</li><li>select - 项目选择</li><li>small - 小字体文本</li><li>span - 常用内联容器，定义文本内区块</li><li>strike - 中划线</li><li>strong - 粗体强调</li><li>sub - 下标</li><li>sup - 上标</li><li>textarea - 多行文本输入框</li><li>tt - 电传文本</li><li>u - 下划线</li><li>var - 定义变量</li></ul><h2 id="可变元素"><a href="#可变元素" class="headerlink" title="可变元素"></a>可变元素</h2><p>可变元素为根据上下文语境决定该元素为块元素或者内联元素。</p><ul><li>applet - java applet</li><li>button - 按钮</li><li>del - 删除文本</li><li>iframe - inline frame</li><li>ins - 插入的文本</li><li>map - 图片区块(map)</li><li>object - object对象</li><li>script - 客户端脚本</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在HTML页面中，被大量的标签结构，这些标签元素，主要分两种：块级元素（block element）和内联元素（inline element）。它们都有不同的特点和作用，这里做一个总结和分类。当然它们有诸多的同义中文翻译，这里不深究，博主更喜欢直译的叫法。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="https://www.51201314.me/jacks/tags/CSS/"/>
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSS之水平和垂直居中的方法总结</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/05/03/CSS%E4%B9%8B%E6%B0%B4%E5%B9%B3%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/05/03/CSS之水平和垂直居中的方法总结/</id>
    <published>2016-05-03T09:41:06.000Z</published>
    <updated>2016-08-03T06:45:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>做为一个前端，一个专业的前端，基础是决定你打造自己帝国大厦的根基。本篇系统总结一下CSS水平和垂直居中的方法。在页面样式开发过程中会经常遇到。</p><a id="more"></a><p>你可以首先了解一下<code>块级元素</code>（block element）和<code>内联元素</code>（inline element）。<a href="../../05/CSS之块级元素和内联元素总结/">传送门</a></p><h1 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h1><p>常用的方法大约有以下4种</p><h2 id="使用-text-aligh-center"><a href="#使用-text-aligh-center" class="headerlink" title="使用 text-aligh:center"></a>使用 text-aligh:center</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> &gt;</span></span><br><span class="line">gg</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    fsdf</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>不管是<code>块级元素</code>（block element）还是<code>内联元素</code>（inline element），只要父标签有<code>text-align: center</code>样式，会自动居中。</p></blockquote><h2 id="使用-margin-0-auto-与-width-0px"><a href="#使用-margin-0-auto-与-width-0px" class="headerlink" title="使用 margin: 0 auto 与 width: 0px"></a>使用 margin: 0 auto 与 width: 0px</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin: 0 auto;width: 1px"</span>&gt;</span></span><br><span class="line">    JX</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"margin: 0 auto;width: 70px;display: block"</span>&gt;</span></span><br><span class="line">    JX</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>我分别在<code>块级元素</code>和<code>内联元素</code>上都加了这样的样式，只要在内联元素上加上display:block,就和块级元素是等同的效果。我这里设置了<code>不同的宽度</code>，看有什么影响。第一个div宽度只有1px，那么在div里面不同的元素内容超过这个，就会自动换行，可以实现<code>同块级居中内联元素换行</code>；第二种只要span宽度足够宽，里面的<code>内联元素</code>内容不超过这个宽度，就按顺序排列不会换行，可以实现<code>同块级居中内联元素不换行</code>，是不是挺好玩的。</p></blockquote><p><strong>上面两种方法看似效果一样，其实差别是很大的，第一种 <code>text-aligh:center</code>是div占据一行的空间是不会改变的，而是<code>内容居中</code>了，可能有点类似于padding：50%；第二种是div宽度变成了1px，两外边<code>边缘距离</code>（margin）自适应了，<code>标签居中</code>了，内容按顺序排列。所以你是想标签居中，还是标签的内容居中，是可以做出不同选择的。</strong></p><h2 id="使用相对定位与边距调整"><a href="#使用相对定位与边距调整" class="headerlink" title="使用相对定位与边距调整"></a>使用相对定位与边距调整</h2><p>这种方法，一般需要程序员事先做好相对位置计算，进行细微调整即可。当然你也可以使用<code>position:absolute;</code>绝对定位，它是相对页面窗口，相对来多比较死板，不够灵活，如果你需要的效果就是定死在窗口某个地方，也可以使用该属性，为了更灵活满足页面的交互性，推荐使用相对定位来实现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: relative;left: 50%"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"position: relative;right: 50%"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>left:百分比需要一个相对参照物，直接使用，没有任何效果，所以给div一个<code>position: relative;</code>的属性。参照物是父元素。有人说用left：50%;是不是也可以用right：50%。如果你的元素的正常起始位置是在最右边，就是可以的。怎么解释呢？<br><code>position: relative;</code>也可以理解为目前元素<code>不加任何样式初始位置</code>做出相对位置改变,我们知道页面排版都是从最左边依次向右边排列，从上外下换行；那么第一个元素就是网页最左上角，相对位置的right：50%就到屏幕的左外面去了，就看不到了；当然一个元素的位置会受到<code>父元素样式</code>影响调整，所以为什么又说是相对父元素。被父元素调整到右上角，right：50%就对了。另外补充一句，left和right的移动，并不是像前面的<code>调整内容位置</code>和<code>填充内外边距</code>，而是移动了‘画布’位置。具体讲解可以参考<span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9seGJsb2cvcC8zMTUyODk3Lmh0bWw=" title="http://www.cnblogs.com/lxblog/p/3152897.html">CSS之position位置总结<i class="fa fa-external-link"></i></span></p></blockquote><p><strong>以上的方法已经完全可以兼容所有浏览器了，也不存在CSS hack问题。</strong>（<span class="exturl" data-url="aHR0cDovL3d3dy5rd3N0dS5jb20vQWRtaW4vVmlld0FydGljbGUvMjAxNDA5MDExNjA0Mjc3MzMw" title="http://www.kwstu.com/Admin/ViewArticle/201409011604277330">传送门<i class="fa fa-external-link"></i></span>）</p><h2 id="自适应居中"><a href="#自适应居中" class="headerlink" title="自适应居中"></a>自适应居中</h2><p>这里只讲到居中自适应，因为自适应的内容不只是居中，对不同大小的屏幕，自适应的排版这里不做详细说明。<br>思路是做一个弹性布局，当一个元素处于一个容器中时我们只想让它居中并不设定一个具体的宽度。这样的设计可以使用元素属性margin来设置的，实际中是改变了父元素内的容器大小，相当于空间被压缩了（外边距）；padding属性也是可以实现的，实际中是改变了容器内元素距离父元素距离（内边距），相当与把元素排斥（或者推向）靠内。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"padding: 0px 10%;text-align: center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>我们只要<code>padding：0px 50%</code>就可以把容器内元素左右排斥到中间，有趣的是超过50%会把容器撑大，能想像到吧。但是在实际排版时候，容器包裹着内容，我们把内容居中即可，当窗口大小变动的时候，容器大小会按比例自适应，然后内容再居中在变化后的容器中间。</p></blockquote><p><strong>注意理解<code>内容居中</code>和<code>标签容器居中</code>的概念</strong></p><h1 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h1><p>这里总结出6种方法，根据实际情况筛选</p><h2 id="使用line-height"><a href="#使用line-height" class="headerlink" title="使用line-height"></a>使用line-height</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"line-height: 100px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我会受影响<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>body中每个子节点，都会获取上下高度为100px的属性，内容再垂直居中，这里注意的是<code>span是内联元素，长宽只会受到内容多少的影响，并不会被width或者height属性影响</code>。最后建议加上<code>overflow: hidden;</code>属性</p></blockquote><p>优点是：</p><ol><li>对内联元素和块级元素都适用</li><li>兼容所有第五代的浏览器，兼容高</li></ol><p>缺点：</p><ol><li>会影响所有单独一行的块级元素（从上面例子可以看出）</li><li>内容有限只能一行垂直居中</li><li>对非文字，例如图片和对象，支持太不友好</li></ol><h2 id="使用padding-24px-0"><a href="#使用padding-24px-0" class="headerlink" title="使用padding: 24px 0"></a>使用padding: 24px 0</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"padding: 24px 0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>有一定基础的人会知道<code>padding：24px 0</code>其实是和<code>padding：24px 0 24px 0</code>等价的，就是上下两个内边距离24px。犹豫是调整的容器边距去垂直居中，就不会存在，内容只限制一行这种局限了。</p></blockquote><p>优点是：</p><ol><li>对内联元素和块级元素都适用</li><li>兼容所有第五代的浏览器，兼容高</li><li>对多行内容友好支持，例如图片垂直居中</li></ol><p>缺点：</p><ol><li>当设置高度的时候，容器是居中了，但是容器中的内容依然会在在容器的左上角，所以可能需要去掉这个高度，让其自适应内容的高度。</li></ol><h2 id="模拟表布局容器固定高度"><a href="#模拟表布局容器固定高度" class="headerlink" title="模拟表布局容器固定高度"></a>模拟表布局容器固定高度</h2><p>有三个核心属性代码<code>display: table-cell;vertical-align: middle;height:  num px</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"display: table-cell;vertical-align: middle;height: 100px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>容器高度需要超过内容高度，超过的部分，即为上下偏离居中的距离。</strong></p></blockquote><p>优点是：</p><ol><li>能很完美的呈现垂直居中</li></ol><p>缺点：</p><ol><li>它只适用于ie7以上（不包括ie7）浏览器的最新版本,如Mozilla，Firefox，Netscape 8，Opera和Safari和Chrome</li></ol><h1 id="利用vertical-align-middle"><a href="#利用vertical-align-middle" class="headerlink" title="利用vertical-align:middle"></a>利用vertical-align:middle</h1><p>可以实现一行多列，不同高度元素自动居中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    ul&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span><span class="selector-pseudo">:table</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">list-style-type</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    li&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span><span class="selector-pseudo">:table-cell</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">vertical-align</span><span class="selector-pseudo">:middle</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">                width:20px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                height:20px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                -webkit-border-radius: 50px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                -moz-border-radius: 50px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                border-radius: 50px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                background-color: #3d98e9;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>        </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">                width:20px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                height:20px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                -webkit-border-radius: 50px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                -moz-border-radius: 50px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                border-radius: 50px;</span></span></span><br><span class="line"><span class="tag"><span class="string">                background-color: #3d98e9;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>121<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>212<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>212<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1212<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上还可以利用多个ul可以实现多行多列</p><h2 id="使用相对定位"><a href="#使用相对定位" class="headerlink" title="使用相对定位"></a>使用相对定位</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:relative;top: 50%"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"position:relative;top: 50%;display: block"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用相对位置，和我们之前讲过的水平居中的原理是一样的，<strong>同样不推荐使用绝对定位。同样记住内联元素需要转块级元素</strong></p></blockquote><h2 id="使用绝对定位"><a href="#使用绝对定位" class="headerlink" title="使用绝对定位"></a>使用绝对定位</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"position:relative;left:50%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;top: 50%"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"position:absolute;top: 50%;display: block"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>如果硬要使用绝对定位，为了尽可能避免布局混乱，在其父元素上加上<code>position:relative;</code>,这是因为<strong>绝对定位会去寻找父元素是否为相对定位，若是那么绝对定位是会跟随其父元素的位置的</strong>。如上，很简单就同时实现了水平和垂直居中。值得注意的是<strong>绝对定位会覆盖</strong>，所以div和span 内容重合了。</p></blockquote><p>以上两种皆有以下优缺点。<br>优点是：</p><ol><li>灵活易用</li></ol><p>缺点是：</p><ol><li>在ie环境下有兼容问题，不能单独依靠相对位置来实现，有些ie版本可以，有些不支持，还有些只支持一部分，不多说了微软都放弃ie了</li></ol><h2 id="浮动“幽灵”填充法"><a href="#浮动“幽灵”填充法" class="headerlink" title="浮动“幽灵”填充法"></a>浮动“幽灵”填充法</h2><p><strong>多一个div填充物，来把你需要的内容推倒居中位置</strong>，也适用与水平居中（不觉得太麻烦和多余吗），这种做会多用一个div，无意义的透明填充物，数量多了后，会多多少少影响我的整体布局，你甚至会觉得没有结构化，而且需要你去计算内容的高度，操作不当，甚至会毁了你的原有布局，毕竟它是浮动的“幽灵”。建议少用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;height: 50%;width: 100%;margin-bottom: -40px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>关键有两点，第一点是</strong>浮动填充<strong>，第二点是</strong>margin-bottom: -Num px;<strong>，当透明填充物，下边界在居中位置时候，我们只需要把后面的内容缩进浮动块边缘上就居中了。</strong></p></blockquote><p>优点是</p><ol><li>非常灵活，你可以随意调整</li></ol><p>缺点是</p><ol><li>需要计数内容高度</li><li>浮动布局，容易影响页面</li></ol><h2 id="自适应压缩法"><a href="#自适应压缩法" class="headerlink" title="自适应压缩法"></a>自适应压缩法</h2><p>这是一种很经典的方法，利用了<code>margin：auto</code>属性的特点，<code>内联元素</code>和<code>块级元素</code>都适用。很适合用来做广告，活动，甚至图片等，显示在<strong>屏幕正中间的弹出层</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"position:relative;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;top: 0;bottom: 0;left: 0;right: 0;width: 0;height: 0;margin: auto"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"position:absolute;top: 0;bottom: 0;left: 0;right: 0;width: 0;height: 0;margin: auto"</span>&gt;</span></span><br><span class="line">JX</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>jacks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>从代码中我们可以看到，我们设定了一个<strong>屏幕边界容积</strong>，<strong>它会根据<code>width</code>和<code>height</code>的大小来自动压缩容器大小。当然为0，内容起始位置就是屏幕的正中间。如有长宽，就是居中容器的左上角。</strong>这一点文中有多次，强调到。</p></blockquote><p>当你看完这里，再加以融汇贯通，基本上可以应对所有的居中情况了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做为一个前端，一个专业的前端，基础是决定你打造自己帝国大厦的根基。本篇系统总结一下CSS水平和垂直居中的方法。在页面样式开发过程中会经常遇到。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="https://www.51201314.me/jacks/tags/CSS/"/>
    
      <category term="前端" scheme="https://www.51201314.me/jacks/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>我的圆周率故事</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/04/30/%E6%88%91%E7%9A%84%E5%9C%86%E5%91%A8%E7%8E%87%E6%95%85%E4%BA%8B/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/04/30/我的圆周率故事/</id>
    <published>2016-04-29T19:06:01.000Z</published>
    <updated>2019-06-08T20:33:54.929Z</updated>
    
    <content type="html"><![CDATA[<p>　　用了<strong>第一人称梦境法</strong>来记忆圆周率，日本的近70岁<strong>原口证</strong>大爷，应该就是运用了这类方法，能背诵到十万位。他是怎么做到的呢？他大量的运用了自己的想像力，对数字进行了图像编码，再加以链接，串联成一部长篇小说。因为我们的大脑对图像的存储和提取是非常高效而准确的，所以只要我们这些故事进行回忆，再解析出相应的数字，就可以成功无误的记忆大量的数字，并且长时间不会忘记。</p><a id="more"></a><h1 id="梦境故事编码"><a href="#梦境故事编码" class="headerlink" title="梦境故事编码"></a>梦境故事编码</h1><p>　　以下是我编写的圆周率故事，故事可能会毫无头绪，没有主线，没有章法，甚至会不切实际，完全只存在我的想像力。可参考我的<a href="../../29/我的数字图像编码整理/">图像编码表</a></p><hr><p>　　我从兜里掏出了<strong>钥匙</strong>，召唤出了一只<strong>鹦鹉</strong>，它抓了一个<strong>球儿</strong>给我，我一脚就踢飞了球，砸到了一辆<strong>路虎</strong>车上，门就打开了，我赶紧坐上去，以最快的速度开到了一座山上，撞死了一只<strong>山虎</strong>。　　为了庆祝一下我的疯狂行为，我喝了一瓶<strong>白酒</strong>，并在老虎死去的地方，挂上了一个<strong>气球</strong>，感觉有点热，我就去车里拿出一把<strong>扇儿</strong>，这时从草丛中走出来一个<strong>（三八）妇女</strong>，她给了我一个<strong>石榴</strong>。　　我就沿着她来的路，看到了一头<strong>饿牛</strong>，旁边还站着一个<strong>死神</strong>，我知道那牛要死了。<strong>（三八）妇女</strong>就把我的<strong>扇儿</strong>和<strong>气球</strong>给我。<br>　　她说你去找<strong>吴（鹏）琳</strong>吧，我就继续往前走，在河边又看到了一只<strong>饿蛙</strong>，我觉得还是眺望远处的公路，就看到了一辆<strong>巴士</strong>，我连忙走过去，踩到了一只<strong>泥鳅</strong>，当我走进汽车的时候，看到后面窗口有人在吃<strong>鸡翼</strong>。　　还有人拿着<strong>牛角</strong>，我赶紧上了车，看到第一排那个人在喝<strong>999（感冒药）</strong>，旁边座位上还堆满了<strong>球伞（隐瞒球的伞）</strong>，我开玩笑的说，中毒了应该用<strong>奇虎</strong>360杀毒。我继续往后走，看到第二排外边座位，坐着一个棒球队员，拿着<strong>棒和球</strong>。　　里面座位坐着一个苦苦吃<strong>苦瓜</strong>的女孩，第三排外边座位，有一只掉了满座位<strong>鹅鳞</strong>（鹅毛）的鹅，它正在吃里面座位上堆满的<strong>枸杞</strong>。我直接望向最后一排，看见有一尊<strong>石狗</strong>，旁边有一尊更大的<strong>石狮</strong>。　　这时开车的师傅递给了我一瓶<strong>苦酒</strong>，我就问他，车开往哪。他说<strong>峨（眉）山</strong>，山上有一只超级大的<strong>灵鸡</strong>，车上这些奇怪的人都是<strong>华裔</strong>，说我很奇怪，脚上踩着<strong>牛屎</strong>。　　叫我到山的时候，可以去拜拜<strong>灵牛</strong>，可以除晦气。我点头望向前方窗外，看见满公路的<strong>饿蛙</strong>，车上的人，都向窗外扔<strong>牛耳</strong>，蛙也不吃，死了就冒出了<strong>灵蛙</strong>，当我思索这奇怪的一切时，手机响了，是我<strong>舅舅</strong>打来的。<br>　　说我的<strong>吧友</strong>，想告诉我，<strong>饿蛙</strong>死后会去<strong>灵山</strong>，变成许许多多的<strong>石蛙</strong>，我应该拿着<strong>二胡</strong>。　　像一个<strong>绅士</strong>一样，弹奏一曲。就在这时，公路旁的河面跳出一只巨大的<strong>鳄鱼</strong>，又掉进了水了，电话也挂掉了。开车的师傅立马塞给我一个<strong>仪器</strong>，说用这个可以帮我找到<strong>灵牛</strong>，做为交换，我把我的<strong>气球</strong>给了他。</p><hr><p>上面的故事我能瞬间回忆起来，也能脱口而出数值，而且只要我不忘记故事，圆周率也不会忘记。我现在完全能背诵到圆周率小数点后第<strong>１００</strong>位，依次是<br><del>3.</del><code>1415926535 8979323846 2643383279 5028841971 6939937510 5820974944 5923078164 0628620899 8628034825 3421170679</code>　</p><h1 id="进阶玩法"><a href="#进阶玩法" class="headerlink" title="进阶玩法"></a>进阶玩法</h1><p>对每五个事物，进行片段记忆</p><ol><li>撞死<strong>山虎</strong></li><li>妇女给我<strong>石榴</strong></li><li>妇女给我<strong>扇儿</strong>和<strong>气球</strong></li><li>窗后乘客吃<strong>鸡翼</strong></li><li>第二排<strong>棒球</strong>队员</li><li>汽车最后排放着的<strong>石狮</strong></li><li>我脚下踩了<strong>牛屎</strong></li><li><strong>舅舅</strong>打电话来</li><li>灵山石蛙前拉<strong>二胡</strong></li><li>获得<strong>仪器</strong>，<strong>气球</strong>做为了交换</li></ol><p>　　记住这些片段后，就可以很容易推断出100位内任何位的数字了，我随便说一个66位是什么数字？<br>　　大脑马上脑补出第六个的片段，汽车最后排放着的<strong>石狮</strong>，然后开车的师傅就给了我<strong>苦酒</strong>，问他说去<strong>灵山</strong>，山上出现了巨大的<strong>灵鸡</strong>，灵鸡=07，那么66位就是7！<br>　　圆周率内100位记忆和撰写本篇文章，我一共用了2个小时的时间，如果除去写文章的时间，勤加练习，我们是可以在极短的时间内精准的记忆大量无规律的数字的！<br>　　在你朋友面前表演一下，他们同样也会被你的记忆力惊呆的！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　用了&lt;strong&gt;第一人称梦境法&lt;/strong&gt;来记忆圆周率，日本的近70岁&lt;strong&gt;原口证&lt;/strong&gt;大爷，应该就是运用了这类方法，能背诵到十万位。他是怎么做到的呢？他大量的运用了自己的想像力，对数字进行了图像编码，再加以链接，串联成一部长篇小说。因为我们的大脑对图像的存储和提取是非常高效而准确的，所以只要我们这些故事进行回忆，再解析出相应的数字，就可以成功无误的记忆大量的数字，并且长时间不会忘记。&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="圆周率" scheme="https://www.51201314.me/jacks/tags/%E5%9C%86%E5%91%A8%E7%8E%87/"/>
    
      <category term="记忆力" scheme="https://www.51201314.me/jacks/tags/%E8%AE%B0%E5%BF%86%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>我的数字图像编码整理</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/04/29/%E6%88%91%E7%9A%84%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E7%BC%96%E7%A0%81%E6%95%B4%E7%90%86/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/04/29/我的数字图像编码整理/</id>
    <published>2016-04-29T14:38:20.000Z</published>
    <updated>2016-04-30T17:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>联想的图像基础是名词（避免太抽象的名词），链接的关系是动词<br>在联系形容词的时候，尽量夸张，异与常态去想像，便于区别和加深印象</p><a id="more"></a><p>【】内为备选<br>00：双筒望远镜<br>01：一圈土地上长了一颗树【灵药】<br>02：铃儿<br>03：灵山<br>04：零食<br>05：灵虎<br>06：灵牛<br>07：灵鸡<br>08：灵蛙<br>09：灵狗<br>10：衣领【棒子和球、（蔡）依林】<br>11：光棍【十亿、筷子】<br>12：婴儿<br>13：医生【药山】<br>14：医师【钥匙】<br>15：鹦鹉【妖虎、药物】<br>16：衣钮<br>17：仪器【有妖气（漫画）】<br>18：尾巴【篱笆】<br>19：泥鳅【药酒、饮酒】<br>20：鹅鳞（毛）【鹅蛋、投降（英雄联盟）】<br>21：鳄鱼<br>22：两只情侣鹅<br>23：峨（眉）山<br>24：耳屎【耳饰】<br>25：饿虎【二胡】<br>26：饿牛<br>27：饿鸡【耳机】<br>28：饿蛙【恶霸】<br>29：饿狗【恶狗】<br>30：森林【山林、三菱（电梯）】<br>31：鲨鱼<br>32：扇儿【傻鹅、沙俄】<br>33：仙山<br>34：绅士<br>35：山虎【珊瑚】<br>36：山牛【山路，三鹿（奶粉）】<br>37：山鸡【三七（中草药）】<br>38：三八（妇女）【三爸】<br>39：999（感冒药）<br>40：司令<br>41：司仪<br>42：死鹅（柿儿、食饵）<br>43：死神<br>44：石狮【死士】<br>45：石虎<br>46：石牛【石榴】<br>47：石鸡【司机】<br>48：石蛙【丝瓜、死蛙】<br>49：石狗【狮鹫】<br>50：吴（鹏）琳【五灵（金木水火土）】      注：武林太抽象，不建议使用<br>51：狐狸【劳动人民】<br>52：木耳【吾儿】<br>53：虎山【五（指）山】<br>54：武士【巫师、护士】<br>55：木屋【污物（自行脑补）、古墓】<br>56：蜗牛【56个名族】<br>57：母鸡【乌鸡】<br>58：苦瓜【吾爸、古巴】<br>59：苦酒【吾狗】<br>60：硫磷<br>61：（六一）儿童（节）<br>62：牛耳<br>63：刘禅<br>64：牛屎<br>65：路虎（汽车）<br>66：溜溜（球）<br>67：楼梯<br>68：牛蛙<br>69：牛角【69式】<br>70：麒麟<br>71：鸡翼（鸡翅膀）【机翼、蜥蜴】<br>72：企鹅【妻儿】<br>73：鸡伞（印满鸡图案的伞）<br>74：骑士<br>75：奇虎（360）【积木】<br>76：犀牛【七牛（云存储）】<br>77：七喜（饮料）【七夕（7月7）、猩猩】<br>78：西瓜【jiba】<br>79：气球<br>80：百灵<br>81：白蚁【蚂蚁、华裔】<br>82：花儿<br>83：花山【花生、华生、华山】<br>84：巴士<br>85：白虎<br>86：吧友<br>87：白棋【白旗】<br>88：（阿里）巴巴<br>89：白酒<br>90：90后<br>91：球衣【囚衣】<br>92：球儿<br>93：球伞【印满球的伞】<br>94：教师【教室】<br>95：酒壶【救护（车）】<br>96：酒楼<br>97：枸杞【酒席】<br>98：酒吧<br>99：舅舅</p><p>0：棒球<br>1：棒<br>2：鹅<br>3：伞<br>4：屎<br>5：虎<br>6：牛<br>7：鸡<br>8：蛙<br>9：狗【酒】</p><p>以上是我自己的一套图像记忆编码，这些是记忆编码的基础，可以用<br><strong>联想故事串接方法<br>记忆宫殿法<br>第一人称梦境法</strong>（比如：96970254 翻译过来就是，我去了一家<strong>酒楼</strong>，我参加了<strong>酒席</strong>，我碰了一下座位边的<strong>铃儿</strong>响起，我就看见一群<strong>武士</strong>就把这里包围了起来。所有的动作都是一个人的五感去完成的，有别与联想法。）<br>可以去记忆圆周率（<a href="../../30/我的圆周率故事/">传送门</a>），电话号码，财务报表，扑克牌，麻将，骰子等等与数字相关的事物<br>持续整理</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;联想的图像基础是名词（避免太抽象的名词），链接的关系是动词&lt;br&gt;在联系形容词的时候，尽量夸张，异与常态去想像，便于区别和加深印象&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="记忆力" scheme="https://www.51201314.me/jacks/tags/%E8%AE%B0%E5%BF%86%E5%8A%9B/"/>
    
      <category term="数字图像编码" scheme="https://www.51201314.me/jacks/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>《奇幻森林》观后感</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/04/19/%E3%80%8A%E5%A5%87%E5%B9%BB%E6%A3%AE%E6%9E%97%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/04/19/《奇幻森林》观后感/</id>
    <published>2016-04-19T15:18:52.000Z</published>
    <updated>2019-06-08T20:33:54.910Z</updated>
    
    <content type="html"><![CDATA[<p>　　《奇幻森林》是由美国华特·迪士尼影片公司出品的真人动画片，对是动画片，里面出来小男孩毛克利，其他动物都是动画！我已经深深感受到美国电影已经到了可以以假乱真的境界。迪士尼本就是做动画出生的，而如今做动画都做到如同真实的一样，我就问一句，人是不是也可以捏出来，以后什么演员都不需要，直接一台电脑，各种大片就有了。</p><a id="more"></a><blockquote><p>毛克利（尼尔·塞西 Neel Sethi 饰）是一个由狼群养大的人类男孩，影片围绕他的森林冒险徐徐展开。谢利·可汗，一只受过人类伤害的老虎（伊德里斯·艾尔巴 Idris Elba 配音），发誓要将毛克利铲除。为了逃脱追捕，毛克利跟随严厉的导师黑豹巴希拉（本·金斯利 Ben Kingsley 配音）和自由自在的好友棕熊巴鲁（比尔·默瑞 Bill Murray 配音），踏上了一场精彩纷呈的自我探索旅程。在这趟旅途中，毛克利遇到了一些对他居心叵测的丛林生物，包括巨蟒卡奥（斯嘉丽·约翰逊 Scarlett Johansson 配音），她用迷人的声音和眼神迷惑毛克利；还有花言巧语的猩猩路易王（克里斯托弗·沃肯 Christopher Walken 配音），他试图通过威逼利诱让毛克利交出迷幻而致命的“红花”——火焰的秘密。当森林不再是安全的家园，毛克利该何去何从？而毕生难忘的伟大冒险，才刚刚拉开序幕……<br><code>以上信息来自百度百科</code><span class="exturl" data-url="aHR0cDovL2JhaWtlLmJhaWR1LmNvbS9pdGVtL+Wlh+W5u+ajruaely8xODQwODMyMCN2aWV3UGFnZUNvbnRlbnQ=" title="http://baike.baidu.com/item/奇幻森林/18408320#viewPageContent">查看更多信息<i class="fa fa-external-link"></i></span></p></blockquote><p>　　《奇幻森林》是由美国华特·迪士尼影片公司出品的真人动画片，对是动画片，里面出来小男孩毛克利，其他动物都是动画！我已经深深感受到美国电影已经到了可以以假乱真的境界。迪士尼本就是做动画出生的，而如今做动画都做到如同真实的一样，我就问一句，人是不是也可以捏出来，以后什么演员都不需要，直接一台电脑，各种大片就有了。<br>　　本部电影的来源是根据1967年迪士尼动画片《森林王子》改编的。这些都不是今天要说的重点，重点是博主觉得从整个影片看到了人类与大自然，人类与动物，发展与毁灭，爱与仇恨，善良和邪恶……<br>　　当一个人类的孩子落入森林，被狼养大，他也许会学会一些狼的习性，但是他终究是人，人的本性却永远丢失不了，他有智慧，有人类的生存方式，高于其他动物的创造能力。然而这一切都是从人类掌握火种之后，掠夺自然，屠杀其他种群动物，改变森林所换来的进化。从影片中，小男孩是使用所谓人类的方式在喝水，在帮棕熊获取蜂蜜的时候，却得到狼爸和黑豹叔的劝阻。认为这会对森林带来灾难，动物之所以会这么想，也是因为人类长期一来都在摧毁森林，都是人类最正常的生存方式，所以也是导演想表达的意思吧。<br>　　母狼表达了母爱，老虎表达了权力和仇恶，黑豹表达了守护，棕熊表达了做最真实独特的自己，狼群的团结，蛇的诱惑，大猩猩的贪恋…..这些所有都来之人类的社会，都在这个森林中呈现了出来。而正是因为这些善与恶，正与邪，小男孩成长了，为了家园，为了自然，他的勇敢与智慧，战胜了老虎，赢得所有动物的心。<br>　　这个童话其实讲的很是深刻，整个就如同迷失的人再次找回自己的过程的故事一样。也许在生活中，你总觉得自己是异类，你抗拒规则却又不得不遵守，你排斥老师的刻板教诲却又不得不听从，当你有一个如棕熊一样爱自由又欣赏你不同的朋友时，他却说他只是在利用你的单纯和技能.当你觉得危机四伏，有无时无刻不想杀了你的猛虎，妖娆魅惑却想吞掉你的巨蟒，还有想要掠夺你的才华爬上食物链顶端的猩王。社会本是如此危险，你又不属于任何族群，然后直到有一天，你的善良，你的技能救了一头小象，你才明白，你的不同是上帝对你最大的馈赠，坚持做你自己，找回自己的路，哪怕反抗的是猛虎也没有关系，因为只有这样，你才能做最好的你，不同的世界也会认同不同的你。<br>　　换句话说<strong>人生来就是与众不同的，在成长中，不应盲目的遵从了狼群的规则，过于听话的听从了黑豹的教诲，甚至是被朋友伤心后开始放弃世界，或者遭遇被坏人迷惑，甚至屈服于权威，种种之后，迷失了自己。我们应该认同自己最真实的自己。</strong><br>　　这大概是Walt Disney对自己人生的深刻感悟，也是美国人的主流价值观。他们认为自己的职责就是要给孩子们梦想，给他们勇于做自己的精神支持，最终让他们找到自己，认同自己。最后，开一句玩笑我想说，这不就是人猿泰山少年前传吗。影片也许在是呼吁<strong>人类在进化的过程中，不应该忘记大自然，为了发展而摧毁森林和其他物种，而应该更好的回归大自然，那才是生命最初的地方。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　《奇幻森林》是由美国华特·迪士尼影片公司出品的真人动画片，对是动画片，里面出来小男孩毛克利，其他动物都是动画！我已经深深感受到美国电影已经到了可以以假乱真的境界。迪士尼本就是做动画出生的，而如今做动画都做到如同真实的一样，我就问一句，人是不是也可以捏出来，以后什么演员都不需要，直接一台电脑，各种大片就有了。&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="电影" scheme="https://www.51201314.me/jacks/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="观后感" scheme="https://www.51201314.me/jacks/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>何为三原色</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/04/17/%E4%BD%95%E4%B8%BA%E4%B8%89%E5%8E%9F%E8%89%B2/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/04/17/何为三原色/</id>
    <published>2016-04-17T13:35:01.000Z</published>
    <updated>2019-06-08T20:33:54.941Z</updated>
    
    <content type="html"><![CDATA[<p>　　色彩中不能再分解的基本色称之为原色，原色可以合成其他的颜色。三原色到底是RGB（红绿蓝）还是RYB（红黄蓝），对初学者来说经常是不易理解和迷惑的问题，博主思考一番后，阐述其中的科学知识，供大家一起学习参考讨论。</p><a id="more"></a><h1 id="颜色从何而来"><a href="#颜色从何而来" class="headerlink" title="颜色从何而来"></a>颜色从何而来</h1><p>　　博主认为<strong>颜色的来源取决于光。</strong>自然光中蕴藏着许多能量，从爱因斯坦的质能方程E=mc²和光子的能量方程E=HV，我们可以知道一束光也是一股强大的能量。</p><p style="color:red">为什么说颜色的来源取决于光呢？</p>　　我们知道光可以分解成光谱，当光谱反射到眼睛的时候，我们就能观察到颜色。光能有传播性质，而物质有吸收性质。当光照射在不同物体上时，不同的物体会对光的不同波段有着不同大小的吸收能力，没有被吸收的波段就会被反射出来，人的眼睛通过捕获到这些反射光，经过大脑处理后便会呈现出物体的颜色和样子。（博主觉得不同物体的分子或者原子结构影响着其对不同波段的吸收能力，才导致为什么树木都这个色，叶子都哪个色，这里不做深究）<h1 id="色光三原色"><a href="#色光三原色" class="headerlink" title="色光三原色"></a>色光三原色</h1><p>　　如果载体是发光源，例如显示屏（电子呈像等），光线会越加越亮，两两混合可以得到更亮的中间色，最终为白色。这里的三原色就是<code>R（红）G（绿）B（蓝）</code>。颜色的混合是从暗（黑）到亮（白）的<a href="#_color">加色法</a>原理去理解。<br>　　学计算机美工设计的朋友经常会接触到RGB值（#0000FF），这是工业界的一种颜色标准值。通常是用十进制0~265来表示原色的强弱，在计算机上面用RGB值是转换为十六进制。</p><blockquote><p>十进制　　R192/G128/B51　<span style="border: double 5px;color:#c08033"></span><br>十六进制　#C0 80 33　<span style="border: double 5px;color:#c08033"></span></p></blockquote><p>熟悉RGB值的朋友，只需要看值就能脑补出颜色了，至少可以知道偏向哪种颜色。#000000 理解成没有光，自然就是黑色；#FFFFFF全部光色到齐，就是白色。<br><img src="https://www.51201314.me/OSS/blog/img/RGB.jpg" alt="RGB"></p><h1 id="颜料三原色"><a href="#颜料三原色" class="headerlink" title="颜料三原色"></a>颜料三原色</h1><p>　　如果载体是反光源，例如不发光物体，颜料易于融合，越加越黑，两两混合可以得到更黑的中间色，最终为纯黑。这里的三原色就是<code>R（红）Ｙ（黄）B（蓝）</code>。颜色的混合是从白（纯）到黑（杂）的<a href="#_color">减色法</a>原理去理解。<br>　　学美术画画的朋友在调色的时候就会用到红黄蓝这三种颜料色。<br><img src="https://www.51201314.me/OSS/blog/img/RYB.jpg" alt="RYB"></p><h1 id="加色法和减色法"><a href="#加色法和减色法" class="headerlink" title="加色法和减色法 "></a>加色法和减色法 <a name="_color"></a></h1><p>　　加色法可以理解成增加光谱色，越加色越亮，自然越白。适用于直接发光的物体。例如显示器上面的颜色。<br>　　减色法可以理解成反射后的光谱色，混合物反射的光越少，看上去就越黑，比如黑洞不反光，越纯越反光，所以刺眼白光。适用于自己不发光，反光的物体。例如颜料，所有不发光的物体。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　色彩中不能再分解的基本色称之为原色，原色可以合成其他的颜色。三原色到底是RGB（红绿蓝）还是RYB（红黄蓝），对初学者来说经常是不易理解和迷惑的问题，博主思考一番后，阐述其中的科学知识，供大家一起学习参考讨论。&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="三原色" scheme="https://www.51201314.me/jacks/tags/%E4%B8%89%E5%8E%9F%E8%89%B2/"/>
    
      <category term="颜色" scheme="https://www.51201314.me/jacks/tags/%E9%A2%9C%E8%89%B2/"/>
    
      <category term="美术" scheme="https://www.51201314.me/jacks/tags/%E7%BE%8E%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript闭包总结</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/04/17/JavaScript%E9%97%AD%E5%8C%85%E6%80%BB%E7%BB%93/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/04/17/JavaScript闭包总结/</id>
    <published>2016-04-16T16:22:21.000Z</published>
    <updated>2016-04-17T05:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　闭包可以说在JavaScript的函数表达式方面是一个很重要的知识点。有不少初学者总搞不清楚<strong>匿名函数</strong>和<strong>闭包</strong>这两个概念，这里都一一做一个总结，巩固自己，希望对初学者有帮助。</p><a id="more"></a><h1 id="闭包的概念"><a href="#闭包的概念" class="headerlink" title="闭包的概念"></a>闭包的概念</h1><p>　　<strong>闭包是指有权去访问另一个函数作用域中的变量的函数。</strong>这句话很好理解，首先它是一个函数，其次是有权访问另一个函数作用域中的变量。我们知道局部方法可以访问外部父类方法的属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> firstValue = <span class="string">'JX'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(firstValue);</span><br><span class="line">&#125;</span><br><span class="line">f1();</span><br></pre></td></tr></table></figure><p><code>输出</code></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">JX</span></span><br></pre></td></tr></table></figure><p style="color:red">而从父类去获取子函数方法的属性的值是否也可以呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> secondValue = <span class="string">'love'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(secondValue);</span><br></pre></td></tr></table></figure><p><code>输出</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught ReferenceError: secondValue <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><p>结果显示参数获取不到的错误，secondValue未定义。也就是说函数外的区域是获取不到里面的变量的，这是函数作用域所决定的。</p><p style="color:red">那如果我们需要在外部获取到这个变量应该怎么办呢？</p>我们可以利用函数可以获取外部变量这一个特性，再把这个函数做为返回值return出来，这一思路就可以轻松实现。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> thirdValue = <span class="string">'you'</span>;</span><br><span class="line">    <span class="keyword">var</span> fourthValue = <span class="string">'!'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f4</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> get_thirdValue = thirdValue;</span><br><span class="line">        <span class="keyword">var</span> get_fourthValue = fourthValue;</span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">            thirdValue : get_thirdValue,</span><br><span class="line">            fourthValue : get_fourthValue</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f4;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> getMan = f3();</span><br><span class="line"><span class="built_in">console</span>.log(getMan().thirdValue);</span><br></pre></td></tr></table></figure><p><code>输出</code></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">you</span></span><br></pre></td></tr></table></figure><p>  而我们返回的这个函数，即f4()就是一个闭包，是不是很简单。<br>在上面的代码中，函数f4就被包括在函数f3内部，这时f3内部的所有局部变量，对f4都是可见的。但是反过来就不行，f4内部的局部变量，对f3就是不可见的。这就是Javascript语言特有的<strong>“链式作用域”结构（chain scope）</strong>，子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。</p><h1 id="闭包的特性"><a href="#闭包的特性" class="headerlink" title="闭包的特性"></a>闭包的特性</h1><blockquote><ol><li>嵌套在函数里的函数</li><li>有权访问函数外面的参数和变量</li><li>参数和变量不会被垃圾回收机制回收</li></ol></blockquote><p>看到这，前两个特性已经很清楚了，那么说说第三个。我们都知道JavaScript和大多数语言一样也有垃圾回收机制。在什么情况下会被回收呢？如下</p><blockquote><ul><li>如果一个对象不再被引用，那么这个对象就会被<code>GC</code>回收；</li><li>如果两个对象互相引用，而不再被第三者所引用，那么这两个互相引用的对象也会被回收。</li></ul><p><strong><em>（垃圾回收不是本篇的重点，不做详细解读，更多可以传送到<code>JavaScript垃圾回收总结</code>）</em></strong></p></blockquote><p>看之前的代码<strong>f3是f4的父函数，而f4被赋给了一个全局变量，这导致f4始终在内存中，而f4的存在依赖于f3，因此f3也始终在内存中，不会在调用结束后，被垃圾回收机制（garbage collection）回收。</strong></p><h1 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><blockquote><ol><li>希望一个变量长期驻扎在内存中</li><li>避免全局变量的污染</li><li>私有成员的存在</li><li>使用闭包可以大大减少我们的代码量</li></ol></blockquote><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><blockquote><ol><li>变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除,把值置null。</li><li>被保存在内存中的变量可以在函数外部改变。所以如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。</li></ol></blockquote><h1 id="闭包的使用"><a href="#闭包的使用" class="headerlink" title="闭包的使用"></a>闭包的使用</h1><p>说到它的使用就不得不提及到<strong>匿名函数</strong></p><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>函数是JavaScript中最常见也最灵活的一种对象。顾名思义匿名函数就是没有函数名的函数。</p><h3 id="匿名函数的定义"><a href="#匿名函数的定义" class="headerlink" title="匿名函数的定义"></a>匿名函数的定义</h3><p>JS中函数的常见定义大致有三种。其中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> anonymousFun = <span class="function"><span class="keyword">function</span>(<span class="params">arg</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arg++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>=号右边的函数就是一个匿名函数。<br>第二种方式，接触过jQuery的博友，就非常常见到。形如<code>()();</code>,第一个括号放匿名函数体，第二个括号放调用的参数,可为空。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">arg1,arg2</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arg1+arg2);</span><br><span class="line">&#125;)(<span class="number">7</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><p>匿名函数最多的用途是创建闭包，并且还可以构建命名空间，以减少全局变量的使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> namespace = &#123;&#125;;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> firstValue = <span class="string">'JX'</span>;</span><br><span class="line">    <span class="keyword">var</span> secondValue = <span class="string">'love'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> firstEvent = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstValue+<span class="string">' '</span> +secondValue;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    namespace.firstEvent = firstEvent;</span><br><span class="line">&#125;)();</span><br><span class="line">namespace.firstEvent();</span><br></pre></td></tr></table></figure><p><code>输出</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"JX love"</span></span><br></pre></td></tr></table></figure><h1 id="最后小测试"><a href="#最后小测试" class="headerlink" title="最后小测试"></a>最后小测试</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在页面上添加自定义的新节点</span></span><br><span class="line"><span class="keyword">var</span> htmlChild=<span class="string">"&lt;ul&gt;&lt;li&gt;L&lt;/li&gt;&lt;li&gt;O&lt;/li&gt;&lt;li&gt;V&lt;/li&gt;&lt;li&gt;E&lt;/li&gt;&lt;/ul&gt;"</span>;</span><br><span class="line"><span class="keyword">var</span> newNode = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">newNode.innerHTML =htmlChild;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(newNode);</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加js事件监听</span></span><br><span class="line"><span class="keyword">var</span> lists = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;lists.length;i++)&#123;</span><br><span class="line">    lists[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>输出</code></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p>你会发现当鼠标移过每一个li元素时，控制台总是显示4，而不是我们期待的元素下标。这是为什么呢？当mouseover事件调用监听函数时，首先在匿名函数（ function(){ console.log(i);}）内部查找是否定义了 i，结果是没有定义；因此它会向上查找，查找结果是已经定义了，并且i的值是4（循环后的i值）。所以最终每次显示的都是4。</p><blockquote><p>解决方法一：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lists = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;lists.length;i++)&#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line">        lists[ index ].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(index);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i的值是4，index的值0-3保存在内存中了。</p><blockquote><p>解决方法二：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lists = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;lists.length;i++)&#123;</span><br><span class="line">    lists[ i ].$$index = i;</span><br><span class="line">    lists[ i ].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.$$index);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过在Dom元素上绑定$$index属性记录下标</p><blockquote><p>解决方法三:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个闭包函数 index 会被保存在内存中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">listenEvent</span>(<span class="params">list,index</span>)</span>&#123;</span><br><span class="line">    list.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lists = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;lists.length;i++)&#123;</span><br><span class="line">    listenEvent(lists[ i ] , i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　闭包可以说在JavaScript的函数表达式方面是一个很重要的知识点。有不少初学者总搞不清楚&lt;strong&gt;匿名函数&lt;/strong&gt;和&lt;strong&gt;闭包&lt;/strong&gt;这两个概念，这里都一一做一个总结，巩固自己，希望对初学者有帮助。&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
      <category term="闭包" scheme="https://www.51201314.me/jacks/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>那些加班与不加班的年华</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/03/30/%E9%82%A3%E4%BA%9B%E5%8A%A0%E7%8F%AD%E4%B8%8E%E4%B8%8D%E5%8A%A0%E7%8F%AD%E7%9A%84%E5%B9%B4%E5%8D%8E/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/03/30/那些加班与不加班的年华/</id>
    <published>2016-03-30T01:07:36.000Z</published>
    <updated>2016-03-30T07:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　<strong>加班还是不加班，这是一个问题</strong>。对于上班一族来说，加班一直都是撇不开的话题，一些人加班或许是为了会赢得上司的青睐，得到更多机会和报酬，甚至是提升自己的职场技能，另一些人不愿加班又或许是想花更多的时间，去经营亲情、爱情和其他的生活。就何为加班，加班的对与错，是与非，攻与防，博主根据自己的一些想法和观念来做一一分析。</p><a id="more"></a><p>　　博主待过上市公司，也闯荡过创业公司，他们的制度与待遇，甚至加班文化都有大大的不同，善于总结和研究的我，给出自己的理解，若有出入，敬请谅解。</p><h1 id="何为加班"><a href="#何为加班" class="headerlink" title="何为加班"></a>何为加班</h1><p>　　加班顾名思义，就是额外增加的上班。</p><blockquote><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p> 加班，是指在规定的工作时间外，延长工作时间、休息日工作又不能安排补休的或法定休假日工作的。称为“加班”。</p></blockquote><h2 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h2><p> （一）延长工作时间加班。<br> （二）休息日工作又不能安排补休的加班。<br> （三）定休假日加班。<br> 以上摘自《劳动法》</p><p>　　中华劳动人民从古至今是<strong>一份汗水一份收获</strong>，在大好的社会主义制度下，为了杜绝资本主义的压榨，这额外的汗水和收获，法律上是如何规定的呢。</p><blockquote><h2 id="加班费"><a href="#加班费" class="headerlink" title="加班费"></a>加班费</h2><p>《劳动法》第四十四条　有下列情形之一的，用人单位应当按照下列标准支付高于劳动者正常工作时间工资的工资报酬：<br> (一)安排劳动者延长时间的，支付不低于工资的百分之一百五十的工资报酬;<br> (二)休息日安排劳动者工作又不能安排补休的，支付不低于工资的百分之二百的工资报酬;<br> (三)法定休假日安排劳动者工作的，支付不低于工资的百分之三百的工资报酬。<br>以上摘自《劳动法》</p></blockquote><p>　　简单点就是加班费=正常工作日加班费+休息日加班费+法定休息日加班费=月工资基数/21.75<em>150%</em>正常工作日的加班时间+月工资基数/21.75<em>200%</em>休息日的加班时间+月工资基数/21.75<em>300%</em>法定休息日的加班时间<br> 　　也就是说正常工作日加班，得到<strong>工资基数1.5倍</strong>的支付，法定节假日得到<strong>工资基数3倍</strong>的支付，这个和我待过的上市公司如出一辙。而创业型公司，就大有不同，为了谋求快速发展的同时，降低人力成本，几乎都不按规则出牌，待过的人，应该深有体会。<br> 　　加班也好，这本是一个你情我愿，黄盖和周瑜CP的事情。那么加班的时限又怎样，总不能通宵达旦的战斗。<strong>有一则故事说，老板让员工下班后给他材料，结果第二天中午了，还没上交给他，老板问他不是说下班就把资料交来吗？员工回答道，还没下班…..</strong></p><blockquote><h2 id="加班时长"><a href="#加班时长" class="headerlink" title="加班时长"></a>加班时长</h2><p> (一)每日不得超过1-3小时，但是每月不得超过36小时。<br> (二)休息日工作，用人单位可以安排补休。安排补休的，不计算加班时间。<br> (三)延长工作时间加班或定休假日加班的，用人单位不得以安排补休的方式，折抵加班时间。<br>  《劳动法》第四十一条用人单位由于生产经营需要，经与工会和劳动者协商后可以延长工作时间，一般每日不得超过1小时;因特殊原因需要延长工作时间的在保障劳动者身体健康的条件下延长工作时间每日不得超过3小时，但是每月不得超过36小时。<br>  以上摘自《劳动法》</p></blockquote><h1 id="对与错"><a href="#对与错" class="headerlink" title="对与错"></a>对与错</h1><p>　　在如今经济膨胀式的发展背景下，企业为了开源节流，快速发展，任何可降低成本的事，都是关乎生死的大事，成王败寇，也就不抗拒了。<strong>这些急求劳动者加班一类的人，我们称之为周瑜派。</strong><br>　　我们经常听到或者心理暗示到这事要做成了，这点加班算得了什么。<strong>一种对未来预期的憧憬，也是造就了黄盖派。</strong><br>　　加班作用是为了花更多的时间，在规定时间前解决问题。<strong>解决问题是一个伪命题，在解决问题的过程中，总会不同程度的出现问题</strong>，我不知道科学上有没有阐述这种现象的效应，我一般会叫作问题效应。然而不同能力的人，带来问题的程度各异，就某件事能力好的人，解决7分问题，带来3分问题；解决这件事能力一般的人55开，能力差的人，37开。所以不同的项目，选择什么样更在行的人去解决，是值得好好考虑的。花更多时间，去做不对口的事，反而会带来更多问题。<br>　　对我的理解来说，出现加班的可能，<strong>不是上司分配工作量有问题，就是你完成工作的能力有问题。</strong>这两者的权衡，需要上司和下属之间去充分的了解和沟通，才能找到一个最优的平衡点，<strong>往往上司对你能力过高的估值和任务完成要求，是造成员工加班的直接原因。</strong>往往能力强的人，早就完成了任务，逛完三两个论坛，写完一两篇文章，准时下班，回家做饭，看看书，纵享人生丝滑了。至于常年加班的人，我就不调侃了（已有网友说，你加班就行了，你还TM是个单身加班汪），怪我咯？怪你CP组合有问题吧。<br>　　我是无权去深究这种CP组合的对错，毕竟都是做出来给曹操看的。</p><h1 id="是与非"><a href="#是与非" class="headerlink" title="是与非"></a>是与非</h1><p> <strong>大部分公司无偿加班已经成为了一种潜移默化的规则，俗称潜规则。</strong>你说下班时间早过了，上司领导的屁股都黏在办公椅里面了，我咋好意思抬一下屁股。万一抬一下屁股，对领导和还在加班的同事，造成一万点心灵伤害怎么办；但是下班了啊，外面的世界很精彩啊，又恍惚听到了家人朋友的呼唤啊，可是大家都没走，我要是走了，他们觉得我上班不努力怎么办，是不是就是逃兵了，要枪毙，怎么办，别人家的同事已经车子开上五环，终于有一天你会修到七环，怎么办怎么办，乱想一番后，算了还是坐下来加班吧。<br> 　　对于特殊情况，比如赶着发布，赶着上线，赶着完成这个项目，坐下来加班是合情合理的，但是被宣布无偿或者调不了休，就真是一种心累的体验。那我们是否可以通过法律的手段，来维护自己应有的权益。</p><blockquote><h2 id="法律责任"><a href="#法律责任" class="headerlink" title="法律责任"></a>法律责任</h2><p>  《劳动法》第九十条　用人单位违反本法律规定，延长劳动者工作时间的，由劳动行政部门给予警告，责令改正，并可以处以罚款。<br>  《劳动合同法》　用人单位有下列情形之一的，由劳动行政部门责令限期支付劳动报酬、加班费或者经济补偿；劳动报酬低于当地最低工资标准的，应当支付其差额部分；逾期不支付的，责令用人单位按应付金额百分之五十以上百分之一百以下的标准向劳动者加付赔偿金：<br>  （一）未按照劳动合同的约定或者国家规定及时足额支付劳动者劳动报酬的；<br>  （二）低于当地最低工资标准支付劳动者工资的；<br>  （三）安排加班不支付加班费的；<br>  （四）解除或者终止劳动合同，未依照本法规定向劳动者支付经济补偿的。<br>  以上摘自《劳动法》</p></blockquote><p>　　但就算有法律的约束，在很多行业依然是寻走擦边球和潜规则，写字楼灯火通明，亦是家常便饭，<strong>“我们做互联网的,根本不加班,因为我们从来就不下班。”</strong>有网友曾这样调侃过。互联网公司和广告公司可以说是加班现象最严重的行业。再说说弹性工作制，<strong>弹性工作制是指在完成规定的工作任务或固定的工作时间长度的前提下，员工可以灵活地、自主地选择工作的具体时间安排，以代替统一、固定的上下班时间的制度。</strong>国内的一些公司，断章取义，渐渐把弹性工作制做为一种加班的泛生体。这种灵活的工作时间制度，很难准确的去计算你的实际工作时长，有研究表明弹性工作制能增加工作营业时限，减少加班费的支出。其中的道理不言而喻。<br>最近几年常有<strong>加班未捷身先死</strong>的新闻爆出，你是要命还是要钱，这是一个问题。在一个钱=命的年代，很多人已经分辨不清。</p><h1 id="攻与防"><a href="#攻与防" class="headerlink" title="攻与防"></a>攻与防</h1><p>博主和一些大神同事总结出来以下这些，有经验的朋友欢迎补充<br>前提条件当然是友好出色地完成工作任务之下，并不是让你逃避你的工作<br><strong>让上司低估你的能力</strong>，这样分配的任务会不那么尖酸刻薄，这样你能得心应手的早早完成。能者多劳，抹杀于摇篮之中。<br><strong>有节奏的接受任务</strong>，不要有任务你都盲目的接，在Scrum敏捷开发中，有Sprint冲刺概念，这是需要团队根据实际作战能力作出计划，会更加合理。<br><strong>学会用理论知识提前证明，这是不行的</strong>，没有可行性，毫不留情的拒绝他，避免过多的研究成本，不要上线之后才发出卧槽的感叹。<br><strong>完成了我也不告诉你</strong>，当你提前完成任务的时候，应该把剩余的时间用到去总结和复查一遍，而不是直接马上告诉你的上司，COME BABY我不够，还要要。<br><strong>打好基础，总结成功的经验，提高解题效率</strong>，基础是决定你以后盖楼可以到达的高度，总结经验是为了更好高质量的盖楼，提高效率是为了快速按时交盘。楼层越高解决问题的能力越强。各种问题，分分秒杀，独孤求加班。</p><h1 id="那些年华"><a href="#那些年华" class="headerlink" title="那些年华"></a>那些年华</h1><p>　　不加班的时候，睡眠还是比较有规律的，博主喜欢泡一杯咖啡，静静地看看书，参加晚会社交活动，扩充朋友圈子和人脉，在家写写总结，陪家人聊聊天，唱唱歌，甚至公园散步，阳台闭幕放空自己，仰望一两颗星辰，思考一下人生。会有更多时间去，体验精彩的生活。<br>　　常年加班的时候，与电脑相依为命，皮肤不好，过往的朋友来往越来越少，精神粮食最爱看的书，很少翻起，若是加班太晚，第二天真心不想爬起来，偶尔导致休息不好，生活三点一线，很是单调无味，有一种整个人生都交给了公司的错觉。<br>　　适当的加班的时候，感觉挺充实，生活有追求，每天有进步，注意力集中，专业水平和职场能力提升很快。说明适当加班还是有好处的。<br>      以上是博主的情况，朋友你也可以说说你的加班与不加班的那些年华</p><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>　　加班不是生活的全部，不加班也不是你谋求上进的选择。可以说任何两个对立的选择，都是一场博弈，你需要去权衡其中的利弊，在不同的环境和情况下，灵活应变，角逐出当下最优的结果。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　&lt;strong&gt;加班还是不加班，这是一个问题&lt;/strong&gt;。对于上班一族来说，加班一直都是撇不开的话题，一些人加班或许是为了会赢得上司的青睐，得到更多机会和报酬，甚至是提升自己的职场技能，另一些人不愿加班又或许是想花更多的时间，去经营亲情、爱情和其他的生活。就何为加班，加班的对与错，是与非，攻与防，博主根据自己的一些想法和观念来做一一分析。&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="加班" scheme="https://www.51201314.me/jacks/tags/%E5%8A%A0%E7%8F%AD/"/>
    
      <category term="工作" scheme="https://www.51201314.me/jacks/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>虚拟现实VR和增强现实AR，你选择谁?</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/03/30/%E8%99%9A%E6%8B%9F%E7%8E%B0%E5%AE%9EVR%E5%92%8C%E5%A2%9E%E5%BC%BA%E7%8E%B0%E5%AE%9EAR%EF%BC%8C%E4%BD%A0%E9%80%89%E6%8B%A9%E8%B0%81/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/03/30/虚拟现实VR和增强现实AR，你选择谁/</id>
    <published>2016-03-30T01:07:05.000Z</published>
    <updated>2016-05-06T15:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　无论是虚拟现实VR还是增强现实AR，它们都在不断的改善我们的生活方式，让生活更加的精彩</p><a id="more"></a><p>　　虚拟现实VR是让你完全抛弃现实世界，让你沉浸在虚拟的世界里，而增强现实AR更多的是用虚拟数据辅助现实感官，看过龙珠的小伙伴，一定记得赛亚人的战斗力计算眼镜，那个就完全是一个增强现实AR的应用。他们的原理都是投影在你的眼球上的虚拟画面，从而欺骗的你的大脑，让你以为在一个较为“真实”的世界里。<br>　　如果就选谁来说，我觉得以后他们可能不仅仅是两个大方向，甚至会出现融合的情况。不管是同设备切换两种模式，还是融合成一种模式的体验，都是值得我们期待的。不管是从教学上，游戏娱乐上，他们的使用领域甚至可以到电商，像手机一样，清透到我们的生活里。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　无论是虚拟现实VR还是增强现实AR，它们都在不断的改善我们的生活方式，让生活更加的精彩&lt;/p&gt;
    
    </summary>
    
      <category term="让科技流行起来" scheme="https://www.51201314.me/jacks/categories/%E8%AE%A9%E7%A7%91%E6%8A%80%E6%B5%81%E8%A1%8C%E8%B5%B7%E6%9D%A5/"/>
    
    
      <category term="AR" scheme="https://www.51201314.me/jacks/tags/AR/"/>
    
      <category term="VR" scheme="https://www.51201314.me/jacks/tags/VR/"/>
    
      <category term="科技" scheme="https://www.51201314.me/jacks/tags/%E7%A7%91%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>人过半百，何去何从</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/03/28/%E4%BA%BA%E8%BF%87%E5%8D%8A%E7%99%BE%EF%BC%8C%E4%BD%95%E5%8E%BB%E4%BD%95%E4%BB%8E/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/03/28/人过半百，何去何从/</id>
    <published>2016-03-28T15:33:39.000Z</published>
    <updated>2019-06-08T20:33:54.923Z</updated>
    
    <content type="html"><![CDATA[<p>　　人过半百知天命，缘来一生破人情；何苦念念旧不忘，不如凡间逍遥行。问君何去何从，只见两袖清风。</p><a id="more"></a><p>　　人一生，匆匆几十年，一晃而过，一念昙花，一叶菩提，一语今生。酸甜苦辣，人间冷暖，是否你还在为生活体验而烦恼，而纠结，而悲喜，时而欣喜若狂，时而悲惨人生，昨天还是三十而立，如今已经望眼古稀之年。人过半百知天命，今生后世铭心前。半百之人，抑或纵享天伦之乐，抑或悲天悯人之恼，又抑或潇洒无为无作。<br>　　人过半百，必是经历过人生仇情忠义，尝遍人生苦甜，这一味，是何味，定有回味！人过半百，我想你若还是纠缠江湖之忧愁，必将庸人自扰，怨天尤人，你若还是纠缠过往之惜悔，必将自欺欺人，自寻烦恼。我觉应当放下心中怨念，审视半生之缘，问自心应当何去何从。<br>　　回望今生往年，有喜有悲，岁月不饶人，既有人来，便有人去，天命如此，人为何苦。不如两袖清风，化做逍遥与自在，忘却今夕是何年，岂不也爽哉！你若放不下，又怎拿得起，心中不悦，自是自扰，心若快乐，哪有悲苦。<br><img src="https://www.51201314.me/OSS/blog/img/oldman.jpg" alt><br>　　五十岁的人的想法和心境，也许不是我这二十多岁人应该去思考和想像，但是我却似乎能理解几十年后的我是何种心态，至少我不会后悔曾经，也不怕以往后来。当你知天命的时候，也许你会被生命的脆弱抨击，会人世沧桑的寒冷所冻伤，又或许你的问心无愧被他人的狼心狗肺，等等这一切你看不惯，想不通，摸不着的人生也许并不是你的人生，而是别人的人生，你不应该让自己活在别人的世界，甚至是你不喜欢的人的世界，也许是你待的太久，就没了原本真正属于自己的人生。人应当自己为自己而活，自求己心，自然海阔天空，万里无云。<br>　　天命自有定数，我们不必把来自于人间最美好的时光，都拿去浪费时间去想通天命为何数，想通了也无济于事，也改变不了，我们何不应当把握当下，健康积极的享乐晚年，家人是唯一的血脉，亲情是生命的骨肉，这些无价之宝，不可被世俗物欲金钱所迷惑，得不偿失，当你的精神世界崩塌，物质世界只是堆满废铁的工厂，创造不出美丽耀眼的花朵，物质的富裕更加是精神贫穷的表现，反过来也成立，最好五五开。万事万物，自我生长，不应被他人左右你的心灵，不当被世俗左右你的价值，更不应该被过去的黑暗，渲染了你光明的未来。过去早已经过去，未来的还未来到，你所拥有的现在，它也能成为一个奇迹，而这一切仅仅的是你自己是否认为这是一个奇迹。<br>　　一叶一菩提，一花一世界！你拥有的已经够多了，不是吗。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　人过半百知天命，缘来一生破人情；何苦念念旧不忘，不如凡间逍遥行。问君何去何从，只见两袖清风。&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="生命" scheme="https://www.51201314.me/jacks/tags/%E7%94%9F%E5%91%BD/"/>
    
      <category term="感悟" scheme="https://www.51201314.me/jacks/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="人生" scheme="https://www.51201314.me/jacks/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown的使用和总结</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/03/27/MarkDown%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E6%80%BB%E7%BB%93/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/03/27/MarkDown的使用和总结/</id>
    <published>2016-03-26T23:58:51.000Z</published>
    <updated>2016-05-04T11:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　Markdown 语法的目标是：成为一种适用于网络的书写语言，实现「易读易写」。你可以不必像专业编程人士一样要通过编写HTML网页，去排版才能写出有样式的文章，通过MarkDown你也可以写出排版优雅的文档。由于他的方便性和简单易写性，已经在各种网络环境得到支持和优化，国内比较常见的，例如<strong>简书</strong>和一些各种博客，国外可能过的比较多的，例如<strong>Github</strong>，主要是技术类的网站，甚至是可以编写wiki等的网页，都不同程度的支持和拥抱MarkDown。</p><a id="more"></a><p><a id="head"></a></p><h1 id="常基本见的用法"><a href="#常基本见的用法" class="headerlink" title="常基本见的用法"></a>常基本见的用法</h1><p><strong>举个栗子</strong></p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># h1</span><br><span class="line">## h2</span><br><span class="line">### h3</span><br><span class="line">#### h4</span><br><span class="line">##### h5</span><br><span class="line">###### h6</span><br><span class="line">标题一</span><br><span class="line">==</span><br><span class="line">标题二</span><br><span class="line">--</span><br></pre></td></tr></table></figure><blockquote><p>效果：</p></blockquote><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h5 id="h5"><a href="#h5" class="headerlink" title="h5"></a>h5</h5><h6 id="h6"><a href="#h6" class="headerlink" title="h6"></a>h6</h6><p>本主题NexT会自动去读取并标题生成目录导航，为了更友好的显示它，因此去掉了一些影响效果（移动端暂无次效果）</p><h2 id="加粗、重点标注、删除线"><a href="#加粗、重点标注、删除线" class="headerlink" title="加粗、重点标注、删除线"></a>加粗、重点标注、删除线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">** Ctrl+Alt+N **</span></span><br><span class="line"><span class="strong">*** Ctrl+Alt+N **</span>*</span><br><span class="line"><span class="code">`Ctrl+Alt+N`</span></span><br><span class="line">~~Jacks~~</span><br></pre></td></tr></table></figure><blockquote><p>效果：<br>** Ctrl+Alt+N **<strong>* Ctrl+Alt+N *</strong><br><code>Ctrl+Alt+N</code><br><del>Jacks</del></p></blockquote><h2 id="表格绘制"><a href="#表格绘制" class="headerlink" title="表格绘制"></a>表格绘制</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string"> 项目        </span>|<span class="string"> 价格   </span>|<span class="string">  数量  </span>|<span class="string"> 备注</span>|</span><br><span class="line">|<span class="string"> --------   </span>|<span class="string"> -----:  </span>|<span class="string"> :----:  </span>|<span class="string">:----</span>|</span><br><span class="line">|<span class="string"> 计算机     </span>|<span class="string"> $9999 </span>|<span class="string">   10     </span>|<span class="string">苹果类型</span>|</span><br><span class="line">|<span class="string"> 手机        </span>|<span class="string">   $6000   </span>|<span class="string">   5   </span>||</span><br><span class="line">|<span class="string"> 衣服        </span>|<span class="string">    $200    </span>|<span class="string">  2000  </span>||</span><br></pre></td></tr></table></figure><blockquote><p>效果：</p></blockquote><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th><th align="left">备注</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$9999</td><td align="center">10</td><td align="left">苹果类型</td></tr><tr><td>手机</td><td align="right">$6000</td><td align="center">5</td><td align="left"></td></tr><tr><td>衣服</td><td align="right">$200</td><td align="center">2000</td><td align="left">西服</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>用三个`前后包起来即可，你甚至可以在后面写上用的哪种编程语言，可以更加友好的渲染上语法高亮<br>例如下面的JavaScript代码</p><blockquote><p>效果：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $sidebar = $(<span class="string">'#sidebar'</span>);</span><br><span class="line">  <span class="keyword">var</span> headerHeight = $(<span class="string">'.header-inner'</span>).height();</span><br><span class="line">  <span class="keyword">var</span> footerOffset = <span class="built_in">parseInt</span>($(<span class="string">'.main'</span>).css(<span class="string">'padding-bottom'</span>), <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">var</span> sidebarTop = headerHeight + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  $sidebar</span><br><span class="line">    .css(&#123; <span class="string">'margin-top'</span>: sidebarTop &#125;)</span><br><span class="line">    .show();</span><br><span class="line"></span><br><span class="line">  NexT.utils.isDesktop() &amp;&amp; $(<span class="string">'.page-post-detail .sidebar-inner'</span>).affix(&#123;</span><br><span class="line">    offset: &#123;</span><br><span class="line">      top: sidebarTop,</span><br><span class="line">      bottom: footerOffset</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">大家好我是博主Jacks</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">你可以看到在本文的排版中，博主有多次用到</span></span><br></pre></td></tr></table></figure><blockquote><p>效果：<br>大家好我是博主Jacks<br>你可以看到在前面的排版，博主有多次用到</p></blockquote><p>#列表</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>早上干了什么</span><br><span class="line"><span class="bullet"> + </span>起床</span><br><span class="line"><span class="bullet"> + </span>刷牙</span><br><span class="line"><span class="bullet"> + </span>洗脸</span><br><span class="line"><span class="bullet"> + </span>吃饭</span><br><span class="line"><span class="bullet">- </span>晚上干了什么</span><br><span class="line"><span class="bullet"> + </span>逛街</span><br><span class="line"><span class="bullet"> + </span>去商场</span><br><span class="line"><span class="bullet">  * </span>买衣服</span><br><span class="line"><span class="bullet">  * </span>买鞋子</span><br><span class="line"><span class="bullet">   1. </span>买篮球鞋</span><br><span class="line"><span class="bullet">   2. </span>买高跟鞋</span><br><span class="line"><span class="bullet">   3. </span>买拖鞋</span><br><span class="line"><span class="bullet">   4. </span>买棉鞋</span><br><span class="line"><span class="bullet">  * </span>买裤子</span><br><span class="line"><span class="bullet"> + </span>回家</span><br><span class="line"><span class="bullet">- </span>明天呢</span><br><span class="line"><span class="bullet"> + </span>吃饭</span><br><span class="line"><span class="bullet"> + </span>睡觉</span><br></pre></td></tr></table></figure><blockquote><p>效果：</p><ul><li>早上干了什么<ul><li>起床</li><li>刷牙</li><li>洗脸</li><li>吃饭</li></ul></li><li>晚上干了什么<ul><li>逛街</li><li>去商场</li></ul><ul><li>买衣服</li><li>买鞋子<ol><li>买篮球鞋</li><li>买高跟鞋</li><li>买拖鞋</li><li>买棉鞋</li></ol></li><li>买裤子</li></ul><ul><li>回家</li></ul></li><li>明天呢<ul><li>吃饭</li><li>睡觉</li></ul></li></ul></blockquote><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">***</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><blockquote><p>效果：</p></blockquote><hr><hr><h2 id="链接-图片和文档"><a href="#链接-图片和文档" class="headerlink" title="链接, 图片和文档"></a>链接, 图片和文档</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">知乎</span>](<span class="link">http://www.zhihu.com</span>)</span><br><span class="line">![<span class="string">MD</span>](<span class="link">https://www.51201314.me/OSS/blog/img/markdown.png</span>)</span><br><span class="line"></span><br><span class="line">链接和图片的插入方法还可以用先插入’[]’,再通过另一个’[]’索引数字,在文章的最后提供索引地址的方法</span><br><span class="line"></span><br><span class="line">[<span class="string">百度</span>][<span class="symbol">1</span>]</span><br><span class="line">![][2]</span><br><span class="line"></span><br><span class="line">在文章的最后的索引地址代码是</span><br><span class="line"></span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">http://www.baidu.com</span></span><br><span class="line">[<span class="symbol">2</span>]:<span class="link">https://www.51201314.me/OSS/blog/img/MD.jpg</span></span><br></pre></td></tr></table></figure><blockquote><p>效果：</p></blockquote><p><span class="exturl" data-url="aHR0cDovL3d3dy56aGlodS5jb20=" title="http://www.zhihu.com">知乎<i class="fa fa-external-link"></i></span><br><img src="https://www.51201314.me/OSS/blog/img/markdown.png" alt="MD"><br><span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20=" title="http://www.baidu.com">百度<i class="fa fa-external-link"></i></span><br><img src="https://www.51201314.me/OSS/blog/img/MD.jpg" alt></p><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>锚点的用法和加超链接是一样的，只不过是当前页面的位置链接，由于MarkDown是支持HTML标签的，所有我们只需要</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">N</span>](<span class="link">#idName</span>)</span><br><span class="line"></span><br><span class="line">//下面是你要跳到的位置</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">'idName'</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>效果：<br><a href="#head">点我</a>会跳到开头</p></blockquote><h1 id="更多参考"><a href="#更多参考" class="headerlink" title="更多参考"></a>更多参考</h1><p><span class="exturl" data-url="aHR0cDovL3dvd3VidW50dS5jb20vbWFya2Rvd24v" title="http://wowubuntu.com/markdown/">http://wowubuntu.com/markdown/<i class="fa fa-external-link"></i></span><br>[月光博客] <span class="exturl" data-url="aHR0cDovL3d3dy53aWxsaWFtbG9uZy5pbmZvL2FyY2hpdmVzLzQzMTkuaHRtbA==" title="http://www.williamlong.info/archives/4319.html">http://www.williamlong.info/archives/4319.html<i class="fa fa-external-link"></i></span><br>[少数派] <span class="exturl" data-url="aHR0cDovL3NzcGFpLmNvbS8yNTEzNw==" title="http://sspai.com/25137">http://sspai.com/25137<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　Markdown 语法的目标是：成为一种适用于网络的书写语言，实现「易读易写」。你可以不必像专业编程人士一样要通过编写HTML网页，去排版才能写出有样式的文章，通过MarkDown你也可以写出排版优雅的文档。由于他的方便性和简单易写性，已经在各种网络环境得到支持和优化，国内比较常见的，例如&lt;strong&gt;简书&lt;/strong&gt;和一些各种博客，国外可能过的比较多的，例如&lt;strong&gt;Github&lt;/strong&gt;，主要是技术类的网站，甚至是可以编写wiki等的网页，都不同程度的支持和拥抱MarkDown。&lt;/p&gt;
    
    </summary>
    
      <category term="技巧修炼" scheme="https://www.51201314.me/jacks/categories/%E6%8A%80%E5%B7%A7%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="MarkDown" scheme="https://www.51201314.me/jacks/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>最强大脑，探索思维的潜力</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/03/27/%E6%9C%80%E5%BC%BA%E5%A4%A7%E8%84%91%EF%BC%8C%E6%8E%A2%E7%B4%A2%E6%80%9D%E7%BB%B4%E7%9A%84%E6%BD%9C%E5%8A%9B/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/03/27/最强大脑，探索思维的潜力/</id>
    <published>2016-03-26T23:34:33.000Z</published>
    <updated>2016-04-30T04:20:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　人属于高等思维动物，全部的能动性，大脑占据了主导作用，因为人类的大脑，才有如今高度发展的社会，因为大脑，我才有了探索和发现的能力，因为大脑，人类才得以延续的更好，如果你具有一颗最强大脑，不仅仅是自己，也将会是人类的财富，欢迎和博主一同探索大脑潜力</p><a id="more"></a><p>　　最近国内有一档科学类综艺界面，名叫“最强大脑”，在网络上可以说是刮起一股“让科学流行起来的”风，受到了大批脑力爱好者的关注和追捧。</p><blockquote><p>《最强大脑》是德国电视二台Superhirn的中国版，由江苏卫视引进。节目专注于传播脑科学知识和脑力竞技， 于2014年1月3日正式开播。节目全程邀请科学家，从科学角度，探秘天才的世界，把科学带出实验室，“让科学流行起来”。节目由《非诚勿扰》团队制作，中国、德国、意大利、西班牙与Endemol集团的国际团队合作。<br><code>以上信息来之维基百科</code> <span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTlDJTgwJUU1JUJDJUJBJUU1JUE0JUE3JUU4JTg0JTkxI2NpdGVfbm90ZS0x" title="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%BC%BA%E5%A4%A7%E8%84%91#cite_note-1">查看更多详情<i class="fa fa-external-link"></i></span></p></blockquote><p>　　博主整个三季都大致浏览了一遍，印象最深的为人称“水哥”的<span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20vcz93ZD0lRTclOEUlOEIlRTUlQUUlODclRTYlODElOTImaWU9VVRGLTg=" title="http://www.baidu.com/s?wd=%E7%8E%8B%E5%AE%87%E6%81%92&ie=UTF-8"><code>王宇恒</code><i class="fa fa-external-link"></i></span>，堪称神一般的选手。二度和日本选手国际ＰＫ赛中放弃观察并秒杀对手，着实有看头，另外在台下和<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHUuY29tL3M/d2Q9JUU2JTlEJThFJUU1JUE4JTgxJnJzdl9zcHQ9MSZyc3ZfaXFpZD0weGVkYWI2ZTg3MDAyMDgxOTImaXNzcD0xJmY9OCZyc3ZfYnA9MCZyc3ZfaWR4PTImaWU9dXRmLTgmdG49YmFpZHVob21lX3BnJnJzdl9lbnRlcj0xJmlucHV0VD0xMDYz" title="https://www.baidu.com/s?wd=%E6%9D%8E%E5%A8%81&rsv_spt=1&rsv_iqid=0xedab6e8700208192&issp=1&f=8&rsv_bp=0&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&inputT=1063"><code>李威</code><i class="fa fa-external-link"></i></span>，一同还帮助警方侦破了案件，就单单为社会做出贡献也是让人很欣赏的。<br>　　纵观整个比赛来说，中国队大多是更具不同项目晋级赛选拔出来的，不同的项目也会选出不同的人来，所以中国队员相比能力参差不齐，但是能站在这个舞台面对全世界脑力达人的时候，都是值得我们肯定的，是具备一定的实力的。国际ＰＫ赛中的国外选手，大多都是具有世界级头衔的人，这些荣誉也正是对他们实力的公认和证明，他们的脑力ＰＫ就根据<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHUuY29tL3M/aWU9dXRmLTgmZj0zJnJzdl9icD0xJnJzdl9pZHg9MiZ0bj1iYWlkdWhvbWVfcGcmd2Q9JUU5JUFEJThGJUU1JTlEJUE0JUU3JTkwJUIzJnJzdl9zcHQ9MSZvcT0lRTklQUQlOEYlRTUlOUQlQTQlRTclOTAlQjMmcnN2X3BxPWQwNGU2NGE1MDAxZWE0M2YmcnN2X3Q9MzgyZkVsV0t2JTJGWHVuYm1VWFlkYXhKMDFoSXQzdjVqQ2g4UGdobEV2VDMyQ0c4a0tLamtXa2NwUmFJaU5xM2d5NHYwNCZyc3ZfZW50ZXI9MCZpbnB1dFQ9MzU5NjkmcnN2X3N1ZzM9MTMmcnN2X3N1ZzE9MTAmcnN2X3N1Zzc9MTAwJnByZWZpeHN1Zz0lRTklQUQlOEYlRTUlOUQlQTQlRTclOTAlQjMmcnNwPTMmcnN2X3N1ZzQ9MzYwMDA=" title="https://www.baidu.com/s?ie=utf-8&f=3&rsv_bp=1&rsv_idx=2&tn=baiduhome_pg&wd=%E9%AD%8F%E5%9D%A4%E7%90%B3&rsv_spt=1&oq=%E9%AD%8F%E5%9D%A4%E7%90%B3&rsv_pq=d04e64a5001ea43f&rsv_t=382fElWKv%2FXunbmUXYdaxJ01hIt3v5jCh8PghlEvT32CG8kKKjkWkcpRaIiNq3gy4v04&rsv_enter=0&inputT=35969&rsv_sug3=13&rsv_sug1=10&rsv_sug7=100&prefixsug=%E9%AD%8F%E5%9D%A4%E7%90%B3&rsp=3&rsv_sug4=36000"><code>魏坤琳</code><i class="fa fa-external-link"></i></span>教授的分析来说，主要有记忆能力，观察能力，听觉能力，推理能力和空间想像能力，其次还有反应能力和综合判断能力。这些脑力行为的强弱，是脑力实力的判断，你的脑力能完成哪些高难度的项目，也是你的实力体现。毕竟“科学是我评判的唯一标准”，就问你6不6。<br>　　就个人而言，在这个比赛舞台上，最终的选手输赢，甚至上升至国家荣誉也好，都不是最重要的，重要的是它存在的意义。它让科学以一种轻松的方式传播，让科学流行起来，也是主持人<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHUuY29tL3M/d2Q9JUU4JTkyJThCJUU2JTk4JThDJUU1JUJCJUJBJnJzdl9zcHQ9MSZyc3ZfaXFpZD0weGVkYWI2ZTg3MDAyMDgxOTImaXNzcD0xJmY9MyZyc3ZfYnA9MCZyc3ZfaWR4PTImaWU9dXRmLTgmdG49YmFpZHVob21lX3BnJnJzdl9lbnRlcj0xJmlucHV0VD0xNDk1Mw==" title="https://www.baidu.com/s?wd=%E8%92%8B%E6%98%8C%E5%BB%BA&rsv_spt=1&rsv_iqid=0xedab6e8700208192&issp=1&f=3&rsv_bp=0&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&inputT=14953"><code>蒋昌建</code><i class="fa fa-external-link"></i></span>,为节目组初衷的诠释，各国脑力达人的PK不单单是为完善自己的脑力，也为全人类的脑力探索发展，做出贡献，在这个舞台的都是人类脑力赢家。<br>　　一向有研究精神的博主，在看了这个节目后，也是叹为观止，一时半会对自己的智商抹了把汗，有一种智商的碾压是人家比赛完了，而我还在理解项目比赛的规则，再加上博主一向有越挫越勇的精神，俗话说及时自我反省也是高智商的表现，所以博主就花了一些时间，来专门研究了一下这方面的知识。博主发现人的脑力是可以锻炼，大部分人并不具备天生的超常人脑力，当然天生异禀，只是前戏，后天的锻炼和运用才是高潮。这句话咋听起来有点污，不管这不是重点，重点是我们常人也可以通过后天的训练来提升我们脑力，经典代表人物就是被主持人叫成汪峰的<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHUuY29tL3M/d2Q9JUU3JThFJThCJUU1JUIzJUIwJnJzdl9zcHQ9MSZyc3ZfaXFpZD0weGVkYWI2ZTg3MDAyMDgxOTImaXNzcD0xJmY9MyZyc3ZfYnA9MCZyc3ZfaWR4PTImaWU9dXRmLTgmdG49YmFpZHVob21lX3BnJnJzdl9lbnRlcj0xJmlucHV0VD0xMzc1NDU=" title="https://www.baidu.com/s?wd=%E7%8E%8B%E5%B3%B0&rsv_spt=1&rsv_iqid=0xedab6e8700208192&issp=1&f=3&rsv_bp=0&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&inputT=137545"><code>王峰</code><i class="fa fa-external-link"></i></span>。小小年纪和博主年龄相当就获得了世界记忆大师的称号，就快速记忆能力，博主自叹不如，膝行而前，以头抢地，但是咋们比过人家，但是可以学习和模仿，俗话说模仿是成功的捷径。其实早在欧洲古代，记忆力的训练就有成套的方法，最为出名的，也是传闻中的“记忆宫殿”法，这个在英伦版的卷发福尔摩斯，也就是英剧<span class="exturl" data-url="aHR0cDovL2JhaWtlLmJhaWR1LmNvbS9saW5rP3VybD1VLWtHV2xwRy1hTmQ3cFNQRE5EUGo3S2ZaM2g1SnpfNHFqenV6eGRFajMwTVdQTzdMNWVCRTNmUVlOWUZGYnI3eWxUZ0R3YWVBX3pBVzJZb2V2SWZRY09vT3RIZmNSVWtYZmRKUHJWWXdBZQ==" title="http://baike.baidu.com/link?url=U-kGWlpG-aNd7pSPDNDPj7KfZ3h5Jz_4qjzuzxdEj30MWPO7L5eBE3fQYNYFFbr7ylTgDwaeA_zAW2YoevIfQcOoOtHfcRUkXfdJPrVYwAe"><code>神探夏洛克</code><i class="fa fa-external-link"></i></span>中所有提到，博主第一次也是从次神剧中了解到的。<br>　　何为<strong>记忆宫殿</strong>？在此不做详细解答，之后博主会专门写一篇记忆宫殿的文章，供大家一起学习探索。<br>　　只要我们合理运用正确的方法去学习和练习，我们就会以事半功倍的情况得到成长，所以是否有正确的方法是决定你成长快慢的直接决定因素，而这些正确的方法，是前人们不断的摸索和总结，提取的经验，是成千上万次失败后的果实，我们应当带着感恩的心态去学习这一切。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　人属于高等思维动物，全部的能动性，大脑占据了主导作用，因为人类的大脑，才有如今高度发展的社会，因为大脑，我才有了探索和发现的能力，因为大脑，人类才得以延续的更好，如果你具有一颗最强大脑，不仅仅是自己，也将会是人类的财富，欢迎和博主一同探索大脑潜力&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="记忆力" scheme="https://www.51201314.me/jacks/tags/%E8%AE%B0%E5%BF%86%E5%8A%9B/"/>
    
      <category term="最强大脑" scheme="https://www.51201314.me/jacks/tags/%E6%9C%80%E5%BC%BA%E5%A4%A7%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>Simple talk about English</title>
    <link href="https://www.51201314.me/jacks/en/2016/03/24/talk-english/"/>
    <id>https://www.51201314.me/jacks/en/2016/03/24/talk-english/</id>
    <published>2016-03-23T23:49:33.000Z</published>
    <updated>2016-03-26T00:07:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Don’t cram, should be flexible to use!</p><a id="more"></a><p>My hometown is English education relatively late compared with big cities,when we were began to learn the alphabet letters in grade one in junior high school.Also coupled with my ability to learn English is not strong,it’s conceivable that my English level has been low.But even so,however,I still think I should learn English well,at least you can use it in your life.<br>How to learn English well is the thing I’ve been looking for,maybe related to memory,perhaps related to practice methods.But the only thing I can be sure is that you have the perseverance to use it.Either today or tomorrow,but one day,perhaps similar to people like me can also learn English well successfully.<br><img src="https://www.51201314.me/OSS/blog/img/speak_english.jpg" alt><br>Speak!Don’t cram,we should be flexible to use it</p><p>Note:The above pictures from Google,thanks</p><pre><code>Thank you for your busy schedule to read this article</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Don’t cram, should be flexible to use!&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="English" scheme="https://www.51201314.me/jacks/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2016/03/24/hello-Hexo/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2016/03/24/hello-Hexo/</id>
    <published>2016-03-23T19:24:20.000Z</published>
    <updated>2019-06-08T12:18:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　这是第一篇博文，起因是博主准备手动搭建一个静态页面的博客，选择了Hexo</p><a id="more"></a><h1 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h1><p>　　在博主看来选择永远都可以成为一个话题，每一次选择就会决定你之后的体验和成长的方向，是伴随人一生的权利。所以每一次选择都应该认真的思考面对。<br>　　大家好，这是第一篇博文，比较有纪念意义，整个博客是用Hexo搭建和生成的比较简单强大，选择Hexo也是我进过一整对比后的选择。目前在前端比较流行的选择可能就是<span class="exturl" data-url="aHR0cHM6Ly9qZWt5bGxyYi5jb20v" title="https://jekyllrb.com/">Jekyll<i class="fa fa-external-link"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==" title="https://hexo.io/">Hexo<i class="fa fa-external-link"></i></span>，其他的可以用来搭建博客的还有WordPress、Octopress、Joomla等等，这里不做一一介绍，有兴趣的博友，可以上Google、百度等搜索引擎查阅。<br>　　我选择Hexo的原因主要有两个，一个Jekyll是用Ruby写的，而Hexo是基于Nodejs，也就是说他们的运行环境对我来讲，Hexo会更加熟悉一些，当然有博友说JeKyll的博文渲染生成速度相对来说比较慢，对于大博主来说后期可能就比较吃力，Hexo用JavaScript来跑，速度还是杠杆的。第二个就是文档，对于现目前的博主我来说看英文文档相比中文文档还是有点慢的，看一会儿可能就要查阅一个单词，真是英语不强的宝宝，说多了都是泪。Hexo是一个台湾同胞写的，毕竟要支持国产货嘛。其次再加上一些跟风心理的作用，国内用Hexo的工程师朋友还是大有人在，观看了他们的博客最下面都是by Hexo，博主就心动了。<br>　　后来我发现还有个<span class="exturl" data-url="aHR0cHM6Ly9nb2h1Z28uaW8=" title="https://gohugo.io">Hugo<i class="fa fa-external-link"></i></span>,号称是全世界构建最快的框架。主要是喜欢hexo的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0" title="https://github.com/theme-next/hexo-theme-next">nexT<i class="fa fa-external-link"></i></span>主题和懒得再折腾了，可能我也心动的换了，不过还没搭建过的小伙伴，倒是可以试试。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>　　接下来博主说说安装Hexo过程遇到的问题。<br>　　Hexo需要的环境是<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==" title="https://nodejs.org/en/">Nodejs<i class="fa fa-external-link"></i></span>，所有你首先需要下载这个，博主是Windows8.1 64X的系统，之前有安装V4.2.4LTS的版本，Windows上面安装很简单，与桌面应用软件安装一样，万能的下一步、下一步就可以搞定，安装完成你需要用命令行来完成Hexo的下载和安装，以管理员的权利运行DOS命令框，博主用的是Atom编辑器，自己下载了一个快捷打开DOS命令的插件，Atom还是挺炫的，感兴趣的朋友也可以玩玩。我们要用到<a href="www.npmjs.com/">npm</a>，一个JavaScript的包管理工具，很好用。我就需要用这管理工具来下载Hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install Hexo-cli -g -d</span><br></pre></td></tr></table></figure><ul><li>参数  </li><li>-g 是代表全局目录下  </li><li>-d 是代码详细显示运行状态</li></ul><p>　　博主有VPN还是有点慢，可能是网络问题，如果没有VPN的朋友可以试试淘宝团队提供的cnpm国内镜像，号称每10分钟会和npm同步一下，就墙内的朋友来说这个选择还是不错的。<br>　　接着只需要安顺序运行下面命令就可以生成一个网站的博客网站。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init 文件夹名字</span><br><span class="line"><span class="built_in">cd</span> 文件夹名字</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><ul><li>生成的博客文件地址系统会默认一下，当然你也可以修改这个地址，这里就不一一讲解了，更多的可以查看<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbA==" title="https://hexo.io/zh-cn/docs/index.html">Hexo中文文档<i class="fa fa-external-link"></i></span>  </li></ul><p>　　运行完最后一行命令成功后，就说明本地博客服务器也运行好了，按照提示你只需要访问<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==" title="http://localhost:4000/">http://localhost:4000/<i class="fa fa-external-link"></i></span> 就能看到他了<br>　　好了，今天就到此结束，时间不早了，最近睡的都挺晚的。下面是Hexo自动生成的第一篇文件，还是保留吧。</p><hr><p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==" title="https://hexo.io/">Hexo<i class="fa fa-external-link"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv" title="https://hexo.io/docs/">documentation<i class="fa fa-external-link"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=" title="https://hexo.io/docs/troubleshooting.html">troubleshooting<i class="fa fa-external-link"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==" title="https://github.com/hexojs/hexo/issues">GitHub<i class="fa fa-external-link"></i></span>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s" title="https://hexo.io/docs/writing.html">Writing<i class="fa fa-external-link"></i></span></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=" title="https://hexo.io/docs/server.html">Server<i class="fa fa-external-link"></i></span></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s" title="https://hexo.io/docs/generating.html">Generating<i class="fa fa-external-link"></i></span></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZGVwbG95bWVudC5odG1s" title="https://hexo.io/docs/deployment.html">Deployment<i class="fa fa-external-link"></i></span></p><p>提示：若遇到超链接对应的网站打不开是，可能需要你用VPN进行翻墙，才能访问，毕竟你活在天朝的墙下面。</p><h1 id="进阶小技巧"><a href="#进阶小技巧" class="headerlink" title="进阶小技巧"></a>进阶小技巧</h1><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>如果你希望强行预览草稿，更改配置文件：</p><p>===================</p><p>render_drafts: true</p><p>===================</p><p>或者，如下方式启动server：</p><p>======================</p><p>$ hexo server –drafts</p><h2 id="标签插件"><a href="#标签插件" class="headerlink" title="标签插件"></a>标签插件</h2><p><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnMuaHRtbA==" title="https://hexo.io/docs/tag-plugins.html">官方文档地址<i class="fa fa-external-link"></i></span></p><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Hexo https://hexo.io/docs/tag-plugins.html#Block-Quote Block-Quote %&#125;</span><br><span class="line">content 引言</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>content 引言</p><footer><strong>Hexo</strong><cite><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnMuaHRtbCNCbG9jay1RdW90ZQ==" title="https://hexo.io/docs/tag-plugins.html#Block-Quote">Block-Quote<i class="fa fa-external-link"></i></span></cite></footer></blockquote><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [la<span class="symbol">ng:la</span>nguage] [url] [link <span class="built_in">text</span>] %&#125;</span><br><span class="line"><span class="built_in">code</span> snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% codeblock _.compact ht<span class="symbol">tp:</span>//underscorejs.org/#compact Underscore.js %&#125;</span><br><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="built_in">false</span>, <span class="number">2</span>, '', <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><figure class="highlight excel"><figcaption><span>_.compact</span><span class="exturl" data-url="aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvI2NvbXBhY3Q=" title="http://underscorejs.org/#compact">Underscore.js<i class="fa fa-external-link"></i></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="built_in">false</span>, <span class="number">2</span>, '', <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><h3 id="引文"><a href="#引文" class="headerlink" title="引文"></a>引文</h3><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">pullquote</span> [class] %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endpullquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote class="pullquote class"><p>content</p></blockquote><p>我理解的可能和直接用&gt; 是一样的效果</p><h3 id="关联文章"><a href="#关联文章" class="headerlink" title="关联文章"></a>关联文章</h3><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">post_path</span> filename %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">post_link</span> filename [optional text] %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>效果如下：</p><a href="/jacks/zh-CN/2016/04/17/何为三原色/" title="何为三原色">何为三原色</a><h3 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h3><p>HTML方式: 直接在 Markdown 文件中编写 HTML 来调用<br>其中<code>class=&quot;blockquote-center&quot;</code>是必须的</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">blockquote </span>class=<span class="string">"blockquote-center"</span>&gt;<span class="keyword">blah </span><span class="keyword">blah </span><span class="keyword">blah&lt;/blockquote&gt;</span></span><br></pre></td></tr></table></figure><p>标签 方式，要求版本在0.4.5或以上</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">centerquote</span> %&#125;</span><span class="xml">blah blah blah</span><span class="template-tag">&#123;% <span class="name">endcenterquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote class="blockquote-center">blah blah blah</blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><span class="exturl" data-url="aHR0cDovL2licnVjZS5pbmZvLzIwMTMvMTEvMjIvaGV4by15b3VyLWJsb2cv" title="http://ibruce.info/2013/11/22/hexo-your-blog/">hexo你的博客<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　这是第一篇博文，起因是博主准备手动搭建一个静态页面的博客，选择了Hexo&lt;/p&gt;
    
    </summary>
    
      <category term="代码技术" scheme="https://www.51201314.me/jacks/categories/%E4%BB%A3%E7%A0%81%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JavaScript" scheme="https://www.51201314.me/jacks/tags/JavaScript/"/>
    
      <category term="Hexo" scheme="https://www.51201314.me/jacks/tags/Hexo/"/>
    
      <category term="博客" scheme="https://www.51201314.me/jacks/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>社存观</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2014/12/12/%E7%A4%BE%E5%AD%98%E8%A7%82/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2014/12/12/社存观/</id>
    <published>2014-12-11T16:00:00.000Z</published>
    <updated>2019-06-28T10:14:17.131Z</updated>
    
    <content type="html"><![CDATA[<p>社会生存观简称社存观</p><a id="more"></a><p>这是一个跟风的年代，冷静思考后，再做决定，如果不懂游戏规则，你会输得很惨，却还以为自己赢的很漂亮。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;社会生存观简称社存观&lt;/p&gt;
    
    </summary>
    
      <category term="成为一个有思想的人" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E6%80%9D%E6%83%B3%E7%9A%84%E4%BA%BA/"/>
    
    
      <category term="社会" scheme="https://www.51201314.me/jacks/tags/%E7%A4%BE%E4%BC%9A/"/>
    
      <category term="生存" scheme="https://www.51201314.me/jacks/tags/%E7%94%9F%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>樱花和雪花</title>
    <link href="https://www.51201314.me/jacks/zh-CN/2011/04/09/%E6%A8%B1%E8%8A%B1%E5%92%8C%E9%9B%AA%E8%8A%B1/"/>
    <id>https://www.51201314.me/jacks/zh-CN/2011/04/09/樱花和雪花/</id>
    <published>2011-04-08T16:00:00.000Z</published>
    <updated>2019-06-27T16:52:09.223Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>很久没写东西了，离开自己的“家”都很远了，是不是该回去看一下了呢.</p><p>每天都在这颠簸现实的世界里遨游，似乎忘一些内心原本保留下来的纯真，现实是强大的，它的引力强大的拉着每个人类不得不深刻的面对它，然而我们不仅都交叉生活在这同一的现实世界里，我们每一个人也都还生活在另一个自己虚幻的世界里——内心世界，这个世界也是强大的，但却是很能交叉的，我敢说一对哪怕亲密无比的恋人，都从来没有把对方的内心读懂过，因为那是一个除了自己别人都去不了的世界，有时候这世界强大的连我们自己都不能完全明了，它让我们自己看自己都是模糊不清的，我们都不知道自己在想什么，到底要要什么。它依然有着白昼和黑夜……这个世界就像只住了半个自己的家！</p><p>然而我却清晰的知道，每一个内心世界最初太阳升起的那一刻都是美丽的，迷人的。就像最初的天使那洁白的翅膀上的羽毛一样，很温暖.我常常：想天上的雪花是每个折翅的男天使背上凋零的羽毛，地上的樱花是每个折翅的女天使背上凋零的羽毛，至于为什么会凋零，也许只要天使们自己才知道。樱花是温暖的春季才会降临人间的，而雪花要到寒风的冬天才会来到，可以说他们是永远不会交汇在一起的……</p><p>然而那个世界里，雪花和樱花正在同时的随风飘落着……真的好美啊！！今天一个人走在树林间，一阵风过，树叶都随风缓缓飘零了我一身，突然有一整莫名的触动，真是的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;很久没写东西了，离开自己的“家”都很远了，是不是该回去看一下了呢.&lt;/p&gt;
&lt;p&gt;每天都在这颠簸现实的世界里遨游，似乎忘一些内心原本保留下来的纯真，现实是强大的，它的引力强大的拉着每个人类不得不深刻的面对它，然而我们不仅都交叉生活在这同一
      
    
    </summary>
    
      <category term="成长的烙印" scheme="https://www.51201314.me/jacks/categories/%E6%88%90%E9%95%BF%E7%9A%84%E7%83%99%E5%8D%B0/"/>
    
    
      <category term="人生" scheme="https://www.51201314.me/jacks/tags/%E4%BA%BA%E7%94%9F/"/>
    
      <category term="大学" scheme="https://www.51201314.me/jacks/tags/%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
</feed>
